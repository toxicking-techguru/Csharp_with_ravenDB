<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Raven.Client</name>
    </assembly>
    <members>
        <member name="F:Raven.Client.Constants.Documents.Indexing.Spatial.EarthMeanRadiusKm">
             <summary>
             The International Union of Geodesy and Geophysics says the Earth's mean radius in KM is:
            
             [1] http://en.wikipedia.org/wiki/Earth_radius
             </summary>
        </member>
        <member name="F:Raven.Client.Documents.BulkInsert.BulkInsertOperation._disposeOnce">
            <summary>
            The problem with this function is that it could be run but not
            awaited. If this happens, then we could concurrently dispose the
            bulk insert operation from two different threads. This is the
            reason we are using a dispose once.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.BulkInsert.BulkInsertOptions.SkipOverwriteIfUnchanged">
            <summary>
            Determines whether we should skip overwriting a document when it is updated by exactly the same document (by comparing the content and the metadata)
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Changes.DocumentChange.Type">
            <summary>
            Type of change that occurred on document.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Changes.DocumentChange.Id">
            <summary>
            Identifier of document for which notification was created.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Changes.DocumentChange.CollectionName">
            <summary>
            Document collection name.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Changes.DocumentChange.ChangeVector">
            <summary>
            Document change vector
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Changes.CounterChange.Name">
            <summary>
            Counter name.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Changes.CounterChange.Value">
            <summary>
            Counter value.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Changes.CounterChange.DocumentId">
            <summary>
            Counter document identifier.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Changes.CounterChange.CollectionName">
            <summary>
            Document collection name.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Changes.CounterChange.ChangeVector">
            <summary>
            Counter change vector.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Changes.CounterChange.Type">
            <summary>
            Type of change that occurred on counter.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Changes.TimeSeriesChange.Name">
            <summary>
            Time Series name.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Changes.TimeSeriesChange.From">
            <summary>
            Apply values of time series from date.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Changes.TimeSeriesChange.To">
            <summary>
            Apply values of time series to date.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Changes.TimeSeriesChange.DocumentId">
            <summary>
            Time series document identifier.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Changes.TimeSeriesChange.ChangeVector">
            <summary>
            Time series change vector.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Changes.TimeSeriesChange.Type">
            <summary>
            Type of change that occurred on time series.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Changes.TimeSeriesChange.CollectionName">
            <summary>
            Time series document collection name.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Changes.IndexChange.Type">
            <summary>
            Type of change that occurred on index.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Changes.IndexChange.Name">
            <summary>
            Name of index for which notification was created
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Changes.IndexRenameChange.OldIndexName">
            <summary>
            The old index name
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Changes.IDatabaseChanges.ForIndex(System.String)">
            <summary>
            Subscribe to changes for specified index only.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Changes.IDatabaseChanges.ForDocument(System.String)">
            <summary>
            Subscribe to changes for specified document only.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Changes.IDatabaseChanges.ForAllDocuments">
            <summary>
            Subscribe to changes for all documents.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Changes.IDatabaseChanges.ForOperationId(System.Int64)">
            <summary>
            Subscribe to changes for specified operation only.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Changes.IDatabaseChanges.ForAllOperations">
            <summary>
            Subscribe to change for all operation statuses.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Changes.IDatabaseChanges.ForAllIndexes">
            <summary>
            Subscribe to changes for all indexes.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Changes.IDatabaseChanges.ForDocumentsStartingWith(System.String)">
            <summary>
            Subscribe to changes for all documents that Id starts with given prefix.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Changes.IDatabaseChanges.ForDocumentsInCollection(System.String)">
            <summary>
            Subscribe to changes for all documents that belong to specified collection.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Changes.IDatabaseChanges.ForDocumentsInCollection``1">
            <summary>
            Subscribe to changes for all documents that belong to specified collection.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Changes.IDatabaseChanges.ForAllCounters">
            <summary>
            Subscribe to changes for all counters.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Changes.IDatabaseChanges.ForCounter(System.String)">
            <summary>
            Subscribe to changes for all counters with a given name.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Changes.IDatabaseChanges.ForCounterOfDocument(System.String,System.String)">
            <summary>
            Subscribe to changes for counter from a given document and with given name.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Changes.IDatabaseChanges.ForCountersOfDocument(System.String)">
            <summary>
            Subscribe to changes for all counters from a given document.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Changes.IDatabaseChanges.ForAllTimeSeries">
            <summary>
            Subscribe to changes for all timeseries.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Changes.IDatabaseChanges.ForTimeSeries(System.String)">
            <summary>
            Subscribe to changes for all timeseries with a given name.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Changes.IDatabaseChanges.ForTimeSeriesOfDocument(System.String,System.String)">
            <summary>
            Subscribe to changes for timeseries from a given document and with given name.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Changes.IDatabaseChanges.ForTimeSeriesOfDocument(System.String)">
            <summary>
            Subscribe to changes for all timeseries from a given document.
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Commands.Batches.BatchPatchCommandData">
            <summary>
            Commands that patches multiple documents using same patch script
            CAUTION: This command does not update session state after .SaveChanges() call 
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Commands.Batches.PutResult">
            <summary>
            The result of a PUT operation
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Commands.Batches.PutResult.Id">
            <summary>
            Id of the document that was PUT.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Commands.Batches.PutResult.ChangeVector">
            <summary>
            Change Vector of the document after PUT operation.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Commands.ConditionalGetDocumentsCommand.IsReadRequest">
            <summary>
            Here we explicitly do _NOT_ want to have caching 
            by the Request Executor, we want to manage it ourselves
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Commands.MultiGet.GetRequest.Url">
            <summary>
            Request url (relative).
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Commands.MultiGet.GetRequest.Headers">
            <summary>
            Request headers.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Commands.MultiGet.GetRequest.Query">
            <summary>
            Query information e.g. "?pageStart=10&amp;pageSize=20".
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Commands.MultiGet.GetRequest.UrlAndQuery">
            <summary>
            Concatenated Url and Query.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Commands.MultiGet.GetResponse.Result">
            <summary>
            Response result as JSON.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Commands.MultiGet.GetResponse.Headers">
            <summary>
            Response headers.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Commands.MultiGet.GetResponse.StatusCode">
            <summary>
            Response HTTP status code.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Commands.MultiGet.GetResponse.ForceRetry">
            <summary>
            Indicates if request should be retried (forced).
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Commands.MultiGet.GetResponse.RequestHasErrors">
            <summary>
            Method used to check if request has errors.
            <para>Returns:</para>
            <para>- <c>false</c> - if Status is 0, 200, 201, 203, 204, 304 and 404</para>
            <para>- <c>true</c> - otherwise</para>
            </summary>
            <returns><c>false</c> if Status is 0, 200, 201, 203, 204, 304 and 404. <c>True</c> otherwise.</returns>
        </member>
        <member name="P:Raven.Client.Documents.Commands.StreamResult`1.Document">
            <summary>
            Document deserialized to <c>TType</c>.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Commands.TimeSeriesStreamResult`1.Result">
            <summary>
            Time Series deserialized to <c>TType</c>.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Commands.AbstractStreamResult.Id">
            <summary>
            Document ID.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Commands.AbstractStreamResult.ChangeVector">
            <summary>
            Document change vector.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Commands.AbstractStreamResult.Metadata">
            <summary>
            Document metadata.
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Conventions.DocumentConventions">
            <summary>
                The set of conventions used by the <see cref="T:Raven.Client.Documents.DocumentStore" /> which allow the users to customize
                the way the Raven client API behaves
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Conventions.DocumentConventions.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Raven.Client.Documents.Conventions.DocumentConventions" /> class.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Conventions.DocumentConventions.SendApplicationIdentifier">
            <summary>
            Enables sending a unique application identifier to the RavenDB Server that is used for Client API usage tracking.
            It allows RavenDB Server to issue performance hint notifications e.g. during robust topology update requests which could indicate Client API misuse impacting the overall performance
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Conventions.DocumentConventions.SecondBroadcastAttemptTimeout">
             <summary>
             Set the timeout for the second broadcast attempt.
             Default: 30 Seconds.
            
             Upon failure of the first attempt the request executor will resend the command to all nodes simultaneously.
             </summary>
        </member>
        <member name="P:Raven.Client.Documents.Conventions.DocumentConventions.FirstBroadcastAttemptTimeout">
             <summary>
             Set the timeout for the first broadcast attempt.
             Default: 5 Seconds.
            
             First attempt will send a single request to a selected node.
             </summary>
        </member>
        <member name="P:Raven.Client.Documents.Conventions.DocumentConventions.WaitForIndexesAfterSaveChangesTimeout">
            <summary>
            Sets the default timeout for DocumentSession.Advanced.WaitForIndexesAfterSaveChanges method.
            Default: 15 Seconds.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Conventions.DocumentConventions.WaitForNonStaleResultsTimeout">
            <summary>
            Sets the default timeout for DocumentSession WaitForNonStaleResults methods.
            Default: 15 Seconds.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Conventions.DocumentConventions.WaitForReplicationAfterSaveChangesTimeout">
            <summary>
            Sets the default timeout for DocumentSession.Advanced.WaitForReplicationAfterSaveChanges method.
            Default: 15 Seconds.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Conventions.DocumentConventions.UseCompression">
            <summary>
            Should accept gzip/deflate headers be added to all requests?
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Conventions.DocumentConventions.LoadBalancerPerSessionContextSelector">
            <summary>
            Gets or set the function that allow to specialize the topology
            selection for a particular session. Used in load balancing
            scenarios.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Conventions.DocumentConventions.AddIdFieldToDynamicObjects">
            <summary>
                By default, the field 'Id' field will be added to dynamic objects, this allows to disable this behavior.
                Default value is 'true'
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Conventions.DocumentConventions.MaxNumberOfRequestsPerSession">
            <summary>
                Gets or sets the max length of Url of GET requests.
            </summary>
            <value>The max number of requests per session.</value>
        </member>
        <member name="P:Raven.Client.Documents.Conventions.DocumentConventions.MaxHttpCacheSize">
            <summary>
                Gets or sets the max size of the cache in requestExecutor.
                Default value is 512MB on 64 bits, 32MB on 32 bits
            </summary>
            <value>The max size of cache in requestExecutor.</value>
        </member>
        <member name="P:Raven.Client.Documents.Conventions.DocumentConventions.ThrowIfQueryPageSizeIsNotSet">
            <summary>
                If set to 'true' then it will throw an exception when any query is performed (in session)
                without explicit page size set.
                This can be useful for development purposes to pinpoint all the possible performance bottlenecks
                since from 4.0 there is no limitation for number of results returned from server.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Conventions.DocumentConventions.UseOptimisticConcurrency">
            <summary>
                Whether UseOptimisticConcurrency is set to true by default for all opened sessions
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Conventions.DocumentConventions.FindClrType">
            <summary>
                Gets or sets the function to find the clr type of a document.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Conventions.DocumentConventions.FindClrTypeName">
            <summary>
                Gets or sets the function to find the clr type name from a clr type
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Conventions.DocumentConventions.FindCollectionName">
            <summary>
                Gets or sets the function to find the collection name for given type.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Conventions.DocumentConventions.FindCollectionNameForDynamic">
            <summary>
                Gets or sets the function to find the collection name for dynamic type.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Conventions.DocumentConventions.FindClrTypeNameForDynamic">
            <summary>
                Gets or sets the function to find the collection name for dynamic type.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Conventions.DocumentConventions.FindPropertyNameForIndex">
            <summary>
                Gets or sets the function to find the indexed property name
                given the indexed document type, the index name, the current path and the property path.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Conventions.DocumentConventions.FindProjectedPropertyNameForIndex">
            <summary>
                Gets or sets the function to find the projected property name for index,
                given the indexed document type, the index name, the current path and the property path.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Conventions.DocumentConventions.FindPropertyNameForDynamicIndex">
            <summary>
                Gets or sets the function to find the indexed property name
                given the indexed document type, the index name, the current path and the property path.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Conventions.DocumentConventions.FindIdentityPropertyNameFromCollectionName">
            <summary>
                Get or sets the function to get the identity property name from the collection name
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Conventions.DocumentConventions.AsyncDocumentIdGenerator">
            <summary>
                Gets or sets the document ID generator.
            </summary>
            <value>The document ID generator.</value>
        </member>
        <member name="P:Raven.Client.Documents.Conventions.DocumentConventions.TransformTypeCollectionNameToDocumentIdPrefix">
            <summary>
                Translates the types collection name to the document id prefix
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Conventions.DocumentConventions.FindIdentityProperty">
            <summary>
                Gets or sets the function to find the identity property.
            </summary>
            <value>The find identity property.</value>
        </member>
        <member name="P:Raven.Client.Documents.Conventions.DocumentConventions.IdentityPartsSeparator">
            <summary>
                Gets or sets the identity parts separator used by the HiLo generators
            </summary>
            <value>The identity parts separator.</value>
        </member>
        <member name="P:Raven.Client.Documents.Conventions.DocumentConventions.SaveEnumsAsIntegers">
            <summary>
                Saves Enums as integers and instruct the Linq provider to query enums as integer values.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Conventions.DocumentConventions.OperationStatusFetchMode">
            <summary>
            Changes the way the Operation is fetching the operation status when waiting for completion
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Conventions.DocumentConventions.DisableTopologyCache">
            <summary>
            Disables the usage of topology cache.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Conventions.DocumentConventions.TopologyCacheLocation">
            <summary>
            Changes the location of topology cache files. By default it is set to application base directory (AppContext.BaseDirectory)
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Conventions.DocumentConventions.DefaultGetCollectionName(System.Type)">
            <summary>
                Default method used when finding a collection name for a type
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Conventions.DocumentConventions.GetCollectionName(System.Type)">
            <summary>
                Gets the collection name for a given type.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Conventions.DocumentConventions.GetCollectionName(System.Object)">
            <summary>
                Gets the collection name for a given dynamic type.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Conventions.DocumentConventions.GenerateDocumentId(System.String,System.Object)">
            <summary>
                Generates the document id.
            </summary>
            <param name="entity">The entity.</param>
            <param name="databaseName">Name of the database</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Conventions.DocumentConventions.RegisterAsyncIdConvention``1(System.Func{System.String,``0,System.Threading.Tasks.Task{System.String}})">
            <summary>
                Register an async id convention for a single type (and all of its derived types.
                Note that you can still fall back to the DocumentIdGenerator if you want.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Conventions.DocumentConventions.GetClrType(System.String,Sparrow.Json.BlittableJsonReaderObject)">
            <summary>
                Get the CLR type (if exists) from the document
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Conventions.DocumentConventions.GetClrTypeName(System.Object)">
            <summary>
                Get the CLR type name to be stored in the entity metadata
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Conventions.DocumentConventions.GetClrTypeName(System.Type)">
            <summary>
                Get the CLR type name to be stored in the entity metadata
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Conventions.DocumentConventions.Clone">
            <summary>
                Clone the current conventions to a new instance
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Conventions.DocumentConventions.GetIdentityProperty(System.Type)">
            <summary>
                Gets the identity property.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="P:Raven.Client.Documents.Conventions.DocumentConventions.DisableAtomicDocumentWritesInClusterWideTransaction">
            <summary>
            EXPERT: Disable automatic atomic writes with cluster write transactions. If set to 'true', will only consider explicitly
            added compare exchange values to validate cluster wide transactions."
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Conventions.Inflector">
            <summary>
            The Inflector class transforms words from one 
            form to another. For example, from singular to plural.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Conventions.Inflector.Pluralize(System.String)">
            <summary>
            Return the plural of a word.
            </summary>
            <param name="word">The singular form</param>
            <returns>The plural form of <paramref name="word"/></returns>
        </member>
        <member name="M:Raven.Client.Documents.Conventions.Inflector.Singularize(System.String)">
            <summary>
            Return the singular of a word.
            </summary>
            <param name="word">The plural form</param>
            <returns>The singular form of <paramref name="word"/></returns>
        </member>
        <member name="M:Raven.Client.Documents.Conventions.Inflector.Capitalize(System.String)">
            <summary>
            Capitalizes a word.
            </summary>
            <param name="word">The word to be capitalized.</param>
            <returns><paramref name="word"/> capitalized.</returns>
        </member>
        <member name="T:Raven.Client.Documents.DocumentStore">
            <summary>
            Manages access to RavenDB and open sessions to work with RavenDB.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.DocumentStore.Identifier">
            <summary>
            Gets or sets the identifier for this store.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="M:Raven.Client.Documents.DocumentStore.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.DocumentStore.OpenSession">
            <summary>
            Opens the session.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.DocumentStore.OpenSession(System.String)">
            <summary>
            Opens the session for a particular database
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.DocumentStore.Initialize">
            <summary>
            Initializes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.DocumentStore.AssertValidConfiguration">
            <summary>
            validate the configuration for the document store
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.DocumentStore.DisableAggressiveCaching(System.String)">
            <summary>
            Setup the context for no aggressive caching
            </summary>
            <remarks>
            This is mainly useful for internal use inside RavenDB, when we are executing
            queries that have been marked with WaitForNonStaleResults, we temporarily disable
            aggressive caching.
            </remarks>
        </member>
        <member name="M:Raven.Client.Documents.DocumentStore.Changes(System.String)">
            <summary>
            Subscribe to change notifications from the server
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.DocumentStore.Changes(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.DocumentStore.AggressivelyCacheFor(System.TimeSpan,System.String)">
            <summary>
            Setup the context for aggressive caching.
            </summary>
            <remarks>
            Aggressive caching means that we will not check the server to see whether the response
            we provide is current or not, but will serve the information directly from the local cache
            without touching the server.
            </remarks>
        </member>
        <member name="M:Raven.Client.Documents.DocumentStore.AggressivelyCacheFor(System.TimeSpan,Raven.Client.Http.AggressiveCacheMode,System.String)">
            <summary>
            Setup the context for aggressive caching.
            </summary>
            <remarks>
            Aggressive caching means that we will not check the server to see whether the response
            we provide is current or not, but will serve the information directly from the local cache
            without touching the server.
            </remarks>
        </member>
        <member name="M:Raven.Client.Documents.DocumentStore.OpenAsyncSession(System.String)">
            <summary>
            Opens the async session.
            </summary>
            <returns></returns>
        </member>
        <member name="E:Raven.Client.Documents.DocumentStore.AfterDispose">
            <summary>
            Called after dispose is completed
            </summary>
        </member>
        <member name="E:Raven.Client.Documents.DocumentStore.BeforeDispose">
            <summary>
            Called before dispose is completed
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.DocumentStoreBase">
            <summary>
            Contains implementation of some IDocumentStore operations shared by DocumentStore implementations
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.DocumentStoreBase.WasDisposed">
            <summary>
            Whether the instance has been disposed
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.DocumentStoreBase.Changes(System.String)">
            <summary>
            Subscribe to change notifications from the server
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.DocumentStoreBase.Changes(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.DocumentStoreBase.ExecuteIndex(Raven.Client.Documents.Indexes.IAbstractIndexCreationTask,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.DocumentStoreBase.ExecuteIndexAsync(Raven.Client.Documents.Indexes.IAbstractIndexCreationTask,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.DocumentStoreBase.ExecuteIndexes(System.Collections.Generic.IEnumerable{Raven.Client.Documents.Indexes.IAbstractIndexCreationTask},System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.DocumentStoreBase.ExecuteIndexesAsync(System.Collections.Generic.IEnumerable{Raven.Client.Documents.Indexes.IAbstractIndexCreationTask},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="P:Raven.Client.Documents.DocumentStoreBase.Conventions">
            <summary>
            Gets the conventions.
            </summary>
            <value>The conventions.</value>
        </member>
        <member name="F:Raven.Client.Documents.DocumentStoreBase._urls">
            <summary>
            Gets or sets the URLs.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.DocumentStoreBase.Urls">
            <summary>
            Gets or sets the Urls
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.DocumentStoreBase.Database">
            <summary>
            The default database name
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.DocumentStoreBase.Certificate">
            <summary>
            The client certificate to use for authentication
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.DocumentStoreBase.AggressivelyCache(System.String)">
            <summary>
            Setup the context for aggressive caching.
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Identity.AsyncHiLoIdGenerator">
            <summary>
            Generate hilo numbers against a RavenDB document
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Identity.AsyncHiLoIdGenerator.#ctor(System.String,Raven.Client.Documents.DocumentStore,System.String,System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Documents.Identity.AsyncHiLoIdGenerator"/> class.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Identity.AsyncHiLoIdGenerator.GenerateDocumentIdAsync(System.Object)">
            <summary>
            Generates the document ID.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="T:Raven.Client.Documents.Identity.AsyncMultiTypeHiLoIdGenerator">
            <summary>
            Generate a hilo ID for each given type
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Identity.GenerateEntityIdOnTheClient.TryGetIdFromInstance(System.Object,System.String@)">
            <summary>
            Attempts to get the document ID from an instance 
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Identity.GenerateEntityIdOnTheClient.GetOrGenerateDocumentId(System.Object)">
            <summary>
            Tries to get the identity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Identity.GenerateEntityIdOnTheClient.TrySetIdentity(System.Object,System.String)">
            <summary>
            Tries to set the identity property
            </summary>
            <param name="entity">The entity.</param>
            <param name="id">The id.</param>
        </member>
        <member name="T:Raven.Client.Documents.Identity.HiLoResult">
            <summary>
            The result of a NextHiLo operation
            </summary>   
        </member>
        <member name="P:Raven.Client.Documents.Identity.HiLoResult.ServerTag">
            <summary>
            The tag of the server that allocated this range.
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.IDocumentStore">
            <summary>
            Interface for managing access to RavenDB and open sessions.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.IDocumentStore.Changes(System.String)">
            <summary>
            Subscribe to change notifications from the server
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.IDocumentStore.Changes(System.String,System.String)">
            <summary>
            Subscribe to change notifications from the selected server
            </summary>
            <param name="database">The database to subscribe, if null or empty, the default database will be used</param>
            <param name="nodeTag">The node tag of selected server</param>
        </member>
        <member name="M:Raven.Client.Documents.IDocumentStore.AggressivelyCacheFor(System.TimeSpan,System.String)">
            <summary>
            Setup the context for aggressive caching.
            </summary>
            <param name="cacheDuration">Specify the aggressive cache duration</param>
            <param name="database">The database to cache, if not specified, the default database will be used</param>
            <remarks>
            Aggressive caching means that we will not check the server to see whether the response
            we provide is current or not, but will serve the information directly from the local cache
            without touching the server.
            </remarks>
        </member>
        <member name="M:Raven.Client.Documents.IDocumentStore.AggressivelyCacheFor(System.TimeSpan,Raven.Client.Http.AggressiveCacheMode,System.String)">
            <summary>
            Setup the context for aggressive caching.
            </summary>
            <param name="cacheDuration">Specify the aggressive cache duration</param>
            <param name="database">The database to cache, if not specified, the default database will be used</param>
            <param name="mode">Aggressive caching mode, if not specified, TrackChanges mode will be used</param>
            <remarks>
            Aggressive caching means that we will not check the server to see whether the response
            we provide is current or not, but will serve the information directly from the local cache
            without touching the server.
            </remarks>
        </member>
        <member name="M:Raven.Client.Documents.IDocumentStore.AggressivelyCache(System.String)">
            <summary>
            Setup the context for aggressive caching.
            </summary>
            <remarks>
            Aggressive caching means that we will not check the server to see whether the response
            we provide is current or not, but will serve the information directly from the local cache
            without touching the server.
            </remarks>
        </member>
        <member name="M:Raven.Client.Documents.IDocumentStore.DisableAggressiveCaching(System.String)">
            <summary>
            Setup the context for no aggressive caching
            </summary>
            <remarks>
            This is mainly useful for internal use inside RavenDB, when we are executing
            queries that has been marked with WaitForNonStaleResults, we temporarily disable
            aggressive caching.
            </remarks>
        </member>
        <member name="P:Raven.Client.Documents.IDocumentStore.Identifier">
            <summary>
            Gets or sets the identifier for this store.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="M:Raven.Client.Documents.IDocumentStore.Initialize">
            <summary>
            Initializes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.IDocumentStore.OpenAsyncSession">
            <summary>
            Opens the async session.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.IDocumentStore.OpenAsyncSession(System.String)">
            <summary>
            Opens the async session.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.IDocumentStore.OpenAsyncSession(Raven.Client.Documents.Session.SessionOptions)">
            <summary>
            Opens the async session with the specified options.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.IDocumentStore.OpenSession">
            <summary>
            Opens the session.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.IDocumentStore.OpenSession(System.String)">
            <summary>
            Opens the session for a particular database
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.IDocumentStore.OpenSession(Raven.Client.Documents.Session.SessionOptions)">
            <summary>
            Opens the session with the specified options.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.IDocumentStore.ExecuteIndex(Raven.Client.Documents.Indexes.IAbstractIndexCreationTask,System.String)">
            <summary>
            Executes the index creation.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.IDocumentStore.ExecuteIndexAsync(Raven.Client.Documents.Indexes.IAbstractIndexCreationTask,System.String,System.Threading.CancellationToken)">
            <summary>
            Executes the index creation.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.IDocumentStore.Conventions">
            <summary>
            Gets the conventions.
            </summary>
            <value>The conventions.</value>
        </member>
        <member name="P:Raven.Client.Documents.IDocumentStore.Urls">
            <summary>
            Gets the URL's.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.IDocumentStore.Subscriptions">
            <summary>
            Provides methods to manage data subscriptions.
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Indexes.AbstractGenericIndexCreationTask`1">
            <summary>
            Abstract class used to provide infrastructure service for actual creation tasks
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractGenericIndexCreationTask`1.#ctor">
            <summary>
            Create a new instance
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractGenericIndexCreationTask`1.Reduce">
            <summary>
            The reduce definition
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractGenericIndexCreationTask`1.Stores">
            <summary>
            Index storage options
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractGenericIndexCreationTask`1.StoresStrings">
            <summary>
            Index storage options
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractGenericIndexCreationTask`1.IndexSuggestions">
            <summary>
            Index suggest options
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractGenericIndexCreationTask`1.Analyzers">
            <summary>
            Index sort options
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractGenericIndexCreationTask`1.AnalyzersStrings">
            <summary>
            Index sort options
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractGenericIndexCreationTask`1.TermVectors">
            <summary>
            Index term vector options
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractGenericIndexCreationTask`1.TermVectorsStrings">
            <summary>
            Index term vector options
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractGenericIndexCreationTask`1.SpatialIndexes">
            <summary>
            Spatial index options
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractGenericIndexCreationTask`1.SpatialIndexesStrings">
            <summary>
            Spatial index options
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractGenericIndexCreationTask`1.Indexes">
            <summary>
            Indexing options
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractGenericIndexCreationTask`1.IndexesStrings">
            <summary>
            Indexing options
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractGenericIndexCreationTask`1.OutputReduceToCollection">
            <summary>
            If not null than each reduce result will be created as a document in the specified collection name.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractGenericIndexCreationTask`1.PatternForOutputReduceToCollectionReferences">
            <summary>
            Defines pattern for identifiers of documents which reference IDs of reduce outputs documents
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractGenericIndexCreationTask`1.PatternReferencesCollectionName">
            <summary>
            Defines a collection name for reference documents created based on provided pattern
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractGenericIndexCreationTask`1.Index(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},Raven.Client.Documents.Indexes.FieldIndexing)">
            <summary>
            Register a field to be indexed
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractGenericIndexCreationTask`1.Index(System.String,Raven.Client.Documents.Indexes.FieldIndexing)">
            <summary>
            Register a field to be indexed
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractGenericIndexCreationTask`1.Spatial(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Func{Raven.Client.Documents.Indexes.Spatial.SpatialOptionsFactory,Raven.Client.Documents.Indexes.Spatial.SpatialOptions})">
            <summary>
            Register a field to be spatially indexed
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractGenericIndexCreationTask`1.Spatial(System.String,System.Func{Raven.Client.Documents.Indexes.Spatial.SpatialOptionsFactory,Raven.Client.Documents.Indexes.Spatial.SpatialOptions})">
            <summary>
            Register a field to be spatially indexed
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractGenericIndexCreationTask`1.Store(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},Raven.Client.Documents.Indexes.FieldStorage)">
            <summary>
            Register a field to be stored
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractGenericIndexCreationTask`1.Store(System.String,Raven.Client.Documents.Indexes.FieldStorage)">
            <summary>
            Register a field to be stored
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractGenericIndexCreationTask`1.Analyze(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)">
            <summary>
            Register a field to be analyzed
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractGenericIndexCreationTask`1.Analyze(System.String,System.String)">
            <summary>
            Register a field to be analyzed
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractGenericIndexCreationTask`1.TermVector(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},Raven.Client.Documents.Indexes.FieldTermVector)">
            <summary>
            Register a field to have term vectors
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractGenericIndexCreationTask`1.TermVector(System.String,Raven.Client.Documents.Indexes.FieldTermVector)">
            <summary>
            Register a field to have term vectors
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractGenericIndexCreationTask`1.Suggestion(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Register a field to be sorted
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractIndexCreationTask.MetadataFor(System.Object)">
            <summary>
            Allow to get to the metadata of the document
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractIndexCreationTask.AttachmentsFor(System.Object)">
            <summary>
            Allow to get attachments of the document (without binary data)
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractIndexCreationTask.CounterNamesFor(System.Object)">
            <summary>
            Allow to get counter names of the document
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractIndexCreationTask.TimeSeriesNamesFor(System.Object)">
            <summary>
            Allow to get timeseries names of the document
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractIndexCreationTask.LoadAttachment(System.Object,System.String)">
            <summary>
            Allows to retrieve attachment of the document
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractIndexCreationTask.LoadAttachments(System.Object)">
            <summary>
            Allows to retrieve attachments of the document
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractIndexCreationTask.AsJson(System.Object)">
            <summary>
            Allow to access an entity as a document
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Indexes.AbstractIndexCreationTaskBase`1">
            <summary>
            Base class for creating indexes
            </summary>
            <remarks>
            The naming convention is that underscores in the inherited class names are replaced by slashed
            For example: Posts_ByName will be saved to Posts/ByName
            </remarks>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractIndexCreationTaskBase`1.CreateIndexDefinition">
            <summary>
            Creates the index definition.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractIndexCreationTaskBase`1.Conventions">
            <summary>
            Gets or sets the conventions that should be used when index definition is created.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractIndexCreationTaskBase`1.Priority">
            <summary>
             index can have a priority that controls how much power of the indexing process it is allowed to consume. index priority can be forced by the user.
             There are four available values that you can set: Normal, Idle, Disabled, Abandoned
            <para>Default value: null means that the priority of the index is Normal.</para>
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractIndexCreationTaskBase`1.State">
            <summary>
            Index state
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractIndexCreationTaskBase`1.CreateField(System.String,System.Object,Raven.Client.Documents.Indexes.CreateFieldOptions)">
            <summary>
            Provide a way to dynamically index values with runtime known values
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractIndexCreationTaskBase`1.CreateField(System.String,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Provide a way to dynamically index values with runtime known values
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractIndexCreationTaskBase`1.CreateField(System.String,System.Object)">
            <summary>
            Provide a way to dynamically index values with runtime known values
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractIndexCreationTaskBase`1.CreateSpatialField(System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Generates a spatial field in the index, generating a Point from the provided lat/lng coordinates
            </summary>
            <param name="lat">Latitude</param>
            <param name="lng">Longitude</param>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractIndexCreationTaskBase`1.CreateSpatialField(System.String)">
            <summary>
            Generates a spatial field in the index, generating a Point from the provided lat/lng coordinates
            </summary>
            <param name="shapeWkt">The shape representation in the WKT format</param>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractIndexCreationTaskBase`1.Execute(Raven.Client.Documents.IDocumentStore,Raven.Client.Documents.Conventions.DocumentConventions,System.String)">
            <summary>
            Executes the index creation against the specified document database using the specified conventions
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractIndexCreationTaskBase`1.ExecuteAsync(Raven.Client.Documents.IDocumentStore,Raven.Client.Documents.Conventions.DocumentConventions,System.String,System.Threading.CancellationToken)">
            <summary>
            Executes the index creation against the specified document store.
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Indexes.AbstractIndexCreationTask`1">
            <summary>
            Base class for creating indexes
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Indexes.AbstractIndexCreationTask`2">
            <summary>
            Base class for creating indexes
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractIndexCreationTask`2.CreateIndexDefinition">
            <summary>
            Creates the index definition.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractIndexCreationTask`2.Map">
            <summary>
            The map definition
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractCommonApiForIndexes.IsMapReduce">
            <summary>
            Gets a value indicating whether this instance is map reduce index definition
            </summary>
            <value>
            	<c>true</c> if this instance is map reduce; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractCommonApiForIndexes.IndexName">
            <summary>
            Generates index name from type name replacing all _ with /
            <para>e.g.</para>
            <para>if our type is <code>'Orders_Totals'</code> then index name would be <code>'Orders/Totals'</code></para>
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractCommonApiForIndexes.Recurse``2(``0,System.Func{``0,``1})">
            <summary>
            Allows to use lambdas recursively
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractCommonApiForIndexes.Recurse``2(``0,System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
            <summary>
            Allows to use lambdas recursively
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractCommonApiForIndexes.Recurse``2(``0,System.Func{``0,System.Collections.Generic.ICollection{``1}})">
            <summary>
            Allows to use lambdas recursively
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractCommonApiForIndexes.Recurse``2(``0,System.Func{``0,System.Collections.Generic.ISet{``1}})">
            <summary>
            Allows to use lambdas recursively
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractCommonApiForIndexes.Recurse``2(``0,System.Func{``0,System.Collections.Generic.HashSet{``1}})">
            <summary>
            Allows to use lambdas recursively
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractCommonApiForIndexes.Recurse``2(``0,System.Func{``0,System.Collections.Generic.SortedSet{``1}})">
            <summary>
            Allows to use lambdas recursively
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractCommonApiForIndexes.LoadDocument``1(System.String)">
            <summary>
            Loads the specified document during the indexing process
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractCommonApiForIndexes.LoadDocument``1(System.String,System.String)">
            <summary>
            Loads the specified document during the indexing process
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractCommonApiForIndexes.LoadDocument``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Loads the specified document during the indexing process
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractCommonApiForIndexes.LoadDocument``1(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Loads the specified document during the indexing process
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractCommonApiForIndexes.Recurse``2(``0,System.Func{``0,System.Collections.Generic.IList{``1}})">
            <summary>
            Allows to use lambdas recursively
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractCommonApiForIndexes.Recurse``2(``0,System.Func{``0,``1[]})">
            <summary>
            Allows to use lambdas recursively
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractCommonApiForIndexes.Recurse``2(``0,System.Func{``0,System.Collections.Generic.List{``1}})">
            <summary>
            Allows to use lambdas recursively
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractCommonApiForIndexes.AdditionalSources">
            <summary>
            Add additional sources to be compiled with the index on the server.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractJavaScriptIndexCreationTask.Maps">
            <summary>
            All the map functions for this index
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractJavaScriptIndexCreationTask.IsMapReduce">
            <inheritdoc />
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractJavaScriptIndexCreationTask.OutputReduceToCollection">
            <summary>
            If not null than each reduce result will be created as a document in the specified collection name.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractJavaScriptIndexCreationTask.PatternReferencesCollectionName">
            <summary>
            Defines a collection name for reference documents created based on provided pattern
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractJavaScriptIndexCreationTask.PatternForOutputReduceToCollectionReferences">
            <summary>
            Defines a collection name for reference documents created based on provided pattern
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractJavaScriptIndexCreationTask.CreateIndexDefinition">
            <inheritdoc />
        </member>
        <member name="T:Raven.Client.Documents.Indexes.AbstractMultiMapIndexCreationTask`1">
            <summary>
            Allow to create indexes with multiple maps
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractMultiMapIndexCreationTask`1.AddMapForAll``1(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.IEnumerable}})">
            <summary>
            Uses reflection to call <see cref="M:Raven.Client.Documents.Indexes.AbstractMultiMapIndexCreationTask`1.AddMap``1(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.IEnumerable}})"/> for the base type and all available subclasses.
            </summary>
            <remarks>This is taken from Oren's code in this thread https://groups.google.com/d/msg/ravendb/eFUlQG-spzE/Ac0PrvsFyJYJ </remarks>
            <typeparam name="TBase">The base class type whose descendant types are to be included in the index.</typeparam>
            <param name="map"></param>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractMultiMapIndexCreationTask`1.CreateIndexDefinition">
            <summary>
            Creates the index definition.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Raven.Client.Documents.Indexes.AbstractMultiMapIndexCreationTask">
            <summary>
            Allow to create indexes with multiple maps
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.BoostedValue.Boost">
            <summary>
            Boost factor.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.BoostedValue.Value">
            <summary>
            Boosted value.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.Counters.AbstractCountersIndexCreationTask`2.AddMapForAll(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{Raven.Client.Documents.Indexes.Counters.CounterEntry},System.Collections.IEnumerable}})">
            <summary>
            Sets map function for all Counters
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.Counters.AbstractCountersIndexCreationTask`2.AddMap(System.String,System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{Raven.Client.Documents.Indexes.Counters.CounterEntry},System.Collections.IEnumerable}})">
            <summary>
            Sets map function for specified Counters
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Indexes.Counters.AbstractGenericCountersIndexCreationTask`1">
            <summary>
            Abstract class used to provide infrastructure service for actual creation tasks
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.Counters.AbstractGenericCountersIndexCreationTask`1.#ctor">
            <summary>
            Create a new instance
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.Counters.AbstractGenericCountersIndexCreationTask`1.Reduce">
            <summary>
            The reduce definition
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.Counters.AbstractGenericCountersIndexCreationTask`1.Stores">
            <summary>
            Index storage options
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.Counters.AbstractGenericCountersIndexCreationTask`1.StoresStrings">
            <summary>
            Index storage options
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.Counters.AbstractGenericCountersIndexCreationTask`1.IndexSuggestions">
            <summary>
            Index suggest options
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.Counters.AbstractGenericCountersIndexCreationTask`1.Analyzers">
            <summary>
            Index sort options
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.Counters.AbstractGenericCountersIndexCreationTask`1.AnalyzersStrings">
            <summary>
            Index sort options
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.Counters.AbstractGenericCountersIndexCreationTask`1.TermVectors">
            <summary>
            Index term vector options
            </summary>		
        </member>
        <member name="P:Raven.Client.Documents.Indexes.Counters.AbstractGenericCountersIndexCreationTask`1.TermVectorsStrings">
            <summary>
            Index term vector options
            </summary>		
        </member>
        <member name="P:Raven.Client.Documents.Indexes.Counters.AbstractGenericCountersIndexCreationTask`1.SpatialIndexes">
            <summary>
            Spatial index options
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.Counters.AbstractGenericCountersIndexCreationTask`1.SpatialIndexesStrings">
            <summary>
            Spatial index options
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.Counters.AbstractGenericCountersIndexCreationTask`1.Indexes">
            <summary>
            Indexing options
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.Counters.AbstractGenericCountersIndexCreationTask`1.IndexesStrings">
            <summary>
            Indexing options
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.Counters.AbstractGenericCountersIndexCreationTask`1.OutputReduceToCollection">
            <summary>
            If not null than each reduce result will be created as a document in the specified collection name.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.Counters.AbstractGenericCountersIndexCreationTask`1.PatternForOutputReduceToCollectionReferences">
            <summary>
            Defines pattern for identifiers of documents which reference IDs of reduce outputs documents
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.Counters.AbstractGenericCountersIndexCreationTask`1.Index(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},Raven.Client.Documents.Indexes.FieldIndexing)">
            <summary>
            Register a field to be indexed
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.Counters.AbstractGenericCountersIndexCreationTask`1.Index(System.String,Raven.Client.Documents.Indexes.FieldIndexing)">
            <summary>
            Register a field to be indexed
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.Counters.AbstractGenericCountersIndexCreationTask`1.Spatial(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Func{Raven.Client.Documents.Indexes.Spatial.SpatialOptionsFactory,Raven.Client.Documents.Indexes.Spatial.SpatialOptions})">
            <summary>
            Register a field to be spatially indexed
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.Counters.AbstractGenericCountersIndexCreationTask`1.Spatial(System.String,System.Func{Raven.Client.Documents.Indexes.Spatial.SpatialOptionsFactory,Raven.Client.Documents.Indexes.Spatial.SpatialOptions})">
            <summary>
            Register a field to be spatially indexed
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.Counters.AbstractGenericCountersIndexCreationTask`1.Store(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},Raven.Client.Documents.Indexes.FieldStorage)">
            <summary>
            Register a field to be stored
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.Counters.AbstractGenericCountersIndexCreationTask`1.Store(System.String,Raven.Client.Documents.Indexes.FieldStorage)">
            <summary>
            Register a field to be stored
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.Counters.AbstractGenericCountersIndexCreationTask`1.Analyze(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)">
            <summary>
            Register a field to be analyzed
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.Counters.AbstractGenericCountersIndexCreationTask`1.Analyze(System.String,System.String)">
            <summary>
            Register a field to be analyzed
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.Counters.AbstractGenericCountersIndexCreationTask`1.TermVector(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},Raven.Client.Documents.Indexes.FieldTermVector)">
            <summary>
            Register a field to have term vectors
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.Counters.AbstractGenericCountersIndexCreationTask`1.TermVector(System.String,Raven.Client.Documents.Indexes.FieldTermVector)">
            <summary>
            Register a field to have term vectors
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.Counters.AbstractGenericCountersIndexCreationTask`1.Suggestion(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Register a field to be sorted
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.Counters.AbstractJavaScriptCountersIndexCreationTask.Maps">
            <summary>
            All the map functions for this index
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.Counters.AbstractJavaScriptCountersIndexCreationTask.IsMapReduce">
            <inheritdoc />
        </member>
        <member name="P:Raven.Client.Documents.Indexes.Counters.AbstractJavaScriptCountersIndexCreationTask.OutputReduceToCollection">
            <summary>
            If not null than each reduce result will be created as a document in the specified collection name.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.Counters.AbstractJavaScriptCountersIndexCreationTask.PatternReferencesCollectionName">
            <summary>
            Defines a collection name for reference documents created based on provided pattern
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.Counters.AbstractJavaScriptCountersIndexCreationTask.PatternForOutputReduceToCollectionReferences">
            <summary>
            Defines a collection name for reference documents created based on provided pattern
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.Counters.AbstractJavaScriptCountersIndexCreationTask.CreateIndexDefinition">
            <inheritdoc />
        </member>
        <member name="T:Raven.Client.Documents.Indexes.Counters.AbstractMultiMapCountersIndexCreationTask`1">
            <summary>
            Allow to create indexes with multiple maps
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.Counters.AbstractMultiMapCountersIndexCreationTask`1.AddMapForAll``1(System.String,System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{Raven.Client.Documents.Indexes.Counters.CounterEntry},System.Collections.IEnumerable}})">
            <summary>
            Uses reflection to call <see cref="M:Raven.Client.Documents.Indexes.Counters.AbstractMultiMapCountersIndexCreationTask`1.AddMap``1(System.String,System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{Raven.Client.Documents.Indexes.Counters.CounterEntry},System.Collections.IEnumerable}})"/> for the base type and all available subclasses.
            </summary>
            <remarks>This is taken from Oren's code in this thread https://groups.google.com/d/msg/ravendb/eFUlQG-spzE/Ac0PrvsFyJYJ </remarks>
            <typeparam name="TBase">The base class type whose descendant types are to be included in the index.</typeparam>
            <param name="expr"></param>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.Counters.AbstractMultiMapCountersIndexCreationTask`1.CreateIndexDefinition">
            <summary>
            Creates the index definition.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Raven.Client.Documents.Indexes.Counters.AbstractMultiMapCountersIndexCreationTask">
            <summary>
            Allow to create indexes with multiple maps
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Indexes.Counters.CountersIndexDefinitionBuilder`2">
            <summary>
            This class provides a way to define a strongly typed index on the client.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.Counters.CountersIndexDefinitionBuilder`2.AddMapForAll(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{Raven.Client.Documents.Indexes.Counters.CounterEntry},System.Collections.IEnumerable}})">
            <summary>
            Sets map function for all Counters
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.Counters.CountersIndexDefinitionBuilder`2.AddMap(System.String,System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{Raven.Client.Documents.Indexes.Counters.CounterEntry},System.Collections.IEnumerable}})">
            <summary>
            Sets map function for specified Counters
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Indexes.Counters.CountersIndexDefinitionBuilder`1">
            <summary>
            This class provides a way to define a strongly typed index on the client.
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Indexes.ExpressionOperatorPrecedence">
            <summary>
            Precedence values for operations
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Indexes.ExpressionOperatorPrecedence.Primary">
            <summary>
            x.y  f(x)  a[x]  x++  x--  new
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Indexes.ExpressionOperatorPrecedence.Unary">
            <summary>
            +  -  !  ~  ++x  --x  (T)x
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Indexes.ExpressionOperatorPrecedence.Multiplicative">
            <summary>
            *  /  %
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Indexes.ExpressionOperatorPrecedence.Additive">
            <summary>
            +  -
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Indexes.ExpressionOperatorPrecedence.Shift">
            <summary>
            &lt;&lt; &gt;&gt;
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Indexes.ExpressionOperatorPrecedence.RelationalAndTypeTesting">
            <summary>
            &lt;  &gt;  &lt;=  &gt;=  is  as
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Indexes.ExpressionOperatorPrecedence.Equality">
            <summary>
            ==  !=
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Indexes.ExpressionOperatorPrecedence.LogicalAND">
            <summary>
            &amp;
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Indexes.ExpressionOperatorPrecedence.LogicalXOR">
            <summary>
            ^
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Indexes.ExpressionOperatorPrecedence.LogicalOR">
            <summary>
            |
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Indexes.ExpressionOperatorPrecedence.ConditionalAND">
            <summary>
            &amp;&amp; (AndAlso in VB)
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Indexes.ExpressionOperatorPrecedence.ConditionalOR">
            <summary>
            ||
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Indexes.ExpressionOperatorPrecedence.NullCoalescing">
            <summary>
            ??
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Indexes.ExpressionOperatorPrecedence.Conditional">
            <summary>
            ?:
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Indexes.ExpressionOperatorPrecedence.Assignment">
            <summary>
            =  *=  /=  %=  +=  -=  &lt;&lt;=  &gt;&gt;=  &amp;=  ^=  |=
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Indexes.ExpressionOperatorPrecedence.ParenthesisNotNeeded">
            <summary>
            pseudo operator for comparisons
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Indexes.ExpressionOperatorPrecedenceExtension">
            <summary>
            Methods on the enum
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionOperatorPrecedenceExtension.NeedsParenthesisFor(Raven.Client.Documents.Indexes.ExpressionOperatorPrecedence,Raven.Client.Documents.Indexes.ExpressionOperatorPrecedence)">
            <summary>
            Needs parenthesis for the expression
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Indexes.ExpressionStringBuilder">
            <summary>
              Based off of System.Linq.Expressions.ExpressionStringBuilder
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.ExpressionToString(Raven.Client.Documents.Conventions.DocumentConventions,System.Boolean,System.Type,System.String,System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
              Convert the expression to a string
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.ToString">
            <summary>
              Returns a <see cref = "T:System.String" /> that represents this instance.
            </summary>
            <returns>
              A <see cref = "T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
              Visits the children of the <see cref = "T:System.Linq.Expressions.BinaryExpression" />.
            </summary>
            <param name = "node">The expression to visit.</param>
            <returns>
              The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.VisitBlock(System.Linq.Expressions.BlockExpression)">
            <summary>
              Visits the children of the <see cref = "T:System.Linq.Expressions.BlockExpression" />.
            </summary>
            <param name = "node">The expression to visit.</param>
            <returns>
              The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.VisitCatchBlock(System.Linq.Expressions.CatchBlock)">
            <summary>
              Visits the children of the <see cref = "T:System.Linq.Expressions.CatchBlock" />.
            </summary>
            <param name = "node">The expression to visit.</param>
            <returns>
              The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>
              Visits the children of the <see cref = "T:System.Linq.Expressions.ConditionalExpression" />.
            </summary>
            <param name = "node">The expression to visit.</param>
            <returns>
              The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>
              Visits the <see cref = "T:System.Linq.Expressions.ConstantExpression" />.
            </summary>
            <param name = "node">The expression to visit.</param>
            <returns>
              The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)">
            <summary>
              Visits the <see cref = "T:System.Linq.Expressions.DebugInfoExpression" />.
            </summary>
            <param name = "node">The expression to visit.</param>
            <returns>
              The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.VisitDefault(System.Linq.Expressions.DefaultExpression)">
            <summary>
              Visits the <see cref = "T:System.Linq.Expressions.DefaultExpression" />.
            </summary>
            <param name = "node">The expression to visit.</param>
            <returns>
              The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.VisitElementInit(System.Linq.Expressions.ElementInit)">
            <summary>
              Visits the element init.
            </summary>
            <param name = "initializer">The initializer.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.VisitExtension(System.Linq.Expressions.Expression)">
            <summary>
              Visits the children of the extension expression.
            </summary>
            <param name = "node">The expression to visit.</param>
            <returns>
              The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.VisitGoto(System.Linq.Expressions.GotoExpression)">
            <summary>
              Visits the children of the <see cref = "T:System.Linq.Expressions.GotoExpression" />.
            </summary>
            <param name = "node">The expression to visit.</param>
            <returns>
              The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.VisitIndex(System.Linq.Expressions.IndexExpression)">
            <summary>
              Visits the children of the <see cref = "T:System.Linq.Expressions.IndexExpression" />.
            </summary>
            <param name = "node">The expression to visit.</param>
            <returns>
              The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.VisitInvocation(System.Linq.Expressions.InvocationExpression)">
            <summary>
              Visits the children of the <see cref = "T:System.Linq.Expressions.InvocationExpression" />.
            </summary>
            <param name = "node">The expression to visit.</param>
            <returns>
              The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.VisitLabel(System.Linq.Expressions.LabelExpression)">
            <summary>
              Visits the children of the <see cref = "T:System.Linq.Expressions.LabelExpression" />.
            </summary>
            <param name = "node">The expression to visit.</param>
            <returns>
              The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.VisitLambda``1(System.Linq.Expressions.Expression{``0})">
            <summary>
              Visits the lambda.
            </summary>
            <typeparam name = "T"></typeparam>
            <param name = "node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.VisitListInit(System.Linq.Expressions.ListInitExpression)">
            <summary>
              Visits the children of the <see cref = "T:System.Linq.Expressions.ListInitExpression" />.
            </summary>
            <param name = "node">The expression to visit.</param>
            <returns>
              The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.VisitLoop(System.Linq.Expressions.LoopExpression)">
            <summary>
              Visits the children of the <see cref = "T:System.Linq.Expressions.LoopExpression" />.
            </summary>
            <param name = "node">The expression to visit.</param>
            <returns>
              The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.VisitMember(System.Linq.Expressions.MemberExpression)">
            <summary>
              Visits the children of the <see cref = "T:System.Linq.Expressions.MemberExpression" />.
            </summary>
            <param name = "node">The expression to visit.</param>
            <returns>
              The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
            <summary>
              Visits the member assignment.
            </summary>
            <param name = "assignment">The assignment.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
            <summary>
              Visits the children of the <see cref = "T:System.Linq.Expressions.MemberInitExpression" />.
            </summary>
            <param name = "node">The expression to visit.</param>
            <returns>
              The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)">
            <summary>
              Visits the member list binding.
            </summary>
            <param name = "binding">The binding.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
            <summary>
              Visits the member member binding.
            </summary>
            <param name = "binding">The binding.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
              Visits the children of the <see cref = "T:System.Linq.Expressions.MethodCallExpression" />.
            </summary>
            <param name = "node">The expression to visit.</param>
            <returns>
              The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>
              Visits the children of the <see cref = "T:System.Linq.Expressions.NewExpression" />.
            </summary>
            <param name = "node">The expression to visit.</param>
            <returns>
              The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
            <summary>
              Visits the children of the <see cref = "T:System.Linq.Expressions.NewArrayExpression" />.
            </summary>
            <param name = "node">The expression to visit.</param>
            <returns>
              The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
              Visits the <see cref = "T:System.Linq.Expressions.ParameterExpression" />.
            </summary>
            <param name = "node">The expression to visit.</param>
            <returns>
              The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)">
            <summary>
              Visits the children of the <see cref = "T:System.Linq.Expressions.RuntimeVariablesExpression" />.
            </summary>
            <param name = "node">The expression to visit.</param>
            <returns>
              The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.VisitSwitch(System.Linq.Expressions.SwitchExpression)">
            <summary>
              Visits the children of the <see cref = "T:System.Linq.Expressions.SwitchExpression" />.
            </summary>
            <param name = "node">The expression to visit.</param>
            <returns>
              The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.VisitSwitchCase(System.Linq.Expressions.SwitchCase)">
            <summary>
              Visits the children of the <see cref = "T:System.Linq.Expressions.SwitchCase" />.
            </summary>
            <param name = "node">The expression to visit.</param>
            <returns>
              The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.VisitTry(System.Linq.Expressions.TryExpression)">
            <summary>
              Visits the children of the <see cref = "T:System.Linq.Expressions.TryExpression" />.
            </summary>
            <param name = "node">The expression to visit.</param>
            <returns>
              The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)">
            <summary>
              Visits the children of the <see cref = "T:System.Linq.Expressions.TypeBinaryExpression" />.
            </summary>
            <param name = "node">The expression to visit.</param>
            <returns>
              The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.ExpressionStringBuilder.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>
              Visits the children of the <see cref = "T:System.Linq.Expressions.UnaryExpression" />.
            </summary>
            <param name = "node">The expression to visit.</param>
            <returns>
              The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="T:Raven.Client.Documents.Indexes.FieldIndexing">
            <summary>
            Options for indexing a field
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Indexes.FieldIndexing.No">
            <summary>
            Do not index the field value. This field can thus not be searched, but one can still access its contents provided it is stored.
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Indexes.FieldIndexing.Search">
            <summary>
            Index the tokens produced by running the field's value through an Analyzer. This is useful for common text.
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Indexes.FieldIndexing.Exact">
            <summary>
            Index the field's value without using an Analyzer, so it can be searched.  As no analyzer is used the 
            value will be stored as a single term. This is useful for unique Ids like product numbers.
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Indexes.FieldIndexing.Default">
            <summary>
            Index this field using the default internal analyzer: LowerCaseKeywordAnalyzer
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Indexes.AutoFieldIndexing.No">
            <summary>
            Do not index the field value. This field can thus not be searched, but one can still access its contents provided it is stored.
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Indexes.AutoFieldIndexing.Search">
            <summary>
            Index the tokens produced by running the field's value through an Analyzer. This is useful for common text.
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Indexes.AutoFieldIndexing.Exact">
            <summary>
            Index the field's value without using an Analyzer, so it can be searched.  As no analyzer is used the 
            value will be stored as a single term. This is useful for unique Ids like product numbers.
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Indexes.AutoFieldIndexing.Highlighting">
            <summary>
            Index the tokens produced by running the field's value through an Analyzer (same as Search),
            store them in index and track term vector positions and offsets. This is mandatory when highlighting is used.
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Indexes.AutoFieldIndexing.Default">
            <summary>
            Index this field using the default internal analyzer: LowerCaseKeywordAnalyzer
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Indexes.FieldStorage">
            <summary>
            Specifies whether and how a field should be stored.
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Indexes.FieldStorage.Yes">
            <summary>
            Store the original field value in the index. This is useful for short texts like a document's title which should be displayed with the results. 
            The value is stored in its original form, i.e. no analyzer is used before it is stored.
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Indexes.FieldStorage.No">
            <summary>
            Do not store the field value in the index.
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Indexes.FieldTermVector">
            <summary>
            Specifies whether to include term vectors for a field
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Indexes.FieldTermVector.No">
            <summary>
            Do not store term vectors
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Indexes.FieldTermVector.Yes">
            <summary>
            Store the term vectors of each document. A term vector is a list of the document's
            terms and their number of occurrences in that document.
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Indexes.FieldTermVector.WithPositions">
            <summary>
            Store the term vector + token position information
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Indexes.FieldTermVector.WithOffsets">
            <summary>
            Store the term vector + Token offset information
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Indexes.FieldTermVector.WithPositionsAndOffsets">
            <summary>
            Store the term vector + Token position and offset information
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Indexes.IndexCreation">
            <summary>
            Helper class for creating indexes from implementations of <see cref="T:Raven.Client.Documents.Indexes.AbstractIndexCreationTask"/>.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.IndexCreation.CreateIndexes(System.Reflection.Assembly,Raven.Client.Documents.IDocumentStore,Raven.Client.Documents.Conventions.DocumentConventions,System.String)">
            <summary>
            Creates the indexes found in the specified assembly.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.IndexCreation.CreateIndexesAsync(System.Reflection.Assembly,Raven.Client.Documents.IDocumentStore,Raven.Client.Documents.Conventions.DocumentConventions,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates the indexes found in the specified assembly.
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Indexes.IndexDefinition">
            <summary>
            A definition of a RavenIndex
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexDefinition.Name">
            <summary>
            This is the means by which the outside world refers to this index definition
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexDefinition.Priority">
            <summary>
            Priority of an index
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexDefinition.State">
            <summary>
            Index state
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexDefinition.LockMode">
            <summary>
            Index lock mode:
            <para>- Unlock - all index definition changes acceptable</para>
            <para>- LockedIgnore - all index definition changes will be ignored, only log entry will be created</para>
            <para>- LockedError - all index definition changes will raise exception</para>
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexDefinition.AdditionalSources">
            <summary>
            Additional code files to be compiled with this index.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexDefinition.Maps">
            <summary>
            All the map functions for this index
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexDefinition.Reduce">
            <summary>
            Index reduce function
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.IndexDefinition.Equals(Raven.Client.Documents.Indexes.IndexDefinition)">
            <summary>
            Equals the specified other.
            </summary>
            <param name="other">The other.</param>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.IndexDefinition.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.IndexDefinition.GetIndexHash">
            <summary>
            Provide a cached version of the index hash code, which is used when generating
            the index etag.
            It isn't really useful for anything else, in particular, we cache that because
            we want to avoid calculating the cost of doing this over and over again on each
            query.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.IndexDefinition.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.IndexDefinition.RemoveDefaultValues">
            <summary>
            Remove the default values that we don't actually need
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexDefinition.OutputReduceToCollection">
            <summary>
            If not null than each reduce result will be created as a document in the specified collection name.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexDefinition.ReduceOutputIndex">
            <summary>
            If not null then this number will be part of identifier of a created document being output of reduce function
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexDefinition.PatternForOutputReduceToCollectionReferences">
            <summary>
            Defines pattern for identifiers of documents which reference IDs of reduce outputs documents
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexDefinition.PatternReferencesCollectionName">
            <summary>
            Defines a collection name for reference documents created based on provided pattern
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexDefinition.DeploymentMode">
            <summary>
            Define index deployment mode
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Indexes.AbstractIndexDefinitionBuilder`3">
            <summary>
            This class provides a way to define a strongly typed index on the client.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractIndexDefinitionBuilder`3.Reduce">
            <summary>
            Gets or sets the reduce function
            </summary>
            <value>The reduce.</value>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractIndexDefinitionBuilder`3.Stores">
            <summary>
            Gets or sets the stores options
            </summary>
            <value>The stores.</value>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractIndexDefinitionBuilder`3.StoresStrings">
            <summary>
            Gets or sets the stores options
            </summary>
            <value>The stores.</value>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractIndexDefinitionBuilder`3.Indexes">
            <summary>
            Gets or sets the indexing options
            </summary>
            <value>The indexes.</value>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractIndexDefinitionBuilder`3.IndexesStrings">
            <summary>
            Gets or sets the indexing options
            </summary>
            <value>The indexes.</value>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractIndexDefinitionBuilder`3.Analyzers">
            <summary>
            Get or set the analyzers
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractIndexDefinitionBuilder`3.AnalyzersStrings">
            <summary>
            Get or set the analyzers
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractIndexDefinitionBuilder`3.TermVectors">
            <summary>
            Gets or sets the term vector options
            </summary>
            <value>The term vectors.</value>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractIndexDefinitionBuilder`3.TermVectorsStrings">
            <summary>
            Gets or sets the term vector options
            </summary>
            <value>The term vectors.</value>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractIndexDefinitionBuilder`3.SpatialIndexes">
            <summary>
            Gets or sets the spatial options
            </summary>
            <value>The spatial options.</value>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractIndexDefinitionBuilder`3.SpatialIndexesStrings">
            <summary>
            Gets or sets the spatial options
            </summary>
            <value>The spatial options.</value>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractIndexDefinitionBuilder`3.LockMode">
            <summary>
            Gets or sets the index lock mode
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractIndexDefinitionBuilder`3.Priority">
            <summary>
            Gets or sets the index lock mode
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractIndexDefinitionBuilder`3.State">
            <summary>
            Index state
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractIndexDefinitionBuilder`3.DeploymentMode">
            <summary>
            Index deployment mode
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractIndexDefinitionBuilder`3.OutputReduceToCollection">
            <summary>
            If not null than each reduce result will be created as a document in the specified collection name.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractIndexDefinitionBuilder`3.PatternForOutputReduceToCollectionReferences">
            <summary>
            Defines pattern for identifiers of documents which reference IDs of reduce outputs documents
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractIndexDefinitionBuilder`3.PatternReferencesCollectionName">
            <summary>
            Defines a collection name for reference documents created based on provided pattern
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.AbstractIndexDefinitionBuilder`3.AdditionalSources">
            <summary>
            Add additional sources to be compiled with the index on the server.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractIndexDefinitionBuilder`3.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Documents.Indexes.IndexDefinitionBuilder`2"/> class.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.AbstractIndexDefinitionBuilder`3.ToIndexDefinition(Raven.Client.Documents.Conventions.DocumentConventions,System.Boolean)">
            <summary>
            Toes the index definition.
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Indexes.IndexDefinitionBuilder`2">
            <summary>
            This class provides a way to define a strongly typed index on the client.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexDefinitionBuilder`2.Map">
            <summary>
            Gets or sets the map function
            </summary>
            <value>The map.</value>
        </member>
        <member name="T:Raven.Client.Documents.Indexes.IndexDefinitionBuilder`1">
            <summary>
            This class provides a way to define a strongly typed index on the client.
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Indexes.IndexDefinitionHelper">
            <summary>
            Generate index definition from linq expressions
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.IndexDefinitionHelper.PruneToFailureLinqQueryAsStringToWorkableCode``2(System.Linq.Expressions.LambdaExpression,Raven.Client.Documents.Conventions.DocumentConventions,System.String,System.Boolean)">
            <summary>
            Perform the actual generation
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Indexes.IndexFailureInformation">
            <summary>
            Information about index failure rates
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.IndexFailureInformation.IsInvalidIndex(System.Boolean)">
            <summary>
            Indicates whether this is invalid index.
            </summary>
            <value><c>true</c> if this is invalid index; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexFailureInformation.Name">
            <summary>
            Index name
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexFailureInformation.MapAttempts">
            <summary>
            Number of indexing attempts.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexFailureInformation.MapSuccesses">
            <summary>
            Number of indexing successes.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexFailureInformation.MapErrors">
            <summary>
            Number of indexing errors.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexFailureInformation.MapReferenceAttempts">
            <summary>
            Number of reference indexing attempts.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexFailureInformation.MapReferenceSuccesses">
            <summary>
            Number of references indexing successes.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexFailureInformation.MapReferenceErrors">
            <summary>
            Number of reference indexing errors.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexFailureInformation.ReduceAttempts">
            <summary>
            Number of reduce attempts.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexFailureInformation.ReduceSuccesses">
            <summary>
            Number of reduce successes.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexFailureInformation.ReduceErrors">
            <summary>
            Number of reduce errors.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexFailureInformation.FailureRate">
            <summary>
            Failure rate.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.IndexFailureInformation.GetErrorMessage">
            <summary>
            Error message.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexStats.Name">
            <summary>
            Index name.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexStats.MapAttempts">
            <summary>
            Indicates how many times the database tried to index documents (map) using this index.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexStats.MapSuccesses">
            <summary>
            Indicates how many indexing attempts succeeded.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexStats.MapErrors">
            <summary>
            Indicates how many indexing attempts failed.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexStats.MapReferenceAttempts">
            <summary>
            Indicates how many times the database tried to index referenced documents (map) using this index.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexStats.MapReferenceSuccesses">
            <summary>
            Indicates how many indexing attempts of referenced documents succeeded.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexStats.MapReferenceErrors">
            <summary>
            Indicates how many indexing attempts of referenced documents failed.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexStats.ReduceAttempts">
            <summary>
            Indicates how many times database tried to index documents (reduce) using this index.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexStats.ReduceSuccesses">
            <summary>
            Indicates how many reducing attempts succeeded.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexStats.ReduceErrors">
            <summary>
            Indicates how many reducing attempts failed.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexStats.ReduceOutputCollection">
            <summary>
            The reduce output collection.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexStats.ReduceOutputReferencePattern">
            <summary>
            Pattern for creating IDs for the reduce output reference-collection 
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexStats.PatternReferencesCollectionName">
            <summary>
            Collection name for reduce output reference-collection 
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexStats.MappedPerSecondRate">
            <summary>
            The value of docs/sec rate for the index over the last minute
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexStats.ReducedPerSecondRate">
            <summary>
            The value of reduces/sec rate for the index over the last minute
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexStats.MaxNumberOfOutputsPerDocument">
            <summary>
            Indicates the maximum number of produced indexing outputs from a single document
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexStats.LastQueryingTime">
            <summary>
            Time of last query for this index.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexStats.State">
            <summary>
            Index state (Normal, Disabled, Idle, Abandoned, Error)
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexStats.Priority">
            <summary>
            Index priority (Low, Normal, High)
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexStats.CreatedTimestamp">
            <summary>
            Date of index creation.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexStats.LastIndexingTime">
            <summary>
            Time of last indexing (map or reduce) for this index.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexStats.LockMode">
            <summary>
            Indicates current lock mode:
            <para>- Unlock - all index definition changes acceptable</para>
            <para>- LockedIgnore - all index definition changes will be ignored, only log entry will be created</para>
            <para>- LockedError - all index definition changes will raise exception</para>
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexStats.Type">
            <summary>
            Indicates index type.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexStats.EntriesCount">
            <summary>
            Total number of entries in this index.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.IndexStats.IsInvalidIndex">
            <summary>
            Determines if index is invalid. If more than 15% of attempts (map or reduce) are errors then value will be <c>true</c>.
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Indexes.JSBeautify">
            <summary>
            Original code taken from:
            https://raw.github.com/einars/js-beautify/master/attic/unmaintained/c-sharp/JSBeautify.cs
            Used under the BSD license: https://github.com/einars/js-beautify/blob/master/license.txt
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Indexes.NumberUtil">
            <summary>
            Helper function for numeric to indexed string and vice versa
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.NumberUtil.NumberToString(System.Int64)">
            <summary>
            Translate a number to an indexable string
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.NumberUtil.NumberToString(System.Double)">
            <summary>
            Translate a number to an indexable string
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.PutIndexResult.Index">
            <summary>
            Gets or sets the total results for this query
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Indexes.RavenMethodAttribute">
            <summary>
            When applied to a custom extension method used in an index, RavenDB will translate
            the invocation to a regular method call so it can be understood by the server.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.Spatial.SpatialOptions.Units">
            <summary>
            Circle radius units, only used for geography indexes
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.Spatial.GeographySpatialOptionsFactory.Default(Raven.Client.Documents.Indexes.Spatial.SpatialUnits)">
            <summary>
            Defines a Geohash Prefix Tree index using a default Max Tree Level <see cref="F:Raven.Client.Documents.Indexes.Spatial.SpatialOptions.DefaultGeohashLevel" />
            </summary>
            <returns></returns>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.Suggestions.SuggestionOptions.Distance">
            <summary>
            String distance algorithm to use. Default algorithm is Levenshtein.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.Suggestions.SuggestionOptions.Accuracy">
            <summary>
            Suggestion accuracy. If <c>null</c> then default accuracy is used (0.5f).
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Indexes.TimeSeries.AbstractGenericTimeSeriesIndexCreationTask`1">
            <summary>
            Abstract class used to provide infrastructure service for actual creation tasks
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.TimeSeries.AbstractGenericTimeSeriesIndexCreationTask`1.#ctor">
            <summary>
            Create a new instance
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.TimeSeries.AbstractGenericTimeSeriesIndexCreationTask`1.Reduce">
            <summary>
            The reduce definition
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.TimeSeries.AbstractGenericTimeSeriesIndexCreationTask`1.Stores">
            <summary>
            Index storage options
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.TimeSeries.AbstractGenericTimeSeriesIndexCreationTask`1.StoresStrings">
            <summary>
            Index storage options
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.TimeSeries.AbstractGenericTimeSeriesIndexCreationTask`1.IndexSuggestions">
            <summary>
            Index suggest options
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.TimeSeries.AbstractGenericTimeSeriesIndexCreationTask`1.Analyzers">
            <summary>
            Index sort options
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.TimeSeries.AbstractGenericTimeSeriesIndexCreationTask`1.AnalyzersStrings">
            <summary>
            Index sort options
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.TimeSeries.AbstractGenericTimeSeriesIndexCreationTask`1.TermVectors">
            <summary>
            Index term vector options
            </summary>		
        </member>
        <member name="P:Raven.Client.Documents.Indexes.TimeSeries.AbstractGenericTimeSeriesIndexCreationTask`1.TermVectorsStrings">
            <summary>
            Index term vector options
            </summary>		
        </member>
        <member name="P:Raven.Client.Documents.Indexes.TimeSeries.AbstractGenericTimeSeriesIndexCreationTask`1.SpatialIndexes">
            <summary>
            Spatial index options
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.TimeSeries.AbstractGenericTimeSeriesIndexCreationTask`1.SpatialIndexesStrings">
            <summary>
            Spatial index options
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.TimeSeries.AbstractGenericTimeSeriesIndexCreationTask`1.Indexes">
            <summary>
            Indexing options
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.TimeSeries.AbstractGenericTimeSeriesIndexCreationTask`1.IndexesStrings">
            <summary>
            Indexing options
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.TimeSeries.AbstractGenericTimeSeriesIndexCreationTask`1.OutputReduceToCollection">
            <summary>
            If not null than each reduce result will be created as a document in the specified collection name.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.TimeSeries.AbstractGenericTimeSeriesIndexCreationTask`1.PatternForOutputReduceToCollectionReferences">
            <summary>
            Defines pattern for identifiers of documents which reference IDs of reduce outputs documents
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.TimeSeries.AbstractGenericTimeSeriesIndexCreationTask`1.Index(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},Raven.Client.Documents.Indexes.FieldIndexing)">
            <summary>
            Register a field to be indexed
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.TimeSeries.AbstractGenericTimeSeriesIndexCreationTask`1.Index(System.String,Raven.Client.Documents.Indexes.FieldIndexing)">
            <summary>
            Register a field to be indexed
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.TimeSeries.AbstractGenericTimeSeriesIndexCreationTask`1.Spatial(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Func{Raven.Client.Documents.Indexes.Spatial.SpatialOptionsFactory,Raven.Client.Documents.Indexes.Spatial.SpatialOptions})">
            <summary>
            Register a field to be spatially indexed
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.TimeSeries.AbstractGenericTimeSeriesIndexCreationTask`1.Spatial(System.String,System.Func{Raven.Client.Documents.Indexes.Spatial.SpatialOptionsFactory,Raven.Client.Documents.Indexes.Spatial.SpatialOptions})">
            <summary>
            Register a field to be spatially indexed
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.TimeSeries.AbstractGenericTimeSeriesIndexCreationTask`1.Store(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},Raven.Client.Documents.Indexes.FieldStorage)">
            <summary>
            Register a field to be stored
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.TimeSeries.AbstractGenericTimeSeriesIndexCreationTask`1.Store(System.String,Raven.Client.Documents.Indexes.FieldStorage)">
            <summary>
            Register a field to be stored
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.TimeSeries.AbstractGenericTimeSeriesIndexCreationTask`1.Analyze(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)">
            <summary>
            Register a field to be analyzed
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.TimeSeries.AbstractGenericTimeSeriesIndexCreationTask`1.Analyze(System.String,System.String)">
            <summary>
            Register a field to be analyzed
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.TimeSeries.AbstractGenericTimeSeriesIndexCreationTask`1.TermVector(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},Raven.Client.Documents.Indexes.FieldTermVector)">
            <summary>
            Register a field to have term vectors
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.TimeSeries.AbstractGenericTimeSeriesIndexCreationTask`1.TermVector(System.String,Raven.Client.Documents.Indexes.FieldTermVector)">
            <summary>
            Register a field to have term vectors
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.TimeSeries.AbstractGenericTimeSeriesIndexCreationTask`1.Suggestion(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Register a field to be sorted
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.TimeSeries.AbstractJavaScriptTimeSeriesIndexCreationTask.Maps">
            <summary>
            All the map functions for this index
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.TimeSeries.AbstractJavaScriptTimeSeriesIndexCreationTask.IsMapReduce">
            <inheritdoc />
        </member>
        <member name="P:Raven.Client.Documents.Indexes.TimeSeries.AbstractJavaScriptTimeSeriesIndexCreationTask.OutputReduceToCollection">
            <summary>
            If not null than each reduce result will be created as a document in the specified collection name.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.TimeSeries.AbstractJavaScriptTimeSeriesIndexCreationTask.PatternReferencesCollectionName">
            <summary>
            Defines a collection name for reference documents created based on provided pattern
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Indexes.TimeSeries.AbstractJavaScriptTimeSeriesIndexCreationTask.PatternForOutputReduceToCollectionReferences">
            <summary>
            Defines a collection name for reference documents created based on provided pattern
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.TimeSeries.AbstractJavaScriptTimeSeriesIndexCreationTask.CreateIndexDefinition">
            <inheritdoc />
        </member>
        <member name="T:Raven.Client.Documents.Indexes.TimeSeries.AbstractMultiMapTimeSeriesIndexCreationTask`1">
            <summary>
            Allow to create indexes with multiple maps
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.TimeSeries.AbstractMultiMapTimeSeriesIndexCreationTask`1.AddMapForAll``1(System.String,System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{Raven.Client.Documents.Indexes.TimeSeries.TimeSeriesSegment},System.Collections.IEnumerable}})">
            <summary>
            Uses reflection to call <see cref="M:Raven.Client.Documents.Indexes.TimeSeries.AbstractMultiMapTimeSeriesIndexCreationTask`1.AddMap``1(System.String,System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{Raven.Client.Documents.Indexes.TimeSeries.TimeSeriesSegment},System.Collections.IEnumerable}})"/> for the base type and all available subclasses.
            </summary>
            <remarks>This is taken from Oren's code in this thread https://groups.google.com/d/msg/ravendb/eFUlQG-spzE/Ac0PrvsFyJYJ </remarks>
            <typeparam name="TBase">The base class type whose descendant types are to be included in the index.</typeparam>
            <param name="expr"></param>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.TimeSeries.AbstractMultiMapTimeSeriesIndexCreationTask`1.CreateIndexDefinition">
            <summary>
            Creates the index definition.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Raven.Client.Documents.Indexes.TimeSeries.AbstractMultiMapTimeSeriesIndexCreationTask">
            <summary>
            Allow to create indexes with multiple maps
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.TimeSeries.AbstractTimeSeriesIndexCreationTask`2.AddMapForAll(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{Raven.Client.Documents.Indexes.TimeSeries.TimeSeriesSegment},System.Collections.IEnumerable}})">
            <summary>
            Sets map function for all TimeSeries
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.TimeSeries.AbstractTimeSeriesIndexCreationTask`2.AddMap(System.String,System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{Raven.Client.Documents.Indexes.TimeSeries.TimeSeriesSegment},System.Collections.IEnumerable}})">
            <summary>
            Sets map function for specified TimeSeries
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Indexes.TimeSeries.TimeSeriesIndexDefinitionBuilder`2">
            <summary>
            This class provides a way to define a strongly typed index on the client.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.TimeSeries.TimeSeriesIndexDefinitionBuilder`2.AddMapForAll(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{Raven.Client.Documents.Indexes.TimeSeries.TimeSeriesSegment},System.Collections.IEnumerable}})">
            <summary>
            Sets map function for all TimeSeries
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Indexes.TimeSeries.TimeSeriesIndexDefinitionBuilder`2.AddMap(System.String,System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{Raven.Client.Documents.Indexes.TimeSeries.TimeSeriesSegment},System.Collections.IEnumerable}})">
            <summary>
            Sets map function for specified TimeSeries
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Indexes.TimeSeries.TimeSeriesIndexDefinitionBuilder`1">
            <summary>
            This class provides a way to define a strongly typed index on the client.
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.LinqExtensions">
            <summary>
             Extensions to the linq syntax
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.Include``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Includes the specified path in the query, loading the document specified in that path
            </summary>
            <typeparam name="TResult">The type of the object that holds the id that you want to include.</typeparam>
            <param name="source">The source for querying</param>
            <param name="path">The path, which is name of the property that holds the id of the object to include.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.Include``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Includes the specified path in the query, loading the document specified in that path
            </summary>
            <typeparam name="TResult">The type of the object that holds the id that you want to include.</typeparam>
            <typeparam name="TInclude">The type of the object that you want to include.</typeparam>
            <param name="source">The source for querying</param>
            <param name="path">The path, which is name of the property that holds the id of the object to include.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.Include``1(System.Linq.IQueryable{``0},System.String)">
            <summary>
            Includes the specified path in the query, loading the document specified in that path
            </summary>
            <typeparam name="TResult">The type of the object that holds the id that you want to include.</typeparam>
            <param name="source">The source for querying</param>
            <param name="path">The path, which is name of the property that holds the id of the object to include.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.Include``1(System.Linq.IQueryable{``0},System.Action{Raven.Client.Documents.Session.Loaders.IQueryIncludeBuilder{``0}})">
            <summary>
            Includes the specified documents and/or counters in the query
            </summary>
            <typeparam name="TResult">The type of the object that holds the id that you want to include.</typeparam>
            <param name="source">The source for querying</param>
            <param name="includes">Specifies the documents and/or counters to include </param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.As``1(System.Linq.IQueryable)">
            <summary>
            Project into a different type.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.Intersect``1(System.Linq.IQueryable{``0})">
            <summary>
            Partition the query so we can intersect different parts of the query
            across different index entries.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.ProjectInto``1(System.Linq.IQueryable)">
            <summary>
            Project query results according to the specified type
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.SuggestUsing``1(System.Linq.IQueryable{``0},Raven.Client.Documents.Queries.Suggestions.SuggestionBase)">
            <summary>
            Suggest alternative values for the queried term
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.SuggestUsing``1(System.Linq.IQueryable{``0},System.Action{Raven.Client.Documents.Queries.Suggestions.ISuggestionBuilder{``0}})">
            <summary>
            Suggest alternative values for the queried term
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.LazilyAsync``1(System.Linq.IQueryable{``0})">
            <summary>
            Register the query as a lazy async query in the session and return a lazy async
            instance that will evaluate the query only when needed
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.LazilyAsync``1(System.Linq.IQueryable{``0},System.Action{System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Register the query as a lazy async query in the session and return a lazy async
            instance that will evaluate the query only when needed
            As well as a function to execute when the value is evaluated
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.Lazily``1(System.Linq.IQueryable{``0})">
            <summary>
            Register the query as a lazy query in the session and return a lazy
            instance that will evaluate the query only when needed
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.Lazily``1(System.Linq.IQueryable{``0},System.Action{System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Register the query as a lazy query in the session and return a lazy
            instance that will evaluate the query only when needed
            As well as a function to execute when the value is evaluated
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.CountLazily``1(System.Linq.IQueryable{``0})">
            <summary>
            Register the query as a lazy-count query in the session and return a lazy
            instance that will evaluate the query only when needed
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.CountLazilyAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Register the query as a lazy-count query in the session and return a lazy
            instance that will evaluate the query only when needed
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.ToListAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Returns a list of results for a query asynchronously. 
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.ToArrayAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Returns an array of results for a query asynchronously. 
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.AnyAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Determines whether a sequence contains any elements.
            </summary>
            
            <typeparam name="TSource">
            The type of the elements of source.
            </typeparam>
            
            <param name="source">
            The <see cref="T:Raven.Client.Documents.Linq.IRavenQueryable`1"/> that contains the elements to be counted.
            </param>
            <param name="token">The cancellation token.</param>
            
            <returns>
            true if the source sequence contains any elements; otherwise, false.
            </returns>
            
            <exception cref="T:System.ArgumentNullException">
            source is null.
            </exception>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.AnyAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Determines whether any element of a sequence satisfies a condition.
            </summary>
            
            <typeparam name="TSource">
            The type of the elements of source.
            </typeparam>
            
            <param name="source">
            The <see cref="T:Raven.Client.Documents.Linq.IRavenQueryable`1"/> that contains the elements to be counted.
            </param>
            
            <param name="predicate">
            A function to test each element for a condition.
            </param>
            
            <param name="token">The cancellation token.</param>
            
            <returns>
            true if any elements in the source sequence pass the test in the specified
            predicate; otherwise, false.
            </returns>
            
            <exception cref="T:System.ArgumentNullException">
            source or predicate is null.
            </exception>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.CountAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the number of elements in a sequence.
            </summary>
            
            <typeparam name="TSource">
            The type of the elements of source.
            </typeparam>
            
            <param name="source">
            The <see cref="T:Raven.Client.Documents.Linq.IRavenQueryable`1"/> that contains the elements to be counted.
            </param>
            <param name="token">The cancellation token.</param>
            
            <returns>
            The number of elements in the input sequence.
            </returns>
            
            <exception cref="T:System.ArgumentNullException">
            source is null.
            </exception>
            
            <exception cref="T:System.OverflowException">
            The number of elements in source is larger than <see cref="F:System.Int32.MaxValue"/>.
            </exception>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.LongCount``1(System.Linq.IQueryable{``0})">
            <summary>
            Returns the number of elements in a sequence as int64 type.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.LongCountAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the number of elements in a sequence as int64 type.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.CountAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Returns the number of elements in the specified sequence that satisfies a condition.
            </summary>
            
            <typeparam name="TSource">
            The type of the elements of source.
            </typeparam>
            
            <param name="source">
            The <see cref="T:Raven.Client.Documents.Linq.IRavenQueryable`1"/> that contains the elements to be counted.
            </param>
            
            <param name="predicate">
            A function to test each element for a condition.
            </param>
            
            <param name="token">The cancellation token.</param>
            
            <returns>
            The number of elements in the sequence that satisfies the condition in
            the predicate function.
            </returns>
            
            <exception cref="T:System.ArgumentNullException">
            source or predicate is null.
            </exception>
            
            <exception cref="T:System.OverflowException">
            The number of elements in source is larger than <see cref="F:System.Int32.MaxValue"/>.
            </exception>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.FirstAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Asynchronously returns the first element of a sequence.
            </summary>
            
            <typeparam name="TSource">
            The type of the elements of source.
            </typeparam>
            
            <param name="source">
            The <see cref="T:Raven.Client.Documents.Linq.IRavenQueryable`1"/> to return the first element of.
            </param>
            <param name="token">The cancellation token.</param>
            
            <returns>
            The first element in source.
            </returns>
            
            <exception cref="T:System.ArgumentNullException">
            source is null.
            </exception>
            
            <exception cref="T:System.InvalidOperationException">
            The source sequence is empty or source
            is not of type <see cref="T:Raven.Client.Documents.Linq.IRavenQueryable`1"/>.
            </exception>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.FirstAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Asynchronously returns the first element of a sequence that satisfies a specified condition.
            </summary>
            
            <typeparam name="TSource">
            The type of the elements of source.
            </typeparam>
            
            <param name="source">
            The <see cref="T:Raven.Client.Documents.Linq.IRavenQueryable`1"/> to return the first element of.
            </param>
            
            <param name="predicate">
            A function to test each element for a condition.
            </param>
            <param name="token">The cancellation token.</param>
            
            <returns>
            The first element in source.
            </returns>
            
            <exception cref="T:System.ArgumentNullException">
            source or predicate is null.
            </exception>
            
            <exception cref="T:System.InvalidOperationException">
            No element satisfies the condition in predicate,
            the source sequence is empty or source
            is not of type <see cref="T:Raven.Client.Documents.Linq.IRavenQueryable`1"/>.
            </exception>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.FirstOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Asynchronously returns the first element of a sequence, or a default value if the sequence contains no elements.
            </summary>
            
            <typeparam name="TSource">
            The type of the elements of source.
            </typeparam>
            
            <param name="source">
            The <see cref="T:Raven.Client.Documents.Linq.IRavenQueryable`1"/> to return the first element of.
            </param>
            <param name="token">The cancellation token.</param>
            
            <returns>
            default(TSource) if source is empty; otherwise,
            the first element in source.
            </returns>
            
            <exception cref="T:System.ArgumentNullException">
            source is null.
            </exception>
            
            <exception cref="T:System.InvalidOperationException">
            source is not of type <see cref="T:Raven.Client.Documents.Linq.IRavenQueryable`1"/>.
            </exception>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.FirstOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Asynchronously returns the first element of a sequence that satisfies a specified
            condition or a default value if no such element is found.
            </summary>
            
            <typeparam name="TSource">
            The type of the elements of source.
            </typeparam>
            
            <param name="source">
            The <see cref="T:Raven.Client.Documents.Linq.IRavenQueryable`1"/> to return the first element of.
            </param>
            
            <param name="predicate">
            A function to test each element for a condition.
            </param>
            <param name="token">The cancellation token.</param>
            
            <returns>
            default(TSource) if source is empty or
            if no element passes the test specified by predicate;
            otherwise, the first element in source that passes
            the test specified by predicate.
            </returns>
            
            <exception cref="T:System.ArgumentNullException">
            source or predicate is null.
            </exception>
            
            <exception cref="T:System.InvalidOperationException">
            source is not of type <see cref="T:Raven.Client.Documents.Linq.IRavenQueryable`1"/>.
            </exception>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.SingleAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Asynchronously returns the only element of a sequence, and throws an exception if there
            is not exactly one element in the sequence.
            </summary>
            
            <typeparam name="TSource">
            The type of the elements of source.
            </typeparam>
            
            <param name="source">
            The <see cref="T:Raven.Client.Documents.Linq.IRavenQueryable`1"/> to return the single element of.
            </param>
            <param name="token">The cancellation token.</param>
            
            <returns>
            The single element of the input sequence.
            </returns>
            
            <exception cref="T:System.ArgumentNullException">
            source is null.
            </exception>
            
            <exception cref="T:System.InvalidOperationException">
            The source sequence is empty, has more than one element or
            is not of type <see cref="T:Raven.Client.Documents.Linq.IRavenQueryable`1"/>.
            </exception>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.SingleAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Asynchronously returns the only element of a sequence, and throws an exception if there
            is not exactly one element in the sequence.
            </summary>
            
            <typeparam name="TSource">
            The type of the elements of source.
            </typeparam>
            
            <param name="source">
            The <see cref="T:Raven.Client.Documents.Linq.IRavenQueryable`1"/> to return the single element of.
            </param>
            
            <param name="predicate">
            A function to test each element for a condition.
            </param>
            <param name="token">The cancellation token.</param>
            
            <returns>
            The single element of the input sequence that satisfies the condition in predicate.
            </returns>
            
            <exception cref="T:System.ArgumentNullException">
            source or predicate is null.
            </exception>
            
            <exception cref="T:System.InvalidOperationException">
            No element satisfies the condition in predicate, more than
            one element satisfies the condition, the source sequence is empty or
            source is not of type <see cref="T:Raven.Client.Documents.Linq.IRavenQueryable`1"/>.
            </exception>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.SingleOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Asynchronously returns the only element of a sequence, or a default value if the
            sequence is empty; this method throws an exception if there is more than one
            element in the sequence.
            </summary>
            
            <typeparam name="TSource">
            The type of the elements of source.
            </typeparam>
            
            <param name="source">
            The <see cref="T:Raven.Client.Documents.Linq.IRavenQueryable`1"/> to return the first element of.
            </param>
            <param name="token">The cancellation token.</param>
            
            <returns>
            The single element of the input sequence, or default(TSource)
            if the sequence contains no elements.
            </returns>
            
            <exception cref="T:System.ArgumentNullException">
            source is null.
            </exception>
            
            <exception cref="T:System.InvalidOperationException">
            source has more than one element or
            is not of type <see cref="T:Raven.Client.Documents.Linq.IRavenQueryable`1"/>.
            </exception>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.SingleOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Asynchronously returns the only element of a sequence that satisfies a specified
            condition or a default value if no such element exists; this method throws an
            exception if more than one element satisfies the condition.
            </summary>
            
            <typeparam name="TSource">
            The type of the elements of source.
            </typeparam>
            
            <param name="source">
            The <see cref="T:Raven.Client.Documents.Linq.IRavenQueryable`1"/> to return the first element of.
            </param>
            
            <param name="predicate">
            A function to test each element for a condition.
            </param>
            
            <param name="token">The cancellation token.</param>
            
            <returns>
            The single element of the input sequence that satisfies the condition in predicate,
            or default(TSource) if no such element is found.
            </returns>
            
            <exception cref="T:System.ArgumentNullException">
            source or predicate is null.
            </exception>
            
            <exception cref="T:System.InvalidOperationException">
            More than one element satisfies the condition in predicate
            or source is not of type <see cref="T:Raven.Client.Documents.Linq.IRavenQueryable`1"/>.
            </exception>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.Search``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Decimal,Raven.Client.Documents.SearchOptions,Raven.Client.Documents.Queries.SearchOperator)">
            <summary>        
            Perform a search for documents which fields that match the searchTerms.
            If there is more than a single term, each of them will be checked independently.        
            </summary>
            <typeparam name="T">The type of element of self</typeparam>
            <param name="self">The <see cref="T:System.Linq.IQueryable`1"/> to search on</param>
            <param name="fieldSelector">Function returning the field to search on</param>
            <param name="searchTerms">Field terms to search for, separated with whitespaces</param>
            <param name="boost">Boost factor for sorting purposes</param>
            <param name="options">Logical operator to use in relation to the previous filtering statement.</param>
            <param name="operator">Determines the logical operator between all of the terms received in searchTerms parameter</param>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.Search``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Collections.Generic.IEnumerable{System.String},System.Decimal,Raven.Client.Documents.SearchOptions,Raven.Client.Documents.Queries.SearchOperator)">
            <summary>        
            Perform a search for documents which fields match the searchTerms array.
            Each array element will be checked independently.        
            </summary>
            <typeparam name="T">The type of element of self</typeparam>
            <param name="self">The <see cref="T:System.Linq.IQueryable`1"/> to search on</param>
            <param name="fieldSelector">Function returning the field to search on</param>
            <param name="searchTerms">Array of terms to search for.</param>
            <param name="boost">Boost factor for sorting purposes</param>
            <param name="options">Logical operator to use in relation to the previous filtering statement.</param>
            <param name="operator">Determines the logical operator between all of the terms received in searchTerms parameter</param>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.OrderByScore``1(System.Linq.IQueryable{``0})">
            <summary>
            Perform an initial sort by lucene score.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.ThenByScore``1(System.Linq.IOrderedQueryable{``0})">
            <summary>
            Perform an initial sort by lucene score.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.OrderByScoreDescending``1(System.Linq.IQueryable{``0})">
            <summary>
            Perform an initial sort by lucene score descending.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.ThenByScoreDescending``1(System.Linq.IOrderedQueryable{``0})">
            <summary>
            Perform an initial sort by lucene score descending.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.ToStream``1(System.Linq.IQueryable{``0},System.IO.Stream)">
            <summary>
            Returns the query results as a stream
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.ToStream``1(Raven.Client.Documents.Session.IDocumentQuery{``0},System.IO.Stream)">
            <summary> 
            Returns the query results as a stream
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.ToStreamAsync``1(System.Linq.IQueryable{``0},System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Returns the query results as a stream
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.LinqExtensions.ToStreamAsync``1(Raven.Client.Documents.Session.IAsyncDocumentQuery{``0},System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Returns the query results as a stream
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Linq.ExpressionInfo">
            <summary>
            This class represents a node in an expression, usually a member - but in the case of dynamic queries the path to a member, or method info
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Linq.ExpressionInfo.Path">
            <summary>
            Gets the full path of the member being referred to by this node
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Linq.ExpressionInfo.Type">
            <summary>
            Gets the actual type being referred to
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Linq.ExpressionInfo.IsNestedPath">
            <summary>
            Whether the expression is of a nested path
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Linq.ExpressionInfo.MaybeProperty">
            <summary>
            Maybe contain the relevant property
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Linq.ExpressionInfo.Args">
            <summary>
            Gets the arguments of the expression. Only used for call expressions
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.ExpressionInfo.#ctor(System.String,System.Type,System.Boolean,System.String[])">
            <summary>
            Creates an ExpressionMemberInfo
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Linq.IDocumentQueryGenerator">
            <summary>
             Generate a new document query
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Linq.IDocumentQueryGenerator.Conventions">
            <summary>
            Gets the conventions associated with this query
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.IDocumentQueryGenerator.Query``1(System.String,System.String,System.Boolean)">
            <summary>
            Create a new query for <typeparam name="T"/>
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.IDocumentQueryGenerator.AsyncQuery``1(System.String,System.String,System.Boolean)">
            <summary>
            Create a new query for <typeparam name="T"/>
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.IDocumentQueryGenerator.CreateRavenQueryInspector``1">
            <summary>
            Generates a query inspector
            </summary>
            <returns>RavenQueryInspector object</returns>
        </member>
        <member name="T:Raven.Client.Documents.Linq.Indexing.IndexingLinqExtensions">
            <summary>
            Extension methods that adds additional behavior during indexing operations
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.Indexing.IndexingLinqExtensions.WhereEntityIs``1(System.Collections.Generic.IEnumerable{System.Object},System.String[])">
            <summary>
            Marker method for allowing complex (multi entity) queries on the server.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.Indexing.IndexingLinqExtensions.Boost(System.Object,System.Single)">
            <summary>
            Boost the value with the given amount
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.Indexing.IndexingLinqExtensions.IfEntityIs``1(System.Object,System.String)">
            <summary>
            Marker method for allowing complex (multi entity) queries on the server.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.Indexing.IndexingLinqExtensions.ParseInt(System.Object)">
            <summary>
            Safely parses string value to int, when failed default(int) is returned.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.Indexing.IndexingLinqExtensions.ParseInt(System.Object,System.Int32)">
            <summary>
            Safely parses string value to int, when failed defaultValue is returned.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.Indexing.IndexingLinqExtensions.ParseDouble(System.Object)">
            <summary>
            Safely parses string value to double, when failed default(double) is returned.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.Indexing.IndexingLinqExtensions.ParseDouble(System.Object,System.Double)">
            <summary>
            Safely parses string value to double, when failed defaultValue is returned.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.Indexing.IndexingLinqExtensions.ParseDecimal(System.Object)">
            <summary>
            Safely parses string value to decimal, when failed default(decimal) is returned.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.Indexing.IndexingLinqExtensions.ParseDecimal(System.Object,System.Decimal)">
            <summary>
            Safely parses string value to decimal, when failed defaultValue is returned.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.Indexing.IndexingLinqExtensions.ParseLong(System.Object)">
            <summary>
            Safely parses string value to long, when failed default(long) is returned.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.Indexing.IndexingLinqExtensions.ParseLong(System.Object,System.Int64)">
            <summary>
            Safely parses string value to long, when failed defaultValue is returned.
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Linq.IRavenQueryable`1">
            <summary>
            An implementation of <see cref="T:System.Linq.IOrderedQueryable`1"/> with Raven specific operation
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.IRavenQueryable`1.Statistics(Raven.Client.Documents.Session.QueryStatistics@)">
            <summary>
            Provide statistics about the query, such as duration, total number of results, staleness information, etc.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.IRavenQueryable`1.Customize(System.Action{Raven.Client.Documents.Session.IDocumentQueryCustomization})">
            <summary>
            Customizes the query using the specified action
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Linq.IRavenQueryProvider">
            <summary>
            Extension for the built-in <see cref="T:System.Linq.IQueryProvider"/> allowing for Raven specific operations
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.IRavenQueryProvider.AfterQueryExecuted(System.Action{Raven.Client.Documents.Queries.QueryResult})">
            <summary>
            Callback to get the results of the query
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.IRavenQueryProvider.Customize(System.Action{Raven.Client.Documents.Session.IDocumentQueryCustomization})">
            <summary>
            Customizes the query using the specified action
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Linq.IRavenQueryProvider.IndexName">
            <summary>
            Gets the name of the index.
            </summary>
            <value>The name of the index.</value>
        </member>
        <member name="P:Raven.Client.Documents.Linq.IRavenQueryProvider.QueryGenerator">
            <summary>
            Get the query generator
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Linq.IRavenQueryProvider.CustomizeQuery">
            <summary>
            The action to execute on the customize query
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.IRavenQueryProvider.For``1">
            <summary>
            Change the result type for the query provider
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.IRavenQueryProvider.ToAsyncDocumentQuery``1(System.Linq.Expressions.Expression)">
            <summary>
            Convert the Linq query to a Lucene query
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.IRavenQueryProvider.ToDocumentQuery``1(System.Linq.Expressions.Expression)">
            <summary>
            Convert the linq query to a Lucene query
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.IRavenQueryProvider.Lazily``1(System.Linq.Expressions.Expression,System.Action{System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Convert the Linq query to a lazy Lucene query and provide a function to execute when it is being evaluated
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.IRavenQueryProvider.CountLazily``1(System.Linq.Expressions.Expression)">
            <summary>
            Convert the Linq query to a lazy-count Lucene query and provide a function to execute when it is being evaluated
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.IRavenQueryProvider.CountLazilyAsync``1(System.Linq.Expressions.Expression,System.Threading.CancellationToken)">
            <summary>
            Convert the Linq query to a lazy-count Lucene query and provide a function to execute when it is being evaluated
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Linq.IRavenQueryProvider.FieldsToFetch">
            <summary>
            Set the fields to fetch
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.LinqPathProvider.GetPath(System.Linq.Expressions.Expression)">
            <summary>
            Get the path from the expression, including considering dictionary calls
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.LinqPathProvider.GetValueFromExpression(System.Linq.Expressions.Expression,System.Type)">
            <summary>
            Get the actual value from the expression
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.LinqPathProvider.GetMemberExpression(System.Linq.Expressions.Expression)">
            <summary>
            Get the member expression from the expression
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryableExtensions.Where``1(Raven.Client.Documents.Linq.IRavenQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Filters a sequence of values based on a predicate.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryableExtensions.Where``1(Raven.Client.Documents.Linq.IRavenQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
            <summary>
            Filters a sequence of values based on a predicate.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryableExtensions.OrderBy``2(Raven.Client.Documents.Linq.IRavenQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Sorts the elements of a sequence in ascending order according to a key.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryableExtensions.OrderBy``2(Raven.Client.Documents.Linq.IRavenQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
            <summary>
            Sorts the elements of a sequence in ascending order according to a key.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryableExtensions.OrderByDescending``2(Raven.Client.Documents.Linq.IRavenQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Sorts the elements of a sequence in descending order according to a key.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryableExtensions.OrderByDescending``2(Raven.Client.Documents.Linq.IRavenQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
            <summary>
            Sorts the elements of a sequence in descending order according to a key.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryableExtensions.ThenBy``2(Raven.Client.Documents.Linq.IRavenQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Sorts(secondary) the elements of a sequence in ascending order according to a key.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryableExtensions.ThenByDescending``2(Raven.Client.Documents.Linq.IRavenQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Sorts(secondary) the elements of a sequence in descending order according to a key.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryableExtensions.Select``2(Raven.Client.Documents.Linq.IRavenQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Projects each element of a sequence into a new form.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryableExtensions.Select``2(Raven.Client.Documents.Linq.IRavenQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})">
            <summary>
            Projects each element of a sequence into a new form.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryableExtensions.In``1(``0,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Implementation of In operator
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryableExtensions.In``1(``0,``0[])">
            <summary>
            Implementation of In operator
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryableExtensions.Skip``1(Raven.Client.Documents.Linq.IRavenQueryable{``0},System.Int32)">
            <summary>
            Bypasses a specified number of elements in a sequence and then returns the remaining elements.
            </summary>
            Summary:
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Implementation of the Contains ANY operator
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryableExtensions.ContainsAll``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Implementation of the Contains ALL operator
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Linq.RavenQueryInspector`1">
            <summary>
            Implements <see cref="T:Raven.Client.Documents.Linq.IRavenQueryable`1"/>
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryInspector`1.Init(Raven.Client.Documents.Linq.IRavenQueryProvider,Raven.Client.Documents.Session.QueryStatistics,Raven.Client.Documents.Queries.Highlighting.LinqQueryHighlightings,System.String,System.String,System.Linq.Expressions.Expression,Raven.Client.Documents.Session.InMemoryDocumentSessionOperations,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Documents.Linq.RavenQueryInspector`1"/> class.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryInspector`1.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryInspector`1.Statistics(Raven.Client.Documents.Session.QueryStatistics@)">
            <summary>
            Provide statistics about the query, such as total count of matching records
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryInspector`1.Customize(System.Action{Raven.Client.Documents.Session.IDocumentQueryCustomization})">
            <summary>
            Customizes the query using the specified action
            </summary>
            <param name="action">The action.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryInspector`1.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryInspector`1.FieldsToFetch(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Set the fields to fetch
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Linq.RavenQueryProvider`1">
            <summary>
            An implementation of <see cref="T:Raven.Client.Documents.Linq.IRavenQueryProvider"/>
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryProvider`1.#ctor(Raven.Client.Documents.Linq.IDocumentQueryGenerator,System.String,System.String,System.Type,Raven.Client.Documents.Session.QueryStatistics,Raven.Client.Documents.Queries.Highlighting.LinqQueryHighlightings,System.Boolean,Raven.Client.Documents.Conventions.DocumentConventions)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Documents.Linq.RavenQueryProvider`1"/> class.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Linq.RavenQueryProvider`1.IndexName">
            <summary>
            Gets the name of the index.
            </summary>
            <value>The name of the index.</value>
        </member>
        <member name="P:Raven.Client.Documents.Linq.RavenQueryProvider`1.CollectionName">
            <summary>
            Gets the name of the collection.
            </summary>
            <value>The name of the collection.</value>
        </member>
        <member name="P:Raven.Client.Documents.Linq.RavenQueryProvider`1.QueryGenerator">
            <summary>
            Get the query generator
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Linq.RavenQueryProvider`1.CustomizeQuery">
            <summary>
            Gets the actions for customizing the generated lucene query
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Linq.RavenQueryProvider`1.FieldsToFetch">
            <summary>
            Set the fields to fetch
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryProvider`1.For``1">
            <summary>
            Change the result type for the query provider
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryProvider`1.Execute(System.Linq.Expressions.Expression)">
            <summary>
            Executes the query represented by a specified expression tree.
            </summary>
            <param name="expression">An expression tree that represents a LINQ query.</param>
            <returns>
            The value that results from executing the specified query.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryProvider`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)">
            <summary>
            Executes the specified expression.
            </summary>
            <typeparam name="TS"></typeparam>
            <param name="expression">The expression.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryProvider`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)">
            <summary>
            Executes the query represented by a specified expression tree.
            </summary>
            <param name="expression">An expression tree that represents a LINQ query.</param>
            <returns>
            The value that results from executing the specified query.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryProvider`1.AfterQueryExecuted(System.Action{Raven.Client.Documents.Queries.QueryResult})">
            <summary>
            Callback to get the results of the query
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryProvider`1.Customize(System.Action{Raven.Client.Documents.Session.IDocumentQueryCustomization})">
            <summary>
            Customizes the query using the specified action
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryProvider`1.ToAsyncDocumentQuery``1(System.Linq.Expressions.Expression)">
            <summary>
            Convert the expression to a Lucene query
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryProvider`1.Lazily``1(System.Linq.Expressions.Expression,System.Action{System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Register the query as a lazy query in the session and return a lazy
            instance that will evaluate the query only when needed
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryProvider`1.LazilyAsync``1(System.Linq.Expressions.Expression,System.Action{System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Register the query as a lazy async query in the session and return a lazy async 
            instance that will evaluate the query only when needed
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryProvider`1.CountLazily``1(System.Linq.Expressions.Expression)">
            <summary>
            Register the query as a lazy-count query in the session and return a lazy
            instance that will evaluate the query only when needed
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryProvider`1.CountLazilyAsync``1(System.Linq.Expressions.Expression,System.Threading.CancellationToken)">
            <summary>
            Register the query as a lazy-count query in the session and return a lazy
            instance that will evaluate the query only when needed
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryProvider`1.ToDocumentQuery``1(System.Linq.Expressions.Expression)">
            <summary>
            Convert the expression to a Lucene query
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Linq.RavenQueryProviderProcessor`1">
            <summary>
            Process a Linq expression to a Lucene query
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Linq.RavenQueryProviderProcessor`1.QueryGenerator">
            <summary>
            The query generator
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Linq.RavenQueryProviderProcessor`1.IndexName">
            <summary>
            The index name
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Linq.RavenQueryProviderProcessor`1.CurrentPath">
            <summary>
            Gets the current path in the case of expressions within collections
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryProviderProcessor`1.#ctor(Raven.Client.Documents.Linq.IDocumentQueryGenerator,System.Action{Raven.Client.Documents.Session.IDocumentQueryCustomization},System.Action{Raven.Client.Documents.Queries.QueryResult},Raven.Client.Documents.Queries.Highlighting.LinqQueryHighlightings,System.String,System.String,System.Collections.Generic.HashSet{Raven.Client.Documents.Linq.FieldToFetch},System.Boolean,System.Type,Raven.Client.Documents.Conventions.DocumentConventions,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Documents.Linq.RavenQueryProviderProcessor`1"/> class.
            </summary>
            <param name="queryGenerator">The document query generator.</param>
            <param name="customizeQuery">The customize query.</param>
            <param name="afterQueryExecuted">Executed after the query run, allow access to the query results</param>
            <param name="indexName">The name of the index the query is executed against.</param>
            <param name="collectionName">The name of the collection the query is executed against.</param>
            <param name="fieldsToFetch">The fields to fetch in this query</param>
            <param name="isMapReduce"></param>
            /// <param name ="originalType" >the original type of the query if TransformWith is called otherwise null</param>
        </member>
        <member name="P:Raven.Client.Documents.Linq.RavenQueryProviderProcessor`1.FieldsToFetch">
            <summary>
            Gets or sets the fields to fetch.
            </summary>
            <value>The fields to fetch.</value>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryProviderProcessor`1.VisitExpression(System.Linq.Expressions.Expression)">
            <summary>
            Visits the expression and generate the lucene query
            </summary>
            <param name="expression">The expression.</param>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryProviderProcessor`1.GetMember(System.Linq.Expressions.Expression)">
            <summary>
            Gets member info for the specified expression and the path to that expression
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryProviderProcessor`1.GetDocumentQueryFor(System.Linq.Expressions.Expression,System.Action{Raven.Client.Documents.Session.IAbstractDocumentQuery{`0}})">
            <summary>
            Gets the lucene query.
            </summary>
            <value>The lucene query.</value>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryProviderProcessor`1.GetAsyncDocumentQueryFor(System.Linq.Expressions.Expression,System.Action{Raven.Client.Documents.Session.IAbstractDocumentQuery{`0}})">
            <summary>
            Gets the lucene query.
            </summary>
            <value>The lucene query.</value>
        </member>
        <member name="M:Raven.Client.Documents.Linq.RavenQueryProviderProcessor`1.Execute(System.Linq.Expressions.Expression)">
            <summary>
            Executes the specified expression.
            </summary>
            <param name="expression">The expression.</param>
            <returns></returns>
        </member>
        <member name="T:Raven.Client.Documents.Linq.RavenQueryProviderProcessor`1.SpecialQueryType">
            <summary>
            Different query types 
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Linq.RavenQueryProviderProcessor`1.SpecialQueryType.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Linq.RavenQueryProviderProcessor`1.SpecialQueryType.Any">
            <summary>
            
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Linq.RavenQueryProviderProcessor`1.SpecialQueryType.Count">
            <summary>
            Get count of items for the query
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Linq.RavenQueryProviderProcessor`1.SpecialQueryType.LongCount">
            <summary>
            Get count of items for the query as an Int64
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Linq.RavenQueryProviderProcessor`1.SpecialQueryType.First">
            <summary>
            Get only the first item
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Linq.RavenQueryProviderProcessor`1.SpecialQueryType.FirstOrDefault">
            <summary>
            Get only the first item (or null)
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Linq.RavenQueryProviderProcessor`1.SpecialQueryType.Single">
            <summary>
            Get only the first item (or throw if there are more than one)
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Linq.RavenQueryProviderProcessor`1.SpecialQueryType.SingleOrDefault">
            <summary>
            Get only the first item (or throw if there are more than one) or null if empty
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.Backups.LocalSettings.FolderPath">
            <summary>
            Path to local folder. If not empty, backups will be held in this folder and not deleted. 
            Otherwise, backups will be created in the TempDir of a database and deleted after successful upload to S3/Glacier/Azure.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.Backups.AmazonSettings.AwsRegionName">
            <summary>
            Amazon Web Services (AWS) region.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.Backups.AmazonSettings.RemoteFolderName">
            <summary>
            Remote folder name.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.Backups.S3Settings.BucketName">
            <summary>
            S3 Bucket name.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.Backups.S3Settings.CustomServerUrl">
            <summary>
            S3 server Url when using custom server
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.Backups.GlacierSettings.VaultName">
            <summary>
            Amazon Glacier Vault name.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.Backups.AzureSettings.StorageContainer">
            <summary>
            Microsoft Azure Storage Container name.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.Backups.AzureSettings.RemoteFolderName">
            <summary>
            Path to remote azure folder.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.Backups.GoogleCloudSettings.BucketName">
            <summary>
            Google cloud storage bucket name must be globally unique
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.Backups.GoogleCloudSettings.RemoteFolderName">
            <summary>
            Path to remote bucket folder.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.Backups.GoogleCloudSettings.GoogleCredentialsJson">
            <summary>
            Authentication credentials to your Google Cloud Storage.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.Backups.PeriodicBackupConfiguration.FullBackupFrequency">
            <summary>
            Frequency of full backup jobs in cron format
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.Backups.PeriodicBackupConfiguration.IncrementalBackupFrequency">
            <summary>
            Frequency of incremental backup jobs in cron format
            If set to null incremental backup will be disabled.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.CollectionOperationOptions.MaxOpsPerSecond">
            <summary>
            Limits the amount of base operation per second allowed.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.DetailedDatabaseStatistics.CountOfIdentities">
            <summary>
            Total number of identities in database.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.DetailedDatabaseStatistics.CountOfCompareExchange">
            <summary>
            Total number of compare-exchange values in database.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.DetailedDatabaseStatistics.CountOfCompareExchangeTombstones">
            <summary>
            Total number of compare-exchange tombstones values in database.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.DetailedDatabaseStatistics.CountOfTimeSeriesDeletedRanges">
            <summary>
            Total number of TimeSeries Deleted Ranges values in database.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.DatabaseStatistics.LastDocEtag">
            <summary>
            Last document etag in database.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.DatabaseStatistics.LastDatabaseEtag">
            <summary>
            Last database etag
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.DatabaseStatistics.CountOfIndexes">
            <summary>
            Total number of indexes in database.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.DatabaseStatistics.CountOfDocuments">
            <summary>
            Total number of documents in database.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.DatabaseStatistics.CountOfRevisionDocuments">
            <summary>
            Total number of revision documents in database.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.DatabaseStatistics.CountOfDocumentsConflicts">
            <summary>
            Total number of documents conflicts in database.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.DatabaseStatistics.CountOfTombstones">
            <summary>
            Total number of tombstones in database.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.DatabaseStatistics.CountOfConflicts">
            <summary>
            Total number of conflicts in database.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.DatabaseStatistics.CountOfAttachments">
            <summary>
            Total number of attachments in database.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.DatabaseStatistics.CountOfUniqueAttachments">
            <summary>
            Total number of attachments in database.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.DatabaseStatistics.CountOfCounterEntries">
            <summary>
            Total number of counter-group entries in database.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.DatabaseStatistics.CountOfTimeSeriesSegments">
            <summary>
            Total number of time-series segments in database.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.DatabaseStatistics.StaleIndexes">
            <summary>
            List of stale index names in database..
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.DatabaseStatistics.Indexes">
            <summary>
            Statistics for each index in database.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.DatabaseStatistics.DatabaseChangeVector">
            <summary>
            Global change vector of the database.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.DatabaseStatistics.DatabaseId">
            <summary>
            Database identifier.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.DatabaseStatistics.Is64Bit">
            <summary>
            Indicates if process is 64-bit
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Operations.DeterminateProgress">
            <summary>
            Used to describe operations with progress expressed as percentage (using processed / total items)
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Operations.IndeterminateProgressCount">
            <summary>
            Used to describe operations with progress expressed as # of total items processes
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Operations.IndeterminateProgress">
            <summary>
            Used to describe indeterminate progress (we use text to describe progress)
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Operations.Operation.FetchOperationStatus">
            <summary>
            Since operation might complete before we subscribe to it,
            fetch operation status but only once  to avoid race condition
            If we receive notification using changes API meanwhile, ignore fetched status
            to avoid issues with non monotonic increasing progress
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Operations.OperationIdResult">
            <summary>
            The result of a OperationIdResult operation
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.OperationIdResult.OperationId">
            <summary>
            Id of operation.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.OperationIdResult.OperationNodeTag">
            <summary>
            Node tag of operation.
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Operations.OperationStatusFetchMode.ChangesApi">
            <summary>
            Uses the Changes API to fetch the status
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Operations.OperationStatusFetchMode.Polling">
            <summary>
            Uses simple HTTP polling to fetch the status. Suitable for systems that do not support Changes API capabilities like WebSockets
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Operations.PatchRequest">
            <summary>
            An advanced patch request for a specified document (using JavaScript)
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.PatchRequest.Script">
            <summary>
            JavaScript function to use to patch a document
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Raven.Client.Documents.Operations.PatchRequest.Values">
            <summary>
            Additional arguments passed to JavaScript function from Script.
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Operations.PatchStatus">
            <summary>
            The result of a patch operation
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Operations.PatchStatus.DocumentDoesNotExist">
            <summary>
            The document does not exists, operation was a no-op
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Operations.PatchStatus.Created">
            <summary>
            The document did not exist, but patchIfMissing was specified and new document was created
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Operations.PatchStatus.Patched">
            <summary>
            The document was properly patched
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Operations.PatchStatus.Skipped">
            <summary>
            The document was not patched, because skipPatchIfChangeVectorMismatch was set and the etag did not match
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Operations.PatchStatus.NotModified">
            <summary>
            Neither document body not metadata was changed during patch operation
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.PatchResult.Status">
            <summary>
            Result of patch operation:
            <para>- DocumentDoesNotExists - document does not exists, operation was a no-op,</para>
            <para>- Patched - document was properly patched,</para>
            <para>- Created - document did not exist, but patchIfMissing was specified and new document was created,</para>
            <para>- Skipped - document was not patched, because skipPatchIfChangeVectorMismatch was set and the etag did not match,</para>
            <para>- NotModified - neither document body not metadata was changed during patch operation</para>
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.PatchResult.ModifiedDocument">
            <summary>
            Patched document.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.PatchResult.Debug">
            <summary>
            Additional debugging information (if requested).
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Operations.TimeSeries.GetTimeSeriesStatisticsOperation.#ctor(System.String)">
            <summary>
            Retrieve start, end and total number of entries for all time-series of a given document
            </summary>
            <param name="documentId"></param>
        </member>
        <member name="P:Raven.Client.Documents.Operations.TimeSeries.TimeSeriesCollectionConfiguration.Policies">
            <summary>
            Specify roll up and retention policy.
            Each policy will create a new time-series aggregated from the previous one
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.TimeSeries.TimeSeriesCollectionConfiguration.RawPolicy">
            <summary>
            Specify a policy for the original time-series
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.TimeSeries.TimeSeriesPolicy.Name">
            <summary>
            Name of the time series policy, must be unique.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.TimeSeries.TimeSeriesPolicy.RetentionTime">
            <summary>
            How long the data of this policy will be retained
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Operations.TimeSeries.TimeSeriesPolicy.AggregationTime">
            <summary>
            Define the aggregation of this policy
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.Facets.Facet.FieldName">
            <summary>
            Name of field the facet aggregate on
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.Facets.Facet`1.FieldName">
            <summary>
            Name of field the facet aggregate on
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.Facets.FacetBase.DisplayFieldName">
            <summary>
            Displayed field name in facet results
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.Facets.FacetOptions.TermSortMode">
            <summary>
            Indicates how terms should be sorted.
            </summary>
            <value>FacetTermSortMode.ValueAsc by default.</value>
        </member>
        <member name="P:Raven.Client.Documents.Queries.Facets.FacetOptions.IncludeRemainingTerms">
            <summary>
            Indicates if remaining terms should be included in results.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.Facets.FacetResult.Values">
            <summary>
            The facet terms and hits up to a limit of MaxResults items (as specified in the facet setup document), sorted
            in TermSortMode order (as indicated in the facet setup document).
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.Facets.FacetResult.RemainingTerms">
            <summary>
            A list of remaining terms in term sort order for terms that are outside of the MaxResults count.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.Facets.FacetResult.RemainingTermsCount">
            <summary>
            The number of remaining terms outside of those covered by the Values terms.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.Facets.FacetResult.RemainingHits">
            <summary>
            The number of remaining hits outside of those covered by the Values terms.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.Facets.FacetSetup.Id">
            <summary>
            Id of a facet setup document.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.Facets.FacetSetup.Facets">
            <summary>
            List of facets.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.Facets.FacetSetup.RangeFacets">
            <summary>
            List of range facets.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.Facets.FacetValue.Range">
            <summary>
            Name of range for which facet value applies.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.Facets.FacetValue.Count">
            <summary>
            Stores count value.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.Facets.FacetValue.Sum">
            <summary>
            Stores sum of all values if FacetAggregation.Sum was set.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.Facets.FacetValue.Max">
            <summary>
            Stores maximum value if FacetAggregation.Max was set.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.Facets.FacetValue.Min">
            <summary>
            Stores minimum value if FacetAggregation.Min was set.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.Facets.FacetValue.Average">
            <summary>
            Stores average value if FacetAggregation.Average was set.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.Facets.RangeFacet.Ranges">
            <summary>
            List of facet ranges.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.Facets.RangeFacet`1.Ranges">
            <summary>
            List of facet ranges.
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Queries.Highlighting.Highlightings">
            <summary>
                Query highlightings for the documents.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.Highlighting.Highlightings.FieldName">
            <summary>
                The field name.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Queries.Highlighting.Highlightings.GetFragments(System.String)">
            <summary>
                Returns the list of document's field highlighting fragments.
            </summary>
            <param name="key">The document id, or the map/reduce key field.</param>
            <returns></returns>
        </member>
        <member name="T:Raven.Client.Documents.Queries.IndexQuery">
            <summary>
            All the information required to query an index
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.IndexQuery.DisableCaching">
            <summary>
            Indicates if query results should be read from cache (if cached previously) or added to cache (if there were no cached items prior)
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.IndexQuery`1.SkipDuplicateChecking">
            <summary>
            Allow to skip duplicate checking during queries
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.IndexQueryBase`1.PageSizeSet">
            <summary>
            Whether the page size was explicitly set or still at its default value
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.IndexQueryBase`1.Query">
            <summary>
            Actual query that will be performed (Lucene syntax).
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.IndexQueryBase`1.Start">
            <summary>
            Number of records that should be skipped.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.IndexQueryBase`1.PageSize">
            <summary>
            Maximum number of records that will be retrieved.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.IndexQueryBase`1.WaitForNonStaleResults">
            <summary>
            When set to <c>true</c>> server side will wait until result are non stale or until timeout
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.MoreLikeThis.MoreLikeThisOptions.MinimumTermFrequency">
            <summary>
                Ignore terms with less than this frequency in the source doc. Default is 2.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.MoreLikeThis.MoreLikeThisOptions.MaximumQueryTerms">
            <summary>
                Return a Query with no more than this many terms. Default is 25.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.MoreLikeThis.MoreLikeThisOptions.MaximumNumberOfTokensParsed">
            <summary>
                The maximum number of tokens to parse in each example doc field that is not stored with TermVector support. Default
                is 5000.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.MoreLikeThis.MoreLikeThisOptions.MinimumWordLength">
            <summary>
                Ignore words less than this length or if 0 then this has no effect. Default is 0.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.MoreLikeThis.MoreLikeThisOptions.MaximumWordLength">
            <summary>
                Ignore words greater than this length or if 0 then this has no effect. Default is 0.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.MoreLikeThis.MoreLikeThisOptions.MinimumDocumentFrequency">
            <summary>
                Ignore words which do not occur in at least this many documents. Default is 5.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.MoreLikeThis.MoreLikeThisOptions.MaximumDocumentFrequency">
            <summary>
                Ignore words which occur in more than this many documents. Default is Int32.MaxValue.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.MoreLikeThis.MoreLikeThisOptions.MaximumDocumentFrequencyPercentage">
            <summary>
                Ignore words which occur in more than this percentage of documents.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.MoreLikeThis.MoreLikeThisOptions.Boost">
            <summary>
                Boost terms in query based on score. Default is false.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.MoreLikeThis.MoreLikeThisOptions.BoostFactor">
            <summary>
                Boost factor when boosting based on score. Default is 1.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.MoreLikeThis.MoreLikeThisOptions.StopWordsDocumentId">
            <summary>
                The document id containing the custom stop words
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.MoreLikeThis.MoreLikeThisOptions.Fields">
            <summary>
                The fields to compare
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.MoreLikeThis.MoreLikeThisQueryResult`2.DurationInMs">
            <summary>
            The duration of actually executing the query server side
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Queries.ProjectionBehavior.Default">
            <summary>
            Try to extract value from index field (if field value is stored in index), on a failure (or when field value is not stored in index) extract value from a document
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Queries.ProjectionBehavior.FromIndex">
            <summary>
            Try to extract value from index field (if field value is stored in index), on a failure skip field
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Queries.ProjectionBehavior.FromIndexOrThrow">
            <summary>
            Extract value from index field or throw
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Queries.ProjectionBehavior.FromDocument">
            <summary>
            Try to extract value from document field, on a failure skip field
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Queries.ProjectionBehavior.FromDocumentOrThrow">
            <summary>
            Extract value from document field or throw
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Queries.QueryOperationOptions">
            <summary>
            Holds different setting options for base operations.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.QueryOperationOptions.AllowStale">
            <summary>
            Indicates whether operations are allowed on stale indexes.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.QueryOperationOptions.StaleTimeout">
            <summary>
            If AllowStale is set to false and index is stale, then this is the maximum timeout to wait for index to become non-stale. If timeout is exceeded then exception is thrown.
            <para>Value:</para>
            <para><c>null</c> by default - throw immediately if index is stale</para>
            </summary>
            <value>null by default - throw immediately if index is stale</value>
        </member>
        <member name="P:Raven.Client.Documents.Queries.QueryOperationOptions.MaxOpsPerSecond">
            <summary>
            Limits the amount of base operation per second allowed.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.QueryOperationOptions.RetrieveDetails">
            <summary>
            Determines whether operation details about each document should be returned by server.
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Queries.QueryResult`2">
            <summary>
            The result of a query
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.QueryResult`2.TotalResults">
            <summary>
            Gets or sets the total results for this query
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.QueryResult`2.LongTotalResults">
            <summary>
            Gets or sets the total results as int64 for this query
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.QueryResult`2.CappedMaxResults">
            <summary>
            The total results for the query, taking into account the 
            offset / limit clauses for this query
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.QueryResult`2.SkippedResults">
            <summary>
            Gets or sets the skipped results
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.QueryResult`2.Highlightings">
            <summary>
            Highlighter results (if requested).
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.QueryResult`2.Explanations">
            <summary>
            Explanations (if requested).
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.QueryResult`2.DurationInMs">
            <summary>
            The duration of actually executing the query server side
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Queries.QueryResult.CreateSnapshot">
            <summary>
            Creates a snapshot of the query results
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.QueryResultBase`2.Results">
            <summary>
            Gets or sets the document resulting from this query.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.QueryResultBase`2.Includes">
            <summary>
            Gets or sets the document included in the result.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.QueryResultBase`2.CounterIncludes">
            <summary>
            Gets or sets the Counters included in the result.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.QueryResultBase`2.RevisionIncludes">
            <summary>
            Gets or sets the Revisions included in the result.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.QueryResultBase`2.IncludedCounterNames">
            <summary>
            The names of all the counters that the server
            was asked to include in the result, by document id.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.QueryResultBase`2.TimeSeriesIncludes">
            <summary>
            Gets or sets the TimeSeries included in the result.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.QueryResultBase`2.CompareExchangeValueIncludes">
            <summary>
            Gets or sets the Compare Exchange Values included in the result.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.QueryResultBase`2.IncludedPaths">
            <summary>
            The paths that the server included in the results
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.QueryResultBase`2.IsStale">
            <summary>
            Gets or sets a value indicating whether the index is stale.
            <para>Value:</para>
            <para>- <c>true</c> - if index is stale</para>
            <para>- <c>false</c> - otherwise</para>
            </summary>
            <value><c>true</c> if the index is stale; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Raven.Client.Documents.Queries.QueryResultBase`2.IndexTimestamp">
            <summary>
            The last time the index was updated.
            This can be used to determine the freshness of the data.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.QueryResultBase`2.IndexName">
            <summary>
            The index used to answer this query
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.QueryResultBase`2.ResultEtag">
            <summary>
            The ETag value for this index current state, which include what docs were indexed,
            what document were deleted, etc.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.QueryResultBase`2.LastQueryTime">
            <summary>
            The timestamp of the last time the index was queried
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.QueryResultBase`2.NodeTag">
            <summary>
            Tag of a cluster node which responded to the query
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.QueryResultBase`2.Timings">
            <summary>
            Detailed timings for various parts of a query (Lucene search, loading documents, transforming results) - if requested.
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Queries.SearchOperator">
            <summary>
            Search operator between terms in a search caluse
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Queries.SearchOperator.Or">
            <summary>
            Or operator will be used between all terms for a search clause, meaning a field value that matches any of the terms will be considered a match
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Queries.SearchOperator.And">
            <summary>
            And operator will be used between all terms for a search clause, meaning a field value matching all of the terms will be considered a match
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Queries.Spatial.WktSanitizer">
            <summary>
            Sanitizes WKT strings, reducing them to 2D (discarding 3D and 4D values).
            We do this because we only index and query in 2D,
            but its nice to allow users to store shapes in 3D and 4D if they need to.
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Queries.Suggestions.StringDistanceTypes">
            <summary>
            String distance algorithms used in suggestion query
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Queries.Suggestions.StringDistanceTypes.None">
            <summary>
            Default, suggestion is not active
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Queries.Suggestions.StringDistanceTypes.Default">
            <summary>
            Default, equivalent to Levenshtein
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Queries.Suggestions.StringDistanceTypes.Levenshtein">
            <summary>
            Levenshtein distance algorithm (default)
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Queries.Suggestions.StringDistanceTypes.JaroWinkler">
            <summary>
            JaroWinkler distance algorithm
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Queries.Suggestions.StringDistanceTypes.NGram">
            <summary>
            NGram distance algorithm
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.Suggestions.SuggestionOptions.Distance">
            <summary>
            String distance algorithm to use. If <c>null</c> then default algorithm is used (Levenshtein).
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.Suggestions.SuggestionOptions.Accuracy">
            <summary>
            Suggestion accuracy. If <c>null</c> then default accuracy is used (0.5f).
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Queries.Suggestions.SuggestionOptions.SortMode">
            <summary>
            Whether to return the terms in order of popularity
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Replication.ReplicationNode">
            <summary>
            Data class for replication destination
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Replication.ReplicationNode._url">
            <summary>
            The name of the connection string specified in the 
            server configuration file. 
            Override all other properties of the destination
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Replication.ReplicationNode.HashCodeSealed">
            <summary>
            This is a protection field that indicates if an hashset was requested already so we won't modify fields that are been used to calculate it afterwards.
            If you ovverride GetHashCode you should make sure to set this field to true at the end of the method.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Replication.ReplicationNode.Url">
            <summary>
            Gets or sets the URL of the replication destination
            </summary>
            <value>The URL.</value>
        </member>
        <member name="F:Raven.Client.Documents.Replication.ReplicationNode.Database">
            <summary>
            The database to use
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Replication.ReplicationNode.Disabled">
            <summary>
            Used to indicate whether external replication is disabled.
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Replication.StraightforwardConflictResolution.ResolveToLatest">
            <summary>
            Always resolve in favor of the latest version based on the last modified time
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.SearchOptions.Or">
            <summary>
            Logical Or operator will be used in relation to previous statement
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.SearchOptions.And">
            <summary>
            Logical And operator will be used in relation to previous statement
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.SearchOptions.Not">
            <summary>
            Current statement will be negated, can be used in combination with the Or, And and Guess Flags
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.SearchOptions.Guess">
            <summary>
            RavenDB will attemt to matchup semantics between terms in the next manner: 
            If there are consecutive searches, they will be OR together, otherwise the AND semantic will be used
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.AbstractDocumentQuery`2">
            <summary>
              A query against a Raven index
            </summary>
            <summary>
              A query against a Raven index
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Session.AbstractDocumentQuery`2.Negate">
            <summary>
            Whether to negate the next operation
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.AbstractDocumentQuery`2.IndexName">
            <summary>
            The index to query
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Session.AbstractDocumentQuery`2.TheSession">
            <summary>
            The session for this query
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Session.AbstractDocumentQuery`2.PageSize">
            <summary>
              The page size to use when querying the index
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Session.AbstractDocumentQuery`2.Start">
            <summary>
              which record to start reading from
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Session.AbstractDocumentQuery`2.Timeout">
            <summary>
            Timeout for this query
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Session.AbstractDocumentQuery`2.TheWaitForNonStaleResults">
            <summary>
            Should we wait for non stale results
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Session.AbstractDocumentQuery`2.QueryStats">
            <summary>
            Holds the query stats
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Session.AbstractDocumentQuery`2.DisableEntitiesTracking">
            <summary>
            Determines if entities should be tracked and kept in memory
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Session.AbstractDocumentQuery`2.DisableCaching">
            <summary>
            Determine if query results should be cached.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.AbstractDocumentQuery`2.Conventions">
            <summary>
            Gets the document convention from the query session
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.AbstractDocumentQuery`2.Session">
            <summary>
              Gets the session associated with this document query
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.#ctor(Raven.Client.Documents.Session.InMemoryDocumentSessionOperations,System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{Raven.Client.Documents.Session.Tokens.DeclareToken},System.Collections.Generic.List{Raven.Client.Documents.Session.Tokens.LoadToken},System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Documents.Session.AbstractDocumentQuery`2"/> class.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.WaitForNonStaleResults(System.Nullable{System.TimeSpan})">
            <summary>
              Instruct the query to wait for non stale results.
              This shouldn't be used outside of unit tests unless you are well aware of the implications
            </summary>
            <param name = "waitTimeout">Maximum time to wait for index query results to become non-stale before exception is thrown. Default: 15 seconds.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.GetProjectionFields">
            <summary>
              Gets the fields for projection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.RandomOrdering">
            <summary>
            Order the search results randomly
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.RandomOrdering(System.String)">
            <summary>
            Order the search results randomly using the specified seed
            this is useful if you want to have repeatable random queries
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.Where(System.Func{`0,System.Boolean})">
            <summary>
              This function exists solely to forbid in memory where clause on IDocumentQuery, because
              that is nearly always a mistake.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.Count(System.Func{`0,System.Boolean})">
            <summary>
              This function exists solely to forbid in memory where clause on IDocumentQuery, because
              that is nearly always a mistake.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.GroupBy``1(System.Func{`0,``0})">
            <summary>
              This function exists solely to forbid Linq group by clause on IDocumentQuery
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.GroupBy``2(System.Func{`0,``0},System.Func{`0,``1})">
            <summary>
              This function exists solely to forbid Linq group by clause on IDocumentQuery
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.GroupBy``1(System.Func{`0,``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
              This function exists solely to forbid Linq group by clause on IDocumentQuery
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.GroupBy``2(System.Func{`0,``0},System.Func{`0,``1},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
              This function exists solely to forbid Linq group by clause on IDocumentQuery
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.Take(System.Int32)">
            <summary>
              Takes the specified count.
            </summary>
            <param name = "count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.Skip(System.Int32)">
            <summary>
              Skips the specified count.
            </summary>
            <param name = "count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.WhereLucene(System.String,System.String,System.Boolean)">
            <summary>
              Filter the results from the index using the specified where clause.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.OpenSubclause">
            <summary>
              Simplified method for opening a new clause within the query
            </summary>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.CloseSubclause">
            <summary>
              Simplified method for closing a clause within the query
            </summary>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.WhereEquals(System.String,System.Object,System.Boolean)">
            <summary>
              Matches value
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.WhereEquals(Raven.Client.Documents.Session.WhereParams)">
            <summary>
              Matches value
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.WhereNotEquals(System.String,System.Object,System.Boolean)">
            <summary>
              Not matches value
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.WhereNotEquals(Raven.Client.Documents.Session.WhereParams)">
            <summary>
              Not matches value
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.NegateNext">
            <summary>
             Negate the next operation
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.WhereIn(System.String,System.Collections.Generic.IEnumerable{System.Object},System.Boolean)">
            <summary>
            Check that the field has one of the specified value
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.WhereStartsWith(System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.WhereStartsWith(System.String,System.Object,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.WhereEndsWith(System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.WhereEndsWith(System.String,System.Object,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.WhereBetween(System.String,System.Object,System.Object,System.Boolean)">
            <summary>
              Matches fields where the value is between the specified start and end, inclusive
            </summary>
            <param name = "fieldName">Name of the field.</param>
            <param name = "start">The start.</param>
            <param name = "end">The end.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.WhereGreaterThan(System.String,System.Object,System.Boolean)">
            <summary>
              Matches fields where the value is greater than the specified value
            </summary>
            <param name = "fieldName">Name of the field.</param>
            <param name = "value">The value.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.WhereGreaterThanOrEqual(System.String,System.Object,System.Boolean)">
            <summary>
              Matches fields where the value is greater than or equal to the specified value
            </summary>
            <param name = "fieldName">Name of the field.</param>
            <param name = "value">The value.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.WhereLessThan(System.String,System.Object,System.Boolean)">
            <summary>
              Matches fields where the value is less than the specified value
            </summary>
            <param name = "fieldName">Name of the field.</param>
            <param name = "value">The value.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.WhereLessThanOrEqual(System.String,System.Object,System.Boolean)">
            <summary>
              Matches fields where the value is less than or equal to the specified value
            </summary>
            <param name = "fieldName">Name of the field.</param>
            <param name = "value">The value.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.WhereRegex(System.String,System.String)">
            <summary>
              Matches fields where Regex.IsMatch(filedName, pattern)
            </summary>
            <param name = "fieldName">Name of the field.</param>
            <param name="pattern"> The pattern to match</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.AndAlso">
            <summary>
              Add an AND to the query
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.AndAlso(System.Boolean)">
            <summary>
              Wraps previous query with clauses and adds an AND operator to the given query
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.OrElse">
            <summary>
              Add an OR to the query
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.Boost(System.Decimal)">
            <summary>
              Specifies a boost weight to the last where clause.
              The higher the boost factor, the more relevant the term will be.
            </summary>
            <param name = "boost">boosting factor where 1.0 is default, less than 1.0 is lower weight, greater than 1.0 is higher weight</param>
            <returns></returns>
            <remarks>
              http://lucene.apache.org/java/2_4_0/queryparsersyntax.html#Boosting%20a%20Term
            </remarks>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.Fuzzy(System.Decimal)">
            <summary>
              Specifies a fuzziness factor to the single word term in the last where clause
            </summary>
            <param name = "fuzzy">0.0 to 1.0 where 1.0 means closer match</param>
            <returns></returns>
            <remarks>
              http://lucene.apache.org/java/2_4_0/queryparsersyntax.html#Fuzzy%20Searches
            </remarks>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.Proximity(System.Int32)">
            <summary>
              Specifies a proximity distance for the phrase in the last search clause
            </summary>
            <param name = "proximity">number of words within</param>
            <returns></returns>
            <remarks>
              http://lucene.apache.org/java/2_4_0/queryparsersyntax.html#Proximity%20Searches
            </remarks>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.OrderBy(System.String,Raven.Client.Documents.Session.OrderingType)">
            <summary>
              Order the results by the specified fields
              The fields are the names of the fields to sort, defaulting to sorting by ascending.
              You can prefix a field name with '-' to indicate sorting by descending or '+' to sort by ascending
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.OrderByDescending(System.String,Raven.Client.Documents.Session.OrderingType)">
            <summary>
              Order the results by the specified fields
              The fields are the names of the fields to sort, defaulting to sorting by descending.
              You can prefix a field name with '-' to indicate sorting by descending or '+' to sort by ascending
            </summary>
            <param name = "fields">The fields.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.Statistics(Raven.Client.Documents.Session.QueryStatistics@)">
            <summary>
            Provide statistics about the query, such as total count of matching records
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.InvokeAfterQueryExecuted(Raven.Client.Documents.Queries.QueryResult)">
            <summary>
            Called externally to raise the after query executed callback
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.InvokeAfterStreamExecuted(Sparrow.Json.BlittableJsonReaderObject)">
            <summary>
            Called externally to raise the after stream executed callback
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.GenerateIndexQuery(System.String)">
            <summary>
              Generates the index query.
            </summary>
            <param name = "query">The query.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.Search(System.String,System.String,Raven.Client.Documents.Queries.SearchOperator)">
            <summary>
            Perform a search for documents which fields that match the searchTerms.
            If there is more than a single term, each of them will be checked independently.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.ToString">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.AddFromAliasToWhereTokens(System.String)">
            <summary>
              Adds an alias to the FieldName of each where token
            </summary>
            <param name = "fromAlias">The alias</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.BeforeQueryExecuted(System.Action{Raven.Client.Documents.Queries.IndexQuery})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.AfterQueryExecuted(System.Action{Raven.Client.Documents.Queries.QueryResult})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.AfterStreamExecuted(System.Action{Sparrow.Json.BlittableJsonReaderObject})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.NoTracking">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.NoCaching">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.Timings(Raven.Client.Documents.Queries.Timings.QueryTimings@)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.Raven#Client#Documents#Session#IDocumentQueryCustomization#RandomOrdering">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.Raven#Client#Documents#Session#IDocumentQueryCustomization#RandomOrdering(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.Raven#Client#Documents#Session#IDocumentQueryCustomization#WaitForNonStaleResults(System.Nullable{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.Raven#Client#Documents#Session#IDocumentQueryCustomization#Projection(Raven.Client.Documents.Queries.ProjectionBehavior)">
            <inheritdoc />
        </member>
        <member name="F:Raven.Client.Documents.Session.AbstractDocumentQuery`2.DocumentIncludes">
            <summary>
            The paths to include when loading the query
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.Include(System.String)">
            <summary>
              Includes the specified path in the query, loading the document specified in that path
            </summary>
            <param name = "path">The path.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.Include(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
              Includes the specified path in the query, loading the document specified in that path
            </summary>
            <param name = "path">The path.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.Spatial(Raven.Client.Documents.Queries.Spatial.DynamicSpatialField,Raven.Client.Documents.Queries.Spatial.SpatialCriteria)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.Spatial(System.String,Raven.Client.Documents.Queries.Spatial.SpatialCriteria)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.OrderByDistance(Raven.Client.Documents.Queries.Spatial.DynamicSpatialField,System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.OrderByDistance(System.String,System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.OrderByDistance(System.String,System.Double,System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.OrderByDistance(Raven.Client.Documents.Queries.Spatial.DynamicSpatialField,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.OrderByDistance(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.OrderByDistance(System.String,System.String,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.OrderByDistanceDescending(Raven.Client.Documents.Queries.Spatial.DynamicSpatialField,System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.OrderByDistanceDescending(System.String,System.Double,System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.OrderByDistanceDescending(Raven.Client.Documents.Queries.Spatial.DynamicSpatialField,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AbstractDocumentQuery`2.OrderByDistanceDescending(System.String,System.String,System.Double)">
            <inheritdoc />
        </member>
        <member name="T:Raven.Client.Documents.Session.AsyncDocumentQuery`1">
            <summary>
            A query against a Raven index
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.#ctor(Raven.Client.Documents.Session.InMemoryDocumentSessionOperations,System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{Raven.Client.Documents.Session.Tokens.DeclareToken},System.Collections.Generic.List{Raven.Client.Documents.Session.Tokens.LoadToken},System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Documents.Session.AsyncDocumentQuery`1"/> class.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#Include(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#Include(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <inheritdoc />
        </member>
        <member name="P:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#Not">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#Take(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IAsyncRawDocumentQuery{T}}#Take(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#Skip(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IAsyncRawDocumentQuery{T}}#Skip(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereLucene(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereLucene(System.String,System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereEquals(System.String,System.Object,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereEquals(System.String,Raven.Client.Documents.Session.MethodCall,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereEquals``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereEquals``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},Raven.Client.Documents.Session.MethodCall,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereEquals(Raven.Client.Documents.Session.WhereParams)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereNotEquals(System.String,System.Object,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereNotEquals(System.String,Raven.Client.Documents.Session.MethodCall,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereNotEquals``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereNotEquals``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},Raven.Client.Documents.Session.MethodCall,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereNotEquals(Raven.Client.Documents.Session.WhereParams)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereIn(System.String,System.Collections.Generic.IEnumerable{System.Object},System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereIn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereStartsWith(System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereStartsWith(System.String,System.Object,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereStartsWith``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereStartsWith``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereEndsWith(System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereEndsWith(System.String,System.Object,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereEndsWith``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereEndsWith``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereBetween(System.String,System.Object,System.Object,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereBetween``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,``0,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereGreaterThan(System.String,System.Object,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereGreaterThan``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereGreaterThanOrEqual(System.String,System.Object,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereGreaterThanOrEqual``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereLessThan(System.String,System.Object,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereLessThan``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereLessThanOrEqual(System.String,System.Object,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereLessThanOrEqual``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereExists``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereExists(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereRegex``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WhereRegex(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#AndAlso">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#AndAlso(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrElse">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#Boost(System.Decimal)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#Fuzzy(System.Decimal)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#Proximity(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#RandomOrdering">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#RandomOrdering(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IAsyncDocumentQuery{T}#OfType``1">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IAsyncDocumentQuery{T}#GroupBy(System.String,System.String[])">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IAsyncDocumentQuery{T}#GroupBy(System.ValueTuple{System.String,Raven.Client.Documents.Queries.GroupByMethod},System.ValueTuple{System.String,Raven.Client.Documents.Queries.GroupByMethod}[])">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderBy(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderBy(System.String,Raven.Client.Documents.Session.OrderingType)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},Raven.Client.Documents.Session.OrderingType)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}}[])">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderByDescending(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderByDescending(System.String,Raven.Client.Documents.Session.OrderingType)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderByDescending``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderByDescending``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderByDescending``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},Raven.Client.Documents.Session.OrderingType)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderByDescending``1(System.Linq.Expressions.Expression{System.Func{`0,``0}}[])">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#BeforeQueryExecuted(System.Action{Raven.Client.Documents.Queries.IndexQuery})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IAsyncRawDocumentQuery{T}}#BeforeQueryExecuted(System.Action{Raven.Client.Documents.Queries.IndexQuery})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WaitForNonStaleResults(System.Nullable{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#AddParameter(System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IAsyncRawDocumentQuery{T}}#AddParameter(System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IAsyncRawDocumentQuery{T}}#WaitForNonStaleResults(System.Nullable{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.SelectFields``1">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.SelectFields``1(Raven.Client.Documents.Queries.ProjectionBehavior)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.SelectFields``1(System.String[])">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.SelectFields``1(Raven.Client.Documents.Queries.ProjectionBehavior,System.String[])">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.SelectFields``1(Raven.Client.Documents.Queries.QueryData)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IAsyncDocumentQuery{T}#SelectTimeSeries``1(System.Func{Raven.Client.Documents.Queries.TimeSeries.ITimeSeriesQueryBuilder,``0})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IAsyncDocumentQueryBase{T}#CountLazilyAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#AddOrder(System.String,System.Boolean,Raven.Client.Documents.Session.OrderingType)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderByScore">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderByScoreDescending">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#AddOrder``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean,Raven.Client.Documents.Session.OrderingType)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OpenSubclause">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#Search(System.String,System.String,Raven.Client.Documents.Queries.SearchOperator)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#Search``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,Raven.Client.Documents.Queries.SearchOperator)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#CloseSubclause">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#NegateNext">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#Intersect">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#ContainsAll``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#ContainsAny(System.String,System.Collections.Generic.IEnumerable{System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#ContainsAny``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{``0})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#ContainsAny``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#ContainsAll(System.String,System.Collections.Generic.IEnumerable{System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#ContainsAll``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{``0})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#Statistics(Raven.Client.Documents.Session.QueryStatistics@)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IAsyncRawDocumentQuery{T}}#Statistics(Raven.Client.Documents.Session.QueryStatistics@)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#UsingDefaultOperator(Raven.Client.Documents.Queries.QueryOperator)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IAsyncRawDocumentQuery{T}}#UsingDefaultOperator(Raven.Client.Documents.Queries.QueryOperator)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#NoTracking">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IAsyncRawDocumentQuery{T}}#NoTracking">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#NoCaching">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IAsyncRawDocumentQuery{T}}#NoCaching">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#Timings(Raven.Client.Documents.Queries.Timings.QueryTimings@)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IAsyncRawDocumentQuery{T}}#Timings(Raven.Client.Documents.Queries.Timings.QueryTimings@)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#Distinct">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#IncludeExplanations(Raven.Client.Documents.Queries.Explanation.Explanations@)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#IncludeExplanations(Raven.Client.Documents.Queries.Explanation.ExplanationOptions,Raven.Client.Documents.Queries.Explanation.Explanations@)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IAsyncRawDocumentQuery{T}#Projection(Raven.Client.Documents.Queries.ProjectionBehavior)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IAsyncDocumentQueryBase{T}#ToListAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IAsyncDocumentQueryBase{T}#ToArrayAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IAsyncDocumentQueryBase{T}#FirstAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IAsyncDocumentQueryBase{T}#FirstOrDefaultAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IAsyncDocumentQueryBase{T}#SingleAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IAsyncDocumentQueryBase{T}#SingleOrDefaultAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IAsyncDocumentQueryBase{T}#AnyAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IAsyncDocumentQueryBase{T}#LazilyAsync(System.Action{System.Collections.Generic.IEnumerable{`0}})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IAsyncDocumentQueryBase{T}#CountAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IAsyncDocumentQueryBase{T}#LongCountAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.GetQueryResultAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#Spatial(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Func{Raven.Client.Documents.Queries.Spatial.SpatialCriteriaFactory,Raven.Client.Documents.Queries.Spatial.SpatialCriteria})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#Spatial(System.String,System.Func{Raven.Client.Documents.Queries.Spatial.SpatialCriteriaFactory,Raven.Client.Documents.Queries.Spatial.SpatialCriteria})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#Spatial(Raven.Client.Documents.Queries.Spatial.DynamicSpatialField,System.Func{Raven.Client.Documents.Queries.Spatial.SpatialCriteriaFactory,Raven.Client.Documents.Queries.Spatial.SpatialCriteria})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#Spatial(System.Func{Raven.Client.Documents.Queries.Spatial.DynamicSpatialFieldFactory{`0},Raven.Client.Documents.Queries.Spatial.DynamicSpatialField},System.Func{Raven.Client.Documents.Queries.Spatial.SpatialCriteriaFactory,Raven.Client.Documents.Queries.Spatial.SpatialCriteria})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WithinRadiusOf``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double,System.Nullable{Raven.Client.Documents.Indexes.Spatial.SpatialUnits},System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#WithinRadiusOf(System.String,System.Double,System.Double,System.Double,System.Nullable{Raven.Client.Documents.Indexes.Spatial.SpatialUnits},System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#RelatesToShape``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,Raven.Client.Documents.Indexes.Spatial.SpatialRelation,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#RelatesToShape``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,Raven.Client.Documents.Indexes.Spatial.SpatialRelation,Raven.Client.Documents.Indexes.Spatial.SpatialUnits,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#RelatesToShape(System.String,System.String,Raven.Client.Documents.Indexes.Spatial.SpatialRelation,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#RelatesToShape(System.String,System.String,Raven.Client.Documents.Indexes.Spatial.SpatialRelation,Raven.Client.Documents.Indexes.Spatial.SpatialUnits,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderByDistance(Raven.Client.Documents.Queries.Spatial.DynamicSpatialField,System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderByDistance(System.Func{Raven.Client.Documents.Queries.Spatial.DynamicSpatialFieldFactory{`0},Raven.Client.Documents.Queries.Spatial.DynamicSpatialField},System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderByDistance(Raven.Client.Documents.Queries.Spatial.DynamicSpatialField,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderByDistance(System.Func{Raven.Client.Documents.Queries.Spatial.DynamicSpatialFieldFactory{`0},Raven.Client.Documents.Queries.Spatial.DynamicSpatialField},System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderByDistance(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderByDistance(System.String,System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderByDistance(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderByDistance(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderByDistanceDescending(Raven.Client.Documents.Queries.Spatial.DynamicSpatialField,System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderByDistanceDescending(System.Func{Raven.Client.Documents.Queries.Spatial.DynamicSpatialFieldFactory{`0},Raven.Client.Documents.Queries.Spatial.DynamicSpatialField},System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderByDistanceDescending(Raven.Client.Documents.Queries.Spatial.DynamicSpatialField,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderByDistanceDescending(System.Func{Raven.Client.Documents.Queries.Spatial.DynamicSpatialFieldFactory{`0},Raven.Client.Documents.Queries.Spatial.DynamicSpatialField},System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderByDistanceDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderByDistanceDescending(System.String,System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderByDistanceDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderByDistanceDescending(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderByDistance(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Double,System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderByDistance(System.String,System.Double,System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderByDistance(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderByDistance(System.String,System.String,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderByDistanceDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Double,System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderByDistanceDescending(System.String,System.Double,System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderByDistanceDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IAsyncDocumentQuery{T}}#OrderByDistanceDescending(System.String,System.String,System.Double)">
            <inheritdoc />
        </member>
        <member name="T:Raven.Client.Documents.Session.AsyncDocumentSession">
            <summary>
            Implements Unit of Work for accessing the RavenDB server
            </summary>
            <summary>
            Implementation for async document session
            </summary>
            <summary>
            Implementation for async document session 
            </summary>
            <summary>
            Implementation for async document session 
            </summary>
            <summary>
            Implements Unit of Work for accessing the RavenDB server
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentSession.ConditionalLoadAsync``1(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentSession.#ctor(Raven.Client.Documents.DocumentStore,System.Guid,Raven.Client.Documents.Session.SessionOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Documents.Session.AsyncDocumentSession"/> class.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.AsyncDocumentSession.Advanced">
            <summary>
            Get the accessor for advanced operations
            </summary>
            <remarks>
            Those operations are rarely needed, and have been moved to a separate
            property to avoid cluttering the API
            </remarks>
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentSession.SaveChangesAsync(System.Threading.CancellationToken)">
            <summary>
            Begins the async save changes operation
            </summary>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentSession.Include(System.String)">
            <summary>
            Begin a load while including the specified path 
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentSession.Include``1(System.Linq.Expressions.Expression{System.Func{``0,System.String}})">
            <summary>
            Begin a load while including the specified path 
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentSession.Include``2(System.Linq.Expressions.Expression{System.Func{``0,System.String}})">
            <summary>
            Begin a load while including the specified path 
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentSession.Include``1(System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
            Begin a load while including the specified path 
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentSession.Include``2(System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
            Begin a load while including the specified path 
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentSession.Raven#Client#Documents#Session#Operations#Lazy#IAsyncLazySessionOperations#Include``1(System.Linq.Expressions.Expression{System.Func{``0,System.String}})">
            <summary>
            Begin a load while including the specified path 
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentSession.Raven#Client#Documents#Session#Operations#Lazy#IAsyncLazySessionOperations#Include``1(System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
            Begin a load while including the specified path 
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentSession.Raven#Client#Documents#Session#Operations#Lazy#IAsyncLazySessionOperations#Include(System.String)">
            <summary>
            Begin a load while including the specified path 
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentSession.Raven#Client#Documents#Session#Operations#Lazy#IAsyncLazySessionOperations#LoadAsync``1(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Loads the specified ids.
            </summary>
            <param name="token">The cancellation token.</param>
            <param name="ids">The ids of the documents to load.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentSession.LoadAsync``1(System.Collections.Generic.IEnumerable{System.String},System.Action{System.Collections.Generic.Dictionary{System.String,``0}},System.Threading.CancellationToken)">
            <summary>
            Loads the specified ids and a function to call when it is evaluated
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentSession.LoadAsync``1(System.String,System.Action{``0},System.Threading.CancellationToken)">
            <summary>
            Loads the specified id and a function to call when it is evaluated
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentSession.LoadAsync``1(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentSession.LoadAsync``1(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentSession.LoadAsync``1(System.String,System.Action{Raven.Client.Documents.Session.Loaders.IIncludeBuilder{``0}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentSession.LoadAsync``1(System.Collections.Generic.IEnumerable{System.String},System.Action{Raven.Client.Documents.Session.Loaders.IIncludeBuilder{``0}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentSession.LoadAsyncInternal``1(System.String[],System.String[],System.String[],System.Boolean,System.Collections.Generic.IEnumerable{Raven.Client.Documents.Operations.TimeSeries.AbstractTimeSeriesRange},System.String[],System.String[],System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentSession.LoadStartingWithAsync``1(System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentSession.LoadStartingWithIntoStreamAsync(System.String,System.IO.Stream,System.String,System.Int32,System.Int32,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentSession.LoadIntoStreamAsync(System.Collections.Generic.IEnumerable{System.String},System.IO.Stream,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentSession.AsyncDocumentQuery``2">
            <summary>
            Queries the index specified by <typeparamref name="TIndexCreator"/> using lucene syntax.
            </summary>
            <typeparam name="T">The result of the query</typeparam>
            <typeparam name="TIndexCreator">The type of the index creator.</typeparam>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentSession.AsyncDocumentQuery``1(System.String,System.String,System.Boolean)">
            <summary>
                Query the specified index using Lucene syntax
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentSession.Raven#Client#Documents#Linq#IDocumentQueryGenerator#Query``1(System.String,System.String,System.Boolean)">
            <summary>
            Create a new query for <typeparam name="T"/>
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.AsyncDocumentSession.Raven#Client#Documents#Linq#IDocumentQueryGenerator#AsyncQuery``1(System.String,System.String,System.Boolean)">
            <summary>
            Create a new query for <typeparam name="T"/>
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Session.ConcurrencyCheckMode.Auto">
            <summary>
            Automatic optimistic concurrency check depending on UseOptimisticConcurrency setting or provided Change Vector
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Session.ConcurrencyCheckMode.Forced">
            <summary>
            Force optimistic concurrency check even if UseOptimisticConcurrency is not set
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Session.ConcurrencyCheckMode.Disabled">
            <summary>
            Disable optimistic concurrency check even if UseOptimisticConcurrency is set
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.DocumentInfo">
            <summary>
            Information held about an entity by the session
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.DocumentInfo.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:Raven.Client.Documents.Session.DocumentInfo.ChangeVector">
            <summary>
            Gets or sets the ChangeVector.
            </summary>
            <value>The ChangeVector.</value>
        </member>
        <member name="P:Raven.Client.Documents.Session.DocumentInfo.ConcurrencyCheckMode">
            <summary>
            A concurrency check will be forced on this entity 
            even if UseOptimisticConcurrency is set to false
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.DocumentInfo.IgnoreChanges">
            <summary>
            If set to true, the session will ignore this document
            when SaveChanges() is called, and won't perform and change tracking
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.DocumentQuery`1">
            <summary>
            A query against a Raven index
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.#ctor(Raven.Client.Documents.Session.InMemoryDocumentSessionOperations,System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{Raven.Client.Documents.Session.Tokens.DeclareToken},System.Collections.Generic.List{Raven.Client.Documents.Session.Tokens.LoadToken},System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Documents.Session.DocumentQuery`1"/> class.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.SelectFields``1">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.SelectFields``1(Raven.Client.Documents.Queries.ProjectionBehavior)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQuery{T}#SelectTimeSeries``1(System.Func{Raven.Client.Documents.Queries.TimeSeries.ITimeSeriesQueryBuilder,``0})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#Distinct">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderByScore">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderByScoreDescending">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#IncludeExplanations(Raven.Client.Documents.Queries.Explanation.Explanations@)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#IncludeExplanations(Raven.Client.Documents.Queries.Explanation.ExplanationOptions,Raven.Client.Documents.Queries.Explanation.Explanations@)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IRawDocumentQuery{T}#Projection(Raven.Client.Documents.Queries.ProjectionBehavior)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.SelectFields``1(System.String[])">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.SelectFields``1(Raven.Client.Documents.Queries.ProjectionBehavior,System.String[])">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.SelectFields``1(Raven.Client.Documents.Queries.QueryData)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WaitForNonStaleResults(System.Nullable{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#AddParameter(System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IRawDocumentQuery{T}}#AddParameter(System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IRawDocumentQuery{T}}#WaitForNonStaleResults(System.Nullable{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#AddOrder(System.String,System.Boolean,Raven.Client.Documents.Session.OrderingType)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#AddOrder``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean,Raven.Client.Documents.Session.OrderingType)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OpenSubclause">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#CloseSubclause">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#Search(System.String,System.String,Raven.Client.Documents.Queries.SearchOperator)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#Search``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,Raven.Client.Documents.Queries.SearchOperator)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#Intersect">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#ContainsAll``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#ContainsAny(System.String,System.Collections.Generic.IEnumerable{System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#ContainsAny``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{``0})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#ContainsAny``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#ContainsAll(System.String,System.Collections.Generic.IEnumerable{System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#ContainsAll``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{``0})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#Statistics(Raven.Client.Documents.Session.QueryStatistics@)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IRawDocumentQuery{T}}#Statistics(Raven.Client.Documents.Session.QueryStatistics@)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#UsingDefaultOperator(Raven.Client.Documents.Queries.QueryOperator)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IRawDocumentQuery{T}}#UsingDefaultOperator(Raven.Client.Documents.Queries.QueryOperator)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#NoTracking">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IRawDocumentQuery{T}}#NoTracking">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#NoCaching">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IRawDocumentQuery{T}}#NoCaching">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#Timings(Raven.Client.Documents.Queries.Timings.QueryTimings@)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IRawDocumentQuery{T}}#Timings(Raven.Client.Documents.Queries.Timings.QueryTimings@)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#Include(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#Include(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <inheritdoc />
        </member>
        <member name="P:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#Not">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.GetQueryResult">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#Take(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IRawDocumentQuery{T}}#Take(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#Skip(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IRawDocumentQuery{T}}#Skip(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereLucene(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereLucene(System.String,System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereEquals(System.String,System.Object,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereEquals(System.String,Raven.Client.Documents.Session.MethodCall,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereEquals``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereEquals``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},Raven.Client.Documents.Session.MethodCall,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereEquals(Raven.Client.Documents.Session.WhereParams)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereNotEquals(System.String,System.Object,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereNotEquals(System.String,Raven.Client.Documents.Session.MethodCall,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereNotEquals``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereNotEquals``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},Raven.Client.Documents.Session.MethodCall,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereNotEquals(Raven.Client.Documents.Session.WhereParams)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereIn(System.String,System.Collections.Generic.IEnumerable{System.Object},System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereIn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereStartsWith(System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereStartsWith(System.String,System.Object,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereStartsWith``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereStartsWith``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereEndsWith(System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereEndsWith(System.String,System.Object,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereEndsWith``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereEndsWith``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereBetween(System.String,System.Object,System.Object,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereBetween``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,``0,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereGreaterThan(System.String,System.Object,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereGreaterThan``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereGreaterThanOrEqual(System.String,System.Object,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereGreaterThanOrEqual``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereLessThan(System.String,System.Object,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereLessThan``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereLessThanOrEqual(System.String,System.Object,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereLessThanOrEqual``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereExists``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereExists(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereRegex``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WhereRegex(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#AndAlso">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#AndAlso(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrElse">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#Boost(System.Decimal)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#Fuzzy(System.Decimal)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#Proximity(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#RandomOrdering">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#RandomOrdering(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQuery{T}#GroupBy(System.String,System.String[])">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQuery{T}#GroupBy(System.ValueTuple{System.String,Raven.Client.Documents.Queries.GroupByMethod},System.ValueTuple{System.String,Raven.Client.Documents.Queries.GroupByMethod}[])">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQuery{T}#OfType``1">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderBy(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderBy(System.String,Raven.Client.Documents.Session.OrderingType)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},Raven.Client.Documents.Session.OrderingType)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}}[])">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderByDescending(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderByDescending(System.String,Raven.Client.Documents.Session.OrderingType)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderByDescending``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderByDescending``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderByDescending``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},Raven.Client.Documents.Session.OrderingType)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderByDescending``1(System.Linq.Expressions.Expression{System.Func{`0,``0}}[])">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#BeforeQueryExecuted(System.Action{Raven.Client.Documents.Queries.IndexQuery})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IQueryBase{T,Raven#Client#Documents#Session#IRawDocumentQuery{T}}#BeforeQueryExecuted(System.Action{Raven.Client.Documents.Queries.IndexQuery})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T}#First">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T}#FirstOrDefault">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T}#Single">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T}#SingleOrDefault">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T}#Any">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T}#Count">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T}#LongCount">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T}#CountLazily">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T}#ToList">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T}#ToArray">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T}#Lazily(System.Action{System.Collections.Generic.IEnumerable{`0}})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#Spatial(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Func{Raven.Client.Documents.Queries.Spatial.SpatialCriteriaFactory,Raven.Client.Documents.Queries.Spatial.SpatialCriteria})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#Spatial(System.String,System.Func{Raven.Client.Documents.Queries.Spatial.SpatialCriteriaFactory,Raven.Client.Documents.Queries.Spatial.SpatialCriteria})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#Spatial(Raven.Client.Documents.Queries.Spatial.DynamicSpatialField,System.Func{Raven.Client.Documents.Queries.Spatial.SpatialCriteriaFactory,Raven.Client.Documents.Queries.Spatial.SpatialCriteria})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#Spatial(System.Func{Raven.Client.Documents.Queries.Spatial.DynamicSpatialFieldFactory{`0},Raven.Client.Documents.Queries.Spatial.DynamicSpatialField},System.Func{Raven.Client.Documents.Queries.Spatial.SpatialCriteriaFactory,Raven.Client.Documents.Queries.Spatial.SpatialCriteria})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WithinRadiusOf``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double,System.Nullable{Raven.Client.Documents.Indexes.Spatial.SpatialUnits},System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#WithinRadiusOf(System.String,System.Double,System.Double,System.Double,System.Nullable{Raven.Client.Documents.Indexes.Spatial.SpatialUnits},System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#RelatesToShape``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,Raven.Client.Documents.Indexes.Spatial.SpatialRelation,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#RelatesToShape``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,Raven.Client.Documents.Indexes.Spatial.SpatialRelation,Raven.Client.Documents.Indexes.Spatial.SpatialUnits,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#RelatesToShape(System.String,System.String,Raven.Client.Documents.Indexes.Spatial.SpatialRelation,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IFilterDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#RelatesToShape(System.String,System.String,Raven.Client.Documents.Indexes.Spatial.SpatialRelation,Raven.Client.Documents.Indexes.Spatial.SpatialUnits,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderByDistance(Raven.Client.Documents.Queries.Spatial.DynamicSpatialField,System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderByDistance(System.Func{Raven.Client.Documents.Queries.Spatial.DynamicSpatialFieldFactory{`0},Raven.Client.Documents.Queries.Spatial.DynamicSpatialField},System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderByDistance(Raven.Client.Documents.Queries.Spatial.DynamicSpatialField,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderByDistance(System.Func{Raven.Client.Documents.Queries.Spatial.DynamicSpatialFieldFactory{`0},Raven.Client.Documents.Queries.Spatial.DynamicSpatialField},System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderByDistance(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderByDistance(System.String,System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderByDistance(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderByDistance(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderByDistanceDescending(Raven.Client.Documents.Queries.Spatial.DynamicSpatialField,System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderByDistanceDescending(System.Func{Raven.Client.Documents.Queries.Spatial.DynamicSpatialFieldFactory{`0},Raven.Client.Documents.Queries.Spatial.DynamicSpatialField},System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderByDistanceDescending(Raven.Client.Documents.Queries.Spatial.DynamicSpatialField,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderByDistanceDescending(System.Func{Raven.Client.Documents.Queries.Spatial.DynamicSpatialFieldFactory{`0},Raven.Client.Documents.Queries.Spatial.DynamicSpatialField},System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderByDistanceDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderByDistanceDescending(System.String,System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderByDistanceDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderByDistanceDescending(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderByDistance(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Double,System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderByDistance(System.String,System.Double,System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderByDistance(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderByDistance(System.String,System.String,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderByDistanceDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Double,System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderByDistanceDescending(System.String,System.Double,System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderByDistanceDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentQuery`1.Raven#Client#Documents#Session#IDocumentQueryBase{T,Raven#Client#Documents#Session#IDocumentQuery{T}}#OrderByDistanceDescending(System.String,System.String,System.Double)">
            <inheritdoc />
        </member>
        <member name="P:Raven.Client.Documents.Session.DocumentsChanges.FieldOldValue">
            <summary>
            Previous field value.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.DocumentsChanges.FieldNewValue">
            <summary>
            Current field value.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.DocumentsChanges.Change">
            <summary>
            Type of change that occurred.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.DocumentsChanges.FieldName">
            <summary>
            Name of field on which the change occurred.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.DocumentsChanges.FieldPath">
            <summary>
            Path of field on which the change occurred.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.DocumentsChanges.FieldFullName">
            <summary>
            Path + Name of field on which the change occurred.
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.DocumentSession">
            <summary>
            Implements Unit of Work for accessing the RavenDB server
            </summary>
            <summary>
            Implements Unit of Work for accessing the RavenDB server
            </summary>
            <summary>
            Implements Unit of Work for accessing the RavenDB server
            </summary>
            <summary>
            Implements Unit of Work for accessing the RavenDB server
            </summary>
            <summary>
            Implements Unit of Work for accessing the RavenDB server
            </summary>
            <summary>
            Implements Unit of Work for accessing the RavenDB server
            </summary>
            <summary>
            Implements Unit of Work for accessing the RavenDB server
            </summary>
            <summary>
            Provides an access to DocumentSession TimeSeries API.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.ConditionalLoad``1(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="P:Raven.Client.Documents.Session.DocumentSession.Advanced">
            <summary>
            Get the accessor for advanced operations
            </summary>
            <remarks>
            Those operations are rarely needed, and have been moved to a separate 
            property to avoid cluttering the API
            </remarks>
        </member>
        <member name="P:Raven.Client.Documents.Session.DocumentSession.Eagerly">
            <summary>
            Access the eager operations
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.DocumentSession.Lazily">
            <summary>
            Access the lazy operations
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.DocumentSession.Attachments">
            <summary>
            Access the attachments operations
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.DocumentSession.Revisions">
            <summary>        
            Access the revisions operations
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.DocumentSession.ClusterTransaction">
            <summary>
            Access to cluster wide transaction operations
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.#ctor(Raven.Client.Documents.DocumentStore,System.Guid,Raven.Client.Documents.Session.SessionOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Documents.Session.DocumentSession"/> class.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.SaveChanges">
            <summary>
            Saves all the changes to the Raven server.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.Exists(System.String)">
            <summary>
            Check if document exists without loading it
            </summary>
            <param name="id">Document id.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.Refresh``1(``0)">
            <summary>
            Refreshes the specified entity from Raven server.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.GenerateId(System.Object)">
            <summary>
            Generates the document ID.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.GenerateIdAsync(System.Object)">
            <summary>
            Not supported on sync session.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.Include``1(System.Linq.Expressions.Expression{System.Func{``0,System.String}})">
            <summary>
            Begin a load while including the specified path
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.Include``2(System.Linq.Expressions.Expression{System.Func{``0,System.String}})">
            <summary>
            Begin a load while including the specified path
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.Include``1(System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
            Begin a load while including the specified path
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.Include``2(System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
            Begin a load while including the specified path
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.Include(System.String)">
            <summary>
            Begin a load while including the specified path
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.Raven#Client#Documents#Session#Operations#Lazy#ILazySessionOperations#Include``1(System.Linq.Expressions.Expression{System.Func{``0,System.String}})">
            <summary>
            Begin a load while including the specified path 
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.Raven#Client#Documents#Session#Operations#Lazy#ILazySessionOperations#Include``1(System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
            Begin a load while including the specified path 
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.Raven#Client#Documents#Session#Operations#Lazy#ILazySessionOperations#Load``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Loads the specified ids.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.Raven#Client#Documents#Session#Operations#Lazy#ILazySessionOperations#Load``1(System.Collections.Generic.IEnumerable{System.String},System.Action{System.Collections.Generic.Dictionary{System.String,``0}})">
            <summary>
            Loads the specified ids and a function to call when it is evaluated
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.Raven#Client#Documents#Session#Operations#Lazy#ILazySessionOperations#Load``1(System.String)">
            <summary>
            Loads the specified id.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.Raven#Client#Documents#Session#Operations#Lazy#ILazySessionOperations#Load``1(System.String,System.Action{``0})">
            <summary>
            Loads the specified id and a function to call when it is evaluated
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.Raven#Client#Documents#Session#Operations#Lazy#ILazySessionOperations#Include(System.String)">
            <summary>
            Begin a load while including the specified path 
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.LazyLoadInternal``1(System.String[],System.String[],System.Action{System.Collections.Generic.Dictionary{System.String,``0}})">
            <summary>
            Register to lazily load documents and include
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.Load``1(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.Load``1(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.Load``1(System.String,System.Action{Raven.Client.Documents.Session.Loaders.IIncludeBuilder{``0}})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.Load``1(System.Collections.Generic.IEnumerable{System.String},System.Action{Raven.Client.Documents.Session.Loaders.IIncludeBuilder{``0}})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.LoadInternal``1(System.String[],System.String[],System.String[],System.Boolean,System.Collections.Generic.IEnumerable{Raven.Client.Documents.Operations.TimeSeries.AbstractTimeSeriesRange},System.String[],System.String[],System.Nullable{System.DateTime})">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.LoadStartingWith``1(System.String,System.String,System.Int32,System.Int32,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.LoadStartingWithIntoStream(System.String,System.IO.Stream,System.String,System.Int32,System.Int32,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.LoadIntoStream(System.Collections.Generic.IEnumerable{System.String},System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.DocumentQuery``2">
            <summary>
            Queries the index specified by <typeparamref name="TIndexCreator"/> using lucene syntax.
            </summary>
            <typeparam name="T">The result of the query</typeparam>
            <typeparam name="TIndexCreator">The type of the index creator.</typeparam>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.DocumentQuery``1(System.String,System.String,System.Boolean)">
            <summary>
            Query the specified index using Lucene syntax
            </summary>
            <typeparam name="T"></typeparam>
            <param name="indexName">Name of the index (mutually exclusive with collectionName)</param>
            <param name="collectionName">Name of the collection (mutually exclusive with indexName)</param>
            <param name="isMapReduce">Whether we are querying a map/reduce index (modify how we treat identifier properties)</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.Query``1(System.String,System.String,System.Boolean)">
            <summary>
                Queries the specified index using Linq.
            </summary>
            <typeparam name="T">The result of the query</typeparam>
            <param name="indexName">Name of the index (mutually exclusive with collectionName)</param>
            <param name="collectionName">Name of the collection (mutually exclusive with indexName)</param>
            <param name="isMapReduce">Whether we are querying a map/reduce index (modify how we treat identifier properties)</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.AsyncQuery``1(System.String,System.String,System.Boolean)">
            <summary>
            Create a new query for <typeparam name="T"/>
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.Query``2">
            <summary>
            Queries the index specified by <typeparamref name="TIndexCreator"/> using Linq.
            </summary>
            <typeparam name="T">The result of the query</typeparam>
            <typeparam name="TIndexCreator">The type of the index creator.</typeparam>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.DocumentSession.Raven#Client#Documents#Linq#IDocumentQueryGenerator#Query``1(System.String,System.String,System.Boolean)">
            <summary>
            Create a new query for <typeparam name="T"/>
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.DocumentSessionAttachments">
            <summary>
            Implements Unit of Work for accessing the RavenDB server
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.DocumentSessionAttachmentsAsync">
            <summary>
            Implements Unit of Work for accessing the RavenDB server
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.DocumentSessionAttachmentsBase">
            <summary>
            Abstract implementation for in memory session operations
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.DocumentSessionRevisions">
            <summary>
            Implements Unit of Work for accessing the RavenDB server
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.DocumentSessionRevisionsAsync">
            <summary>
            Implements Unit of Work for accessing the RavenDB server
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.IAbstractDocumentQuery`1">
            <summary>
             Mostly used by the linq provider
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.Conventions">
            <summary>
            Gets the document convention from the query session
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.IsDynamicMapReduce">
            <summary>
            Determines if it is a dynamic map-reduce query
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.WaitForNonStaleResults(System.Nullable{System.TimeSpan})">
            <summary>
              Instruct the query to wait for non stale results.
              This shouldn't be used outside of unit tests unless you are well aware of the implications
            </summary>
            <param name = "waitTimeout">Maximum time to wait for index query results to become non-stale before exception is thrown. Default: 15 seconds.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.GetProjectionFields">
            <summary>
              Gets the fields for projection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.RandomOrdering">
            <summary>
            Order the search results randomly
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.RandomOrdering(System.String)">
            <summary>
            Order the search results randomly using the specified seed
            this is useful if you want to have repeatable random queries
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.Include(System.String)">
            <summary>
              Includes the specified path in the query, loading the document specified in that path
            </summary>
            <param name = "path">The path.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.Include(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
              Includes the specified path in the query, loading the document specified in that path
            </summary>
            <param name = "path">The path.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.Include(Raven.Client.Documents.Session.Loaders.IncludeBuilder)">
            <summary>
              Includes the specified documents and/or counters in the query, specified by IncludeBuilder
            </summary>
            <param name="includes"></param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.Take(System.Int32)">
            <summary>
              Takes the specified count.
            </summary>
            <param name = "count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.Skip(System.Int32)">
            <summary>
              Skips the specified count.
            </summary>
            <param name = "count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.WhereEquals(System.String,System.Object,System.Boolean)">
            <summary>
              Matches value
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.WhereEquals(System.String,Raven.Client.Documents.Session.MethodCall,System.Boolean)">
            <summary>
              Matches evaluated method
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.WhereEquals(Raven.Client.Documents.Session.WhereParams)">
            <summary>
              Matches value
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.WhereNotEquals(System.String,System.Object,System.Boolean)">
            <summary>
              Not matches value
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.WhereNotEquals(System.String,Raven.Client.Documents.Session.MethodCall,System.Boolean)">
            <summary>
              Not matches evaluated method
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.WhereNotEquals(Raven.Client.Documents.Session.WhereParams)">
            <summary>
              Not matches value
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.OpenSubclause">
            <summary>
              Simplified method for opening a new clause within the query
            </summary>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.CloseSubclause">
            <summary>
              Simplified method for closing a clause within the query
            </summary>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.NegateNext">
            <summary>
             Negate the next operation
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.WhereIn(System.String,System.Collections.Generic.IEnumerable{System.Object},System.Boolean)">
            <summary>
            Check that the field has one of the specified value
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.WhereStartsWith(System.String,System.Object)">
            <summary>
              Matches fields which starts with the specified value.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.WhereStartsWith(System.String,System.Object,System.Boolean)">
            <summary>
              Matches fields which starts with the specified value.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.WhereEndsWith(System.String,System.Object)">
            <summary>
              Matches fields which ends with the specified value.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.WhereEndsWith(System.String,System.Object,System.Boolean)">
            <summary>
              Matches fields which ends with the specified value.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.WhereBetween(System.String,System.Object,System.Object,System.Boolean)">
            <summary>
              Matches fields where the value is between the specified start and end, inclusive
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.WhereGreaterThan(System.String,System.Object,System.Boolean)">
            <summary>
              Matches fields where the value is greater than the specified value
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.WhereGreaterThanOrEqual(System.String,System.Object,System.Boolean)">
            <summary>
              Matches fields where the value is greater than or equal to the specified value
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.WhereLessThan(System.String,System.Object,System.Boolean)">
            <summary>
              Matches fields where the value is less than the specified value
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.WhereLessThanOrEqual(System.String,System.Object,System.Boolean)">
            <summary>
              Matches fields where the value is less than or equal to the specified value
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.WhereRegex(System.String,System.String)">
            <summary>
              Matches fields where Regex.IsMatch(filed, pattern)
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.AndAlso">
            <summary>
              Add an AND to the query
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.OrElse">
            <summary>
              Add an OR to the query
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.Boost(System.Decimal)">
            <summary>
              Specifies a boost weight to the last where clause.
              The higher the boost factor, the more relevant the term will be.
            </summary>
            <param name = "boost">boosting factor where 1.0 is default, less than 1.0 is lower weight, greater than 1.0 is higher weight</param>
            <returns></returns>
            <remarks>
              http://lucene.apache.org/java/2_4_0/queryparsersyntax.html#Boosting%20a%20Term
            </remarks>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.Fuzzy(System.Decimal)">
            <summary>
              Specifies a fuzziness factor to the single word term in the last where clause
            </summary>
            <param name = "fuzzy">0.0 to 1.0 where 1.0 means closer match</param>
            <returns></returns>
            <remarks>
              http://lucene.apache.org/java/2_4_0/queryparsersyntax.html#Fuzzy%20Searches
            </remarks>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.Proximity(System.Int32)">
            <summary>
              Specifies a proximity distance for the phrase in the last where clause
            </summary>
            <param name = "proximity">number of words within</param>
            <returns></returns>
            <remarks>
              http://lucene.apache.org/java/2_4_0/queryparsersyntax.html#Proximity%20Searches
            </remarks>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.OrderBy(System.String,Raven.Client.Documents.Session.OrderingType)">
            <summary>
              Order the results by the specified fields
              The field is the name of the field to sort, defaulting to sorting by ascending.
            </summary>
            <param name = "field">The fields.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.Search(System.String,System.String,Raven.Client.Documents.Queries.SearchOperator)">
            <summary>
            Perform a search for documents which fields that match the searchTerms.
            If there is more than a single term, each of them will be checked independently.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.ToString">
            <summary>
              Returns a <see cref = "T:System.String" /> that represents this instance.
            </summary>
            <returns>
              A <see cref = "T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.ContainsAny(System.String,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Performs a query matching ANY of the provided values against the given field (OR)
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAbstractDocumentQuery`1.ContainsAll(System.String,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Performs a query matching ALL of the provided values against the given field (AND)
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.IAbstractDocumentQueryImpl`1">
            <summary>
            This is used as an abstraction for the implementation
            of a query when passing to other parts of the
            query infrastructure. Meant to be internal only, making
            this public to allow mocking / instrumentation. 
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.IAdvancedDocumentSessionOperations">
            <summary>
                Advanced session operations
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.IAdvancedDocumentSessionOperations.DocumentStore">
            <summary>
                The document store associated with this session
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.IAdvancedDocumentSessionOperations.ExternalState">
            <summary>
                Allow extensions to provide additional state per session
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.IAdvancedDocumentSessionOperations.HasChanges">
            <summary>
                Gets a value indicating whether any of the entities tracked by the session has changes.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.IAdvancedDocumentSessionOperations.MaxNumberOfRequestsPerSession">
            <summary>
                Gets or sets the max number of requests per session.
                If the <see cref="P:Raven.Client.Documents.Session.IAdvancedDocumentSessionOperations.NumberOfRequests" /> rise above <see cref="P:Raven.Client.Documents.Session.IAdvancedDocumentSessionOperations.MaxNumberOfRequestsPerSession" />, an exception will
                be thrown.
            </summary>
            <value>The max number of requests per session.</value>
        </member>
        <member name="P:Raven.Client.Documents.Session.IAdvancedDocumentSessionOperations.NumberOfRequests">
            <summary>
                Gets the number of requests for this session
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.IAdvancedDocumentSessionOperations.StoreIdentifier">
            <summary>
                Gets the store identifier for this session.
                The store identifier is the identifier for the particular RavenDB instance.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.IAdvancedDocumentSessionOperations.UseOptimisticConcurrency">
            <summary>
                Gets or sets a value indicating whether the session should use optimistic concurrency.
                When set to <c>true</c>, a check is made so that a change made behind the session back would fail
                and raise <see cref="!:ConcurrencyException" />.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAdvancedDocumentSessionOperations.Clear">
            <summary>
                Clears this instance.
                Remove all entities from the delete queue and stops tracking changes for all entities.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAdvancedDocumentSessionOperations.Defer(Raven.Client.Documents.Commands.Batches.ICommandData,Raven.Client.Documents.Commands.Batches.ICommandData[])">
            <summary>
                Defer commands to be executed on SaveChanges()
            </summary>
            <param name="command">Command to be executed</param>
            <param name="commands">Array of commands to be executed.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAdvancedDocumentSessionOperations.Defer(Raven.Client.Documents.Commands.Batches.ICommandData[])">
            <summary>
                Defer commands to be executed on SaveChanges()
            </summary>
            <param name="commands">Array of commands to be executed.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAdvancedDocumentSessionOperations.Evict``1(``0)">
            <summary>
                Evicts the specified entity from the session.
                Remove the entity from the delete queue and stops tracking changes for this entity.
            </summary>
            <param name="entity">Entity to evict.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAdvancedDocumentSessionOperations.GetDocumentId(System.Object)">
            <summary>
                Gets the document id for the specified entity.
            </summary>
            <remarks>
                This function may return <c>null</c> if the entity isn't tracked by the session, or if the entity is
                a new entity with an ID that should be generated on the server.
            </remarks>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAdvancedDocumentSessionOperations.GetMetadataFor``1(``0)">
            <summary>
                Gets the metadata for the specified entity.
                If the entity is transient, it will load the metadata from the store
                and associate the current state of the entity with the metadata from the server.
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAdvancedDocumentSessionOperations.GetChangeVectorFor``1(``0)">
            <summary>
                Gets change vector for the specified entity.
                If the entity is transient, it will load the metadata from the store
                and associate the current state of the entity with the metadata from the server.
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAdvancedDocumentSessionOperations.GetCountersFor``1(``0)">
            <summary>
                Gets all the counter names for the specified entity.
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAdvancedDocumentSessionOperations.GetTimeSeriesFor``1(``0)">
            <summary>
                Gets all time series names for the specified entity.
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAdvancedDocumentSessionOperations.GetLastModifiedFor``1(``0)">
            <summary>
                Gets last modified date for the specified entity.
                If the entity is transient, it will load the metadata from the store
                and associate the current state of the entity with the metadata from the server.
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAdvancedDocumentSessionOperations.HasChanged(System.Object)">
            <summary>
                Determines whether the specified entity has changed.
            </summary>
            <param name="entity">The entity.</param>
            <returns>
                <c>true</c> if the specified entity has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAdvancedDocumentSessionOperations.IsLoaded(System.String)">
            <summary>
                Returns whether a document with the specified id is loaded in the
                current session
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAdvancedDocumentSessionOperations.IgnoreChangesFor(System.Object)">
            <summary>
            Mark the entity as one that should be ignore for change tracking purposes,
            it still takes part in the session, but is ignored for SaveChanges.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAdvancedDocumentSessionOperations.WhatChanged">
            <summary>
            Returns all changes for each entity stored within session. Including name of the field/property that changed, its old and new value and change type.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAdvancedDocumentSessionOperations.WaitForReplicationAfterSaveChanges(System.Nullable{System.TimeSpan},System.Boolean,System.Int32,System.Boolean)">
            <summary>
            SaveChanges will wait for the changes made to be replicates to `replicas` nodes
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAdvancedDocumentSessionOperations.WaitForIndexesAfterSaveChanges(System.Nullable{System.TimeSpan},System.Boolean,System.String[])">
            <summary>
            SaveChanges will wait for the indexes to catch up with the saved changes
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAdvancedDocumentSessionOperations.SetTransactionMode(Raven.Client.Documents.Session.TransactionMode)">
            <summary>
            Overwrite the existing transaction mode for the current session.
            </summary>
            <param name="mode"></param>
        </member>
        <member name="T:Raven.Client.Documents.Session.IAdvancedSessionOperations">
            <summary>
                Advanced synchronous session operations
            </summary>
            <summary>
                Advanced synchronous session operations
            </summary>
            <summary>
                Advanced synchronous session operations
            </summary>
            <summary>
                Advanced synchronous session operations
            </summary>
            <summary>
                Advanced synchronous session operations
            </summary>
            <summary>
                Advanced synchronous session operations
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAdvancedSessionOperations.ConditionalLoad``1(System.String,System.String)">
            <summary>
                Loads the specified entity with the specified id and changeVector.
                If the entity is loaded into the session, the tracked entity will be returned otherwise the entity will be loaded only if it is fresher then the provided changeVector.
            </summary>
            <param name="id">Identifier of a entity that will be conditional loaded.</param>
            <param name="changeVector">Change vector of a entity that will be conditional loaded.</param>
        </member>
        <member name="P:Raven.Client.Documents.Session.IAdvancedSessionOperations.Eagerly">
            <summary>
                Access the eager operations
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.IAdvancedSessionOperations.Lazily">
            <summary>
                Access the lazy operations
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.IAdvancedSessionOperations.Attachments">
            <summary>
                Access the attachments operations
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.IAdvancedSessionOperations.Revisions">
            <summary>
                Access the revisions operations
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.IAdvancedSessionOperations.ClusterTransaction">
            <summary>
                Access cluster transaction operations
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAdvancedSessionOperations.Refresh``1(``0)">
            <summary>
                Updates entity with latest changes from server
            </summary>
            <param name="entity">Instance of an entity that will be refreshed</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAdvancedSessionOperations.RawQuery``1(System.String)">
            <summary>
            Query the specified index using provided raw query
            </summary>
            <typeparam name="T">The query result type</typeparam>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAdvancedSessionOperations.GraphQuery``1(System.String)">
            <summary>
            Issue a graph query based on the raw match query provided
            </summary>
            <typeparam name="T">The query result type</typeparam>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAdvancedSessionOperations.Exists(System.String)">
            <summary>
                Check if document exists
            </summary>
            <param name="id">Document id</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAdvancedSessionOperations.LoadStartingWith``1(System.String,System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
                Loads multiple entities that contain common prefix.
            </summary>
            <param name="idPrefix">prefix for which documents should be returned e.g. "products/"</param>
            <param name="matches">
                pipe ('|') separated values for which document IDs (after 'idPrefix') should be matched ('?'
                any single character, '*' any characters)
            </param>
            <param name="start">number of documents that should be skipped. By default: 0.</param>
            <param name="pageSize">maximum number of documents that will be retrieved. By default: 25.</param>
            <param name="exclude">
                pipe ('|') separated values for which document IDs (after 'idPrefix') should not be matched
                ('?' any single character, '*' any characters)
            </param>
            <param name="startAfter">
                skip document fetching until given ID is found and return documents after that ID (default:
                null)
            </param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAdvancedSessionOperations.LoadStartingWithIntoStream(System.String,System.IO.Stream,System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
                Loads multiple entities that contain common prefix into a given stream.
            </summary>
            <param name="idPrefix">prefix for which documents should be returned e.g. "products/"</param>
            <param name="output">the stream that will contain the load results</param>
            <param name="matches">
                pipe ('|') separated values for which document IDs (after 'idPrefix') should be matched ('?'
                any single character, '*' any characters)
            </param>
            <param name="start">number of documents that should be skipped. By default: 0.</param>
            <param name="pageSize">maximum number of documents that will be retrieved. By default: 25.</param>
            <param name="exclude">
                pipe ('|') separated values for which document IDs (after 'idPrefix') should not be matched
                ('?' any single character, '*' any characters)
            </param>
            <param name="startAfter">
                skip document fetching until given ID is found and return documents after that ID (default:
                null)
            </param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAdvancedSessionOperations.LoadIntoStream(System.Collections.Generic.IEnumerable{System.String},System.IO.Stream)">
            <summary>
                Loads the specified entities with the specified ids directly into a given stream.
            </summary>
            <param name="ids">Enumerable of the Ids of the documents that should be loaded</param>
            <param name="output">the stream that will contain the load results</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBuilder.DocumentQuery``2">
            <summary>
                Queries the index specified by <typeparamref name="TIndexCreator" /> using lucene syntax.
            </summary>
            <typeparam name="T">The result of the query</typeparam>
            <typeparam name="TIndexCreator">The type of the index creator.</typeparam>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBuilder.DocumentQuery``1(System.String,System.String,System.Boolean)">
            <summary>
                Query the specified index using Lucene syntax
            </summary>
            <typeparam name="T">The result of the query</typeparam>
            <param name="indexName">Name of the index (mutually exclusive with collectionName)</param>
            <param name="collectionName">Name of the collection (mutually exclusive with indexName)</param>
            <param name="isMapReduce">Whether we are querying a map/reduce index (modify how we treat identifier properties)</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentsSessionOperations.Stream``1(System.Linq.IQueryable{``0})">
            <summary>
                Stream the results on the query to the client, converting them to
                CLR types along the way.
                <para>Does NOT track the entities in the session, and will not includes changes there when SaveChanges() is called</para>
            </summary>
            <param name="query">Query to stream results for</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentsSessionOperations.Stream``1(System.Linq.IQueryable{``0},Raven.Client.Documents.Session.StreamQueryStatistics@)">
            <summary>
                Stream the results on the query to the client, converting them to
                CLR types along the way.
                <para>Does NOT track the entities in the session, and will not includes changes there when SaveChanges() is called</para>
            </summary>
            <param name="query">Query to stream results for</param>
            <param name="streamQueryStats">Information about the performed query</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentsSessionOperations.Stream``1(Raven.Client.Documents.Session.IDocumentQuery{``0})">
            <summary>
                Stream the results on the query to the client, converting them to
                CLR types along the way.
                <para>Does NOT track the entities in the session, and will not includes changes there when SaveChanges() is called</para>
            </summary>
            <param name="query">Query to stream results for</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentsSessionOperations.Stream``1(Raven.Client.Documents.Session.IRawDocumentQuery{``0})">
            <summary>
                Stream the results on the query to the client, converting them to
                CLR types along the way.
                <para>Does NOT track the entities in the session, and will not includes changes there when SaveChanges() is called</para>
            </summary>
            <param name="query">Query to stream results for</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentsSessionOperations.Stream``1(Raven.Client.Documents.Session.IRawDocumentQuery{``0},Raven.Client.Documents.Session.StreamQueryStatistics@)">
            <summary>
                Stream the results on the query to the client, converting them to
                CLR types along the way.
                <para>Does NOT track the entities in the session, and will not includes changes there when SaveChanges() is called</para>
            </summary>
            <param name="query">Query to stream results for</param>
            <param name="streamQueryStats">Information about the performed query</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentsSessionOperations.Stream``1(Raven.Client.Documents.Session.IDocumentQuery{``0},Raven.Client.Documents.Session.StreamQueryStatistics@)">
            <summary>
                Stream the results on the query to the client, converting them to
                CLR types along the way.
                <para>Does NOT track the entities in the session, and will not includes changes there when SaveChanges() is called</para>
            </summary>
            <param name="query">Query to stream results for</param>
            <param name="streamQueryStats">Information about the performed query</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentsSessionOperations.Stream``1(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
                Stream the results of documents search to the client, converting them to CLR types along the way.
                <para>Does NOT track the entities in the session, and will not includes changes there when SaveChanges() is called</para>
            </summary>
            <param name="startsWith">prefix for which documents should be returned e.g. "products/"</param>
            <param name="matches">
                pipe ('|') separated values for which document ID (after 'idPrefix') should be matched ('?'
                any single character, '*' any characters)
            </param>
            <param name="start">number of documents that should be skipped</param>
            <param name="pageSize">maximum number of documents that will be retrieved</param>
            <param name="startAfter">
                skip document fetching until given ID is found and return documents after that ID (default:
                null)
            </param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentsSessionOperations.StreamInto``1(Raven.Client.Documents.Session.IDocumentQuery{``0},System.IO.Stream)">
            <summary>
                Returns the results of a query directly into stream 
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentsSessionOperations.StreamInto``1(Raven.Client.Documents.Session.IRawDocumentQuery{``0},System.IO.Stream)">
            <summary>
                Returns the results of a query directly into stream 
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.IAsyncAdvancedSessionOperations">
            <summary>
                Advanced async session operations
            </summary>
            <summary>
                Advanced async session operations
            </summary>
            <summary>
                Advanced async session operations
            </summary>
            <summary>
                Advanced async session operations
            </summary>
            <summary>
                Advanced async session operations
            </summary>
            <summary>
                Advanced async session operations
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncAdvancedSessionOperations.ConditionalLoadAsync``1(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Loads the specified entity with the specified id and changeVector.
                If the entity is loaded into the session, the tracked entity will be returned otherwise the entity will be loaded only if it is fresher then the provided changeVector.
            </summary>
            <param name="id">Identifier of a entity that will be conditional loaded.</param>
            <param name="changeVector">Change vector of a entity that will be conditional loaded.</param>
            <param name="token">The cancellation token.</param>
        </member>
        <member name="P:Raven.Client.Documents.Session.IAsyncAdvancedSessionOperations.Eagerly">
            <summary>
                Access the eager operations
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.IAsyncAdvancedSessionOperations.Lazily">
            <summary>
                Access the lazy operations
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.IAsyncAdvancedSessionOperations.Attachments">
            <summary>
                Access the attachments operations
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.IAsyncAdvancedSessionOperations.Revisions">
            <summary>
                Access the revisions operations
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.IAsyncAdvancedSessionOperations.ClusterTransaction">
            <summary>
                Access cluster transaction operations
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncAdvancedSessionOperations.RefreshAsync``1(``0,System.Threading.CancellationToken)">
            <summary>
                Updates entity with latest changes from server
            </summary>
            <param name="entity">Instance of an entity that will be refreshed</param>
            <param name="token">The cancellation token.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncAdvancedSessionOperations.AsyncRawQuery``1(System.String)">
            <summary>
            Query the specified index using provided raw query
            </summary>
            <typeparam name="T">The query result type</typeparam>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncAdvancedSessionOperations.AsyncGraphQuery``1(System.String)">
            <summary>
            Issue a graph query based on the raw match query provided
            </summary>
            <typeparam name="T">The query result type</typeparam>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncAdvancedSessionOperations.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
                Check if document exists
            </summary>
            <param name="id">Document id</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncAdvancedSessionOperations.LoadStartingWithAsync``1(System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Loads multiple entities that contain common prefix.
            </summary>
            <param name="idPrefix">prefix for which documents should be returned e.g. "products/"</param>
            <param name="matches">
                pipe ('|') separated values for which document IDs (after 'idPrefix') should be matched ('?'
                any single character, '*' any characters)
            </param>
            <param name="start">number of documents that should be skipped. By default: 0.</param>
            <param name="pageSize">maximum number of documents that will be retrieved. By default: 25.</param>
            <param name="exclude">
                pipe ('|') separated values for which document IDs (after 'idPrefix') should not be matched
                ('?' any single character, '*' any characters)
            </param>
            <param name="startAfter">
                skip document fetching until given ID is found and return documents after that ID (default:
                null)
            </param>
            <param name="token">The cancellation token.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncAdvancedSessionOperations.LoadStartingWithIntoStreamAsync(System.String,System.IO.Stream,System.String,System.Int32,System.Int32,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Loads multiple entities that contain common prefix into a given stream.
            </summary>
            <param name="idPrefix">prefix for which documents should be returned e.g. "products/"</param>
            <param name="output">the stream that will contain the load results</param>
            <param name="matches">
                pipe ('|') separated values for which document IDs (after 'idPrefix') should be matched ('?'
                any single character, '*' any characters)
            </param>
            <param name="start">number of documents that should be skipped. By default: 0.</param>
            <param name="pageSize">maximum number of documents that will be retrieved. By default: 25.</param>
            <param name="exclude">
                pipe ('|') separated values for which document IDs (after 'idPrefix') should not be matched
                ('?' any single character, '*' any characters)
            </param>
            <param name="startAfter">
                skip document fetching until given ID is found and return documents after that ID (default:
                null)
            </param>
            <param name="token">The cancellation token.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncAdvancedSessionOperations.LoadIntoStreamAsync(System.Collections.Generic.IEnumerable{System.String},System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
                Loads the specified entities with the specified ids directly into a given stream.
            </summary>
            <param name="ids">Enumerable of the Ids of the documents that should be loaded</param>
            <param name="output">the stream that will contain the load results</param>
            <param name="token">The cancellation token.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentQueryBuilder.AsyncDocumentQuery``2">
            <summary>
                Queries the index specified by <typeparamref name="TIndexCreator" /> using lucene syntax.
            </summary>
            <typeparam name="T">The result of the query</typeparam>
            <typeparam name="TIndexCreator">The type of the index creator.</typeparam>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentQueryBuilder.AsyncDocumentQuery``1(System.String,System.String,System.Boolean)">
            <summary>
                Query the specified index using Lucene syntax
            </summary>
            <typeparam name="T">The result of the query</typeparam>
            <param name="indexName">Name of the index (mutually exclusive with collectionName)</param>
            <param name="collectionName">Name of the collection (mutually exclusive with indexName)</param>
            <param name="isMapReduce">Whether we are querying a map/reduce index (modify how we treat identifier properties)</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncAdvancedDocumentsSessionOperations.StreamAsync``1(Raven.Client.Documents.Session.IAsyncDocumentQuery{``0},System.Threading.CancellationToken)">
            <summary>
                Stream the results on the query to the client, converting them to
                CLR types along the way.
                <para>Does NOT track the entities in the session, and will not includes changes there when SaveChanges() is called</para>
            </summary>
            <param name="query">Query to stream results for</param>
            <param name="token">The cancellation token.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncAdvancedDocumentsSessionOperations.StreamAsync``1(Raven.Client.Documents.Session.IAsyncDocumentQuery{``0},Raven.Client.Documents.Session.StreamQueryStatistics@,System.Threading.CancellationToken)">
            <summary>
                Stream the results on the query to the client, converting them to
                CLR types along the way.
                <para>Does NOT track the entities in the session, and will not includes changes there when SaveChanges() is called</para>
            </summary>
            <param name="query">Query to stream results for</param>
            <param name="streamQueryStats">Information about the performed query</param>
            <param name="token">The cancellation token.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncAdvancedDocumentsSessionOperations.StreamAsync``1(Raven.Client.Documents.Session.IAsyncRawDocumentQuery{``0},System.Threading.CancellationToken)">
            <summary>
                Stream the results on the query to the client, converting them to
                CLR types along the way.
                <para>Does NOT track the entities in the session, and will not includes changes there when SaveChanges() is called</para>
            </summary>
            <param name="query">Query to stream results for</param>
            <param name="token">The cancellation token.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncAdvancedDocumentsSessionOperations.StreamAsync``1(Raven.Client.Documents.Session.IAsyncRawDocumentQuery{``0},Raven.Client.Documents.Session.StreamQueryStatistics@,System.Threading.CancellationToken)">
            <summary>
                Stream the results on the query to the client, converting them to
                CLR types along the way.
                <para>Does NOT track the entities in the session, and will not includes changes there when SaveChanges() is called</para>
            </summary>
            <param name="query">Query to stream results for</param>
            <param name="streamQueryStats">Information about the performed query</param>
            <param name="token">The cancellation token.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncAdvancedDocumentsSessionOperations.StreamAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
                Stream the results on the query to the client, converting them to
                CLR types along the way.
                <para>Does NOT track the entities in the session, and will not includes changes there when SaveChanges() is called</para>
            </summary>
            <param name="query">Query to stream results for</param>
            <param name="token">The cancellation token.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncAdvancedDocumentsSessionOperations.StreamAsync``1(System.Linq.IQueryable{``0},Raven.Client.Documents.Session.StreamQueryStatistics@,System.Threading.CancellationToken)">
            <summary>
                Stream the results on the query to the client, converting them to
                CLR types along the way.
                <para>Does NOT track the entities in the session, and will not includes changes there when SaveChanges() is called</para>
            </summary>
            <param name="query">Query to stream results for</param>
            <param name="streamQueryStats">Information about the performed query</param>
            <param name="token">The cancellation token.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncAdvancedDocumentsSessionOperations.StreamAsync``1(System.String,System.String,System.Int32,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
                Stream the results of documents search to the client, converting them to CLR types along the way.
                <para>Does NOT track the entities in the session, and will not includes changes there when SaveChanges() is called</para>
            </summary>
            <param name="startsWith">prefix for which documents should be returned e.g. "products/"</param>
            <param name="matches">
                pipe ('|') separated values for which document IDs (after 'idPrefix') should be matched ('?'
                any single character, '*' any characters)
            </param>
            <param name="start">number of documents that should be skipped</param>
            <param name="pageSize">maximum number of documents that will be retrieved</param>
            <param name="startAfter">
                skip document fetching until given ID is found and return documents after that ID (default:
                null)
            </param>
            <param name="token">The cancellation token.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncAdvancedDocumentsSessionOperations.StreamIntoAsync``1(Raven.Client.Documents.Session.IAsyncDocumentQuery{``0},System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
                Returns the results of a query directly into stream
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncAdvancedDocumentsSessionOperations.StreamIntoAsync``1(Raven.Client.Documents.Session.IAsyncRawDocumentQuery{``0},System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
                Returns the results of a query directly into stream
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentQueryBase`1.CountLazilyAsync(System.Threading.CancellationToken)">
            <summary>
            Register the query as a lazy-count query and return a lazy instance that will evaluate the query when needed.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentQueryBase`1.ToListAsync(System.Threading.CancellationToken)">
            <summary>
                Executed the query and returns the results.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentQueryBase`1.ToArrayAsync(System.Threading.CancellationToken)">
            <summary>
                Executed the query and returns the results.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentQueryBase`1.FirstAsync(System.Threading.CancellationToken)">
            <summary>
                Returns first element or throws if sequence is empty.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentQueryBase`1.FirstOrDefaultAsync(System.Threading.CancellationToken)">
            <summary>
                Returns first element or default value for type if sequence is empty.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentQueryBase`1.SingleAsync(System.Threading.CancellationToken)">
            <summary>
                Returns first element or throws if sequence is empty or contains more than one element.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentQueryBase`1.SingleOrDefaultAsync(System.Threading.CancellationToken)">
            <summary>
                Returns first element or default value for given type if sequence is empty. Throws if sequence contains more than
                one element.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentQueryBase`1.AnyAsync(System.Threading.CancellationToken)">
            <summary>
                Checks if the given query matches any records
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentQueryBase`1.CountAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the total count of records for this query
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentQueryBase`1.LongCountAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the total count of records for this query as int64 
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentQueryBase`1.LazilyAsync(System.Action{System.Collections.Generic.IEnumerable{`0}})">
            <summary>
                Register the query as a lazy query and return a lazy
                instance that will evaluate the query only when needed.
            Also provide a function to execute when the value is evaluated
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncRawDocumentQuery`1.ExecuteAggregationAsync(System.Threading.CancellationToken)">
            <summary>
               Execute raw query aggregated by facet
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.IAsyncDocumentQuery`1">
            <summary>
                Asynchronous query against a raven index
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.IAsyncDocumentQuery`1.IsDistinct">
            <summary>
                Whether we should apply distinct operation to the query on the server side
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentQuery`1.GetQueryResultAsync(System.Threading.CancellationToken)">
            <summary>
                Gets the query result. Executing this method for the first time will execute the query.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentQuery`1.SelectFields``1(System.String[])">
            <summary>
                Selects the specified fields directly from the index if the are stored. If the field is not stored in index, value
                will come from document directly.
            </summary>
            <typeparam name="TProjection">Type of the projection.</typeparam>
            <param name="fields">Array of fields to load.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentQuery`1.SelectFields``1(Raven.Client.Documents.Queries.ProjectionBehavior,System.String[])">
            <summary>
                Selects the specified fields according to the given projection behavior.
            </summary>
            <typeparam name="TProjection">Type of the projection.</typeparam>
            <param name="projectionBehavior">Projection behavior to use.</param>
            <param name="fields">Array of fields to load.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentQuery`1.SelectFields``1(Raven.Client.Documents.Queries.QueryData)">
            <summary>
                Selects the specified fields.
            </summary>
            <typeparam name="TProjection">Type of the projection.</typeparam>
            <param name="queryData">An object containing the fields to load, field projections and a From-Token alias name</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentQuery`1.SelectFields``1">
            <summary>
                Selects the specified fields directly from the index if the are stored. If the field is not stored in index, value
                will come from document directly.
                <para>Array of fields will be taken from TProjection</para>
            </summary>
            <typeparam name="TProjection">Type of the projection from which fields will be taken.</typeparam>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentQuery`1.SelectFields``1(Raven.Client.Documents.Queries.ProjectionBehavior)">
            <summary>
                Selects the specified fields according to the given projection behavior.
                <para>Array of fields will be taken from TProjection</para>
            </summary>
            <typeparam name="TProjection">Type of the projection from which fields will be taken.</typeparam>
            <param name="projectionBehavior">Projection behavior to use.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentQuery`1.SelectTimeSeries``1(System.Func{Raven.Client.Documents.Queries.TimeSeries.ITimeSeriesQueryBuilder,``0})">
            <summary>
                Selects a Time Series Aggregation based on
                a time series query generated by an ITimeSeriesQueryBuilder.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentQuery`1.OfType``1">
            <summary>
            Changes the return type of the query
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.IAsyncDocumentSession">
            <summary>
                Interface for document session using async approaches
            </summary>
            <summary>
                Interface for document session using async approaches
            </summary>
            <inheritdoc />
            <summary>
                Interface for document session using async approaches
            </summary>
            <summary>
            Provides an access to DocumentSession TimeSeries API.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.IAsyncDocumentSession.Advanced">
            <summary>
                Get the accessor for advanced operations
            </summary>
            <remarks>
                Those operations are rarely needed, and have been moved to a separate
                property to avoid cluttering the API
            </remarks>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentSession.Delete``1(``0)">
            <summary>
                Marks the specified entity for deletion. The entity will be deleted when
                <see cref="M:Raven.Client.Documents.Session.IDocumentSession.SaveChanges" /> is called.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity">instance of entity to delete</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentSession.Delete(System.String)">
            <summary>
                Marks the specified entity for deletion. The entity will be deleted when
                <see cref="M:Raven.Client.Documents.Session.IDocumentSession.SaveChanges" /> is called.
                <para>WARNING: This method will not call beforeDelete listener!</para>
            </summary>
            <param name="id">entity Id</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentSession.Delete(System.String,System.String)">
            <summary>
                Marks the specified entity for deletion. The entity will be deleted when
                <see cref="M:Raven.Client.Documents.Session.IDocumentSession.SaveChanges" /> is called.
                <para>WARNING: This method will not call beforeDelete listener!</para>
            </summary>
            <param name="id">entity Id</param>
            <param name="expectedChangeVector">Expected change vector of a document to delete.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentSession.SaveChangesAsync(System.Threading.CancellationToken)">
            <summary>
                Saves all the pending changes to the server.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentSession.StoreAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
                Stores entity in session, extracts Id from entity using Conventions or generates new one if it is not available.
                <para>Forces concurrency check if the Id is not available during extraction.</para>
            </summary>
            <param name="entity">entity to store.</param>
            <param name="token">The cancellation token.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentSession.StoreAsync(System.Object,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Stores entity in session with given id and forces concurrency check with given change vector.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentSession.StoreAsync(System.Object,System.String,System.Threading.CancellationToken)">
            <summary>
                Stores the specified dynamic entity, under the specified id.
            </summary>
            <param name="entity">entity to store.</param>
            <param name="id">Id to store this entity under. If other entity exists with the same id it will be overwritten.</param>
            <param name="token">The cancellation token.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentSession.Include(System.String)">
            <summary>
                Begin a load while including the specified path
            </summary>
            <param name="path">Path in documents in which server should look for a 'referenced' documents.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentSession.Include``1(System.Linq.Expressions.Expression{System.Func{``0,System.String}})">
            <summary>
                Begin a load while including the specified path
            </summary>
            <param name="path">Path in documents in which server should look for a 'referenced' documents.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentSession.Include``2(System.Linq.Expressions.Expression{System.Func{``0,System.String}})">
            <summary>
                Begin a load while including the specified path
            </summary>
            <param name="path">Path in documents in which server should look for a 'referenced' documents.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentSession.Include``1(System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
                Begin a load while including the specified path
            </summary>
            <param name="path">Path in documents in which server should look for a 'referenced' documents.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentSession.Include``2(System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
                Begin a load while including the specified path
            </summary>
            <param name="path">Path in documents in which server should look for a 'referenced' documents.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentSession.LoadAsync``1(System.String,System.Threading.CancellationToken)">
            <summary>
                Loads the specified entity with the specified id.
            </summary>
            <param name="id">Identifier of a entity that will be loaded.</param>
            <param name="token">The cancellation token.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentSession.LoadAsync``1(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
                Loads the specified entities with the specified ids.
            </summary>
            <param name="ids">Enumerable of Ids that should be loaded</param>
            <param name="token">The cancellation token.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentSession.LoadAsync``1(System.String,System.Action{Raven.Client.Documents.Session.Loaders.IIncludeBuilder{``0}},System.Threading.CancellationToken)">
            <summary>
                Loads the specified entity with the specified id, 
                and includes other Documents and/or Counters.
            </summary>
            <param name="includes">
                An action that specifies which documents and\or counters 
                to include, by using the IIncludeBuilder interface.
            </param>
            <param name="token">The cancellation token.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentSession.LoadAsync``1(System.Collections.Generic.IEnumerable{System.String},System.Action{Raven.Client.Documents.Session.Loaders.IIncludeBuilder{``0}},System.Threading.CancellationToken)">
            <summary>
                Loads the specified entities with the specified ids, 
                and includes other Documents and/or Counters.
            </summary>
            <param name="includes">
                An action that specifies which documents and\or counters 
                to include, by using the IIncludeBuilder interface.
            </param>
            <param name="token">The cancellation token.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentSession.Query``1(System.String,System.String,System.Boolean)">
            <summary>
                Queries the specified index using Linq.
            </summary>
            <typeparam name="T">The result of the query</typeparam>
            <param name="indexName">Name of the index (mutually exclusive with collectionName)</param>
            <param name="collectionName">Name of the collection (mutually exclusive with indexName)</param>
            <param name="isMapReduce">Whether we are querying a map/reduce index (modify how we treat identifier properties)</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncDocumentSession.Query``2">
            <summary>
                Queries the index specified by <typeparamref name="TIndexCreator" /> using Linq.
            </summary>
            <typeparam name="T">The result of the query</typeparam>
            <typeparam name="TIndexCreator">The type of the index creator.</typeparam>
        </member>
        <member name="T:Raven.Client.Documents.Session.IAsyncDocumentSessionImpl">
            <summary>
            Interface for document session using async approaches
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.IAsyncSessionDocumentCounters">
            <summary>
                Advanced async counters session operations
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncSessionDocumentCounters.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            Returns all the counters for a specific document.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncSessionDocumentCounters.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the counter value by counter name.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAsyncSessionDocumentCounters.GetAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Returns the a dictionary of counter values by counter names
            <param name="counters">counters names</param>
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.IAsyncSessionDocumentTimeSeries">
            <summary>
                Advanced async TimeSeries session operations
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.IAsyncSessionDocumentTypedTimeSeries`1">
            <summary>
                Advanced async TimeSeries typed session operations
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.IAsyncSessionDocumentRollupTypedTimeSeries`1">
            <summary>
                Advanced async TimeSeries typed session operations
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.IAttachmentsSessionOperations">
            <summary>
                Attachments advanced synchronous session operations
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAttachmentsSessionOperations.Exists(System.String,System.String)">
            <summary>
            Check if attachment exists
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAttachmentsSessionOperations.Get(System.String,System.String)">
            <summary>
            Returns the attachment by the document id and attachment name.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAttachmentsSessionOperations.Get(System.Object,System.String)">
            <summary>
            Returns the attachment by the document id and attachment name.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAttachmentsSessionOperations.Get(System.Collections.Generic.IEnumerable{Raven.Client.Documents.Operations.Attachments.AttachmentRequest})">
            <summary>
            Returns Enumerator of KeyValuePairs of attachment name and stream.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAttachmentsSessionOperations.GetRevision(System.String,System.String,System.String)">
            <summary>
            Returns the revision attachment by the document id and attachment name.
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.IAttachmentsSessionOperationsAsync">
            <summary>
                Advanced async attachments session operations
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAttachmentsSessionOperationsAsync.ExistsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Check if attachment exists
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAttachmentsSessionOperationsAsync.GetAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the attachment by the document id and attachment name.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAttachmentsSessionOperationsAsync.GetAsync(System.Object,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the attachment by the document id and attachment name.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAttachmentsSessionOperationsAsync.GetAsync(System.Collections.Generic.IEnumerable{Raven.Client.Documents.Operations.Attachments.AttachmentRequest},System.Threading.CancellationToken)">
            <summary>
            Returns Enumerator of KeyValuePairs of attachment name and stream.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAttachmentsSessionOperationsAsync.GetRevisionAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the revision attachment by the document id and attachment name.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAttachmentsSessionOperationsBase.GetNames(System.Object)">
            <summary>
            Returns the attachments info of a document.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAttachmentsSessionOperationsBase.Store(System.String,System.String,System.IO.Stream,System.String)">
            <summary>
            Stores attachment to be sent in the session.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAttachmentsSessionOperationsBase.Store(System.Object,System.String,System.IO.Stream,System.String)">
            <summary>
            Stores attachment to be sent in the session.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAttachmentsSessionOperationsBase.Delete(System.String,System.String)">
            <summary>
                Marks the specified document's attachment for deletion. The attachment will be deleted when
                <see cref="M:Raven.Client.Documents.Session.IDocumentSession.SaveChanges" /> is called.
            </summary>
            <param name="documentId">the document which holds the attachment</param>
            <param name="name">the attachment name</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAttachmentsSessionOperationsBase.Delete(System.Object,System.String)">
            <summary>
                Marks the specified document's attachment for deletion. The attachment will be deleted when
                <see cref="M:Raven.Client.Documents.Session.IDocumentSession.SaveChanges" /> is called.
            </summary>
            <param name="entity">instance of entity of the document which holds the attachment</param>
            <param name="name">the attachment name</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAttachmentsSessionOperationsBase.Rename(System.Object,System.String,System.String)">
            <summary>
                Marks the specified document's attachment for rename. The attachment will be renamed when
                <see cref="M:Raven.Client.Documents.Session.IDocumentSession.SaveChanges" /> is called.
            </summary>
            <param name="entity">instance of entity of the document which holds the attachment</param>
            <param name="name">the attachment name</param>
            <param name="newName">the attachment new name</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAttachmentsSessionOperationsBase.Rename(System.String,System.String,System.String)">
            <summary>
                Marks the specified document's attachment for rename. The attachment will be renamed when
                <see cref="M:Raven.Client.Documents.Session.IDocumentSession.SaveChanges" /> is called.
            </summary>
            <param name="documentId">the document which holds the attachment</param>
            <param name="name">the attachment name</param>
            <param name="newName">the attachment new name</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAttachmentsSessionOperationsBase.Copy(System.Object,System.String,System.Object,System.String)">
            <summary>
            Copies specified source document attachment to destination document. The operation will be executed when <see cref="M:Raven.Client.Documents.Session.IDocumentSession.SaveChanges" /> is called.
            </summary>
            <param name="sourceEntity">the document which holds the attachment</param>
            <param name="sourceName">the attachment name</param>
            <param name="destinationEntity">the document to which the attachment will be copied</param>
            <param name="destinationName">the attachment name</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAttachmentsSessionOperationsBase.Copy(System.String,System.String,System.String,System.String)">
            <summary>
            Copies specified source document attachment to destination document. The operation will be executed when <see cref="M:Raven.Client.Documents.Session.IDocumentSession.SaveChanges" /> is called.
            </summary>
            <param name="sourceDocumentId">the document which holds the attachment</param>
            <param name="sourceName">the attachment name</param>
            <param name="destinationDocumentId">the document to which the attachment will be copied</param>
            <param name="destinationName">the attachment name</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAttachmentsSessionOperationsBase.Move(System.Object,System.String,System.Object,System.String)">
            <summary>
            Moves specified source document attachment to destination document. The operation will be executed when <see cref="M:Raven.Client.Documents.Session.IDocumentSession.SaveChanges" /> is called.
            </summary>
            <param name="sourceEntity">the document which holds the attachment</param>
            <param name="sourceName">the attachment name</param>
            <param name="destinationEntity">the document to which the attachment will be moved</param>
            <param name="destinationName">the attachment name</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IAttachmentsSessionOperationsBase.Move(System.String,System.String,System.String,System.String)">
            <summary>
            Moves specified source document attachment to destination document. The operation will be executed when <see cref="M:Raven.Client.Documents.Session.IDocumentSession.SaveChanges" /> is called.
            </summary>
            <param name="sourceDocumentId">the document which holds the attachment</param>
            <param name="sourceName">the attachment name</param>
            <param name="destinationDocumentId">the document to which the attachment will be moved</param>
            <param name="destinationName">the attachment name</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`1.CountLazily">
            <summary>
                Register the query as a lazy-count query in the session and return a lazy
                instance that will evaluate the query only when needed.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`1.ToList">
            <summary>
                Executed the query and returns the results.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`1.ToArray">
            <summary>
                Executed the query and returns the results.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`1.First">
            <summary>
                Returns first element or throws if sequence is empty.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`1.FirstOrDefault">
            <summary>
                Returns first element or default value for type if sequence is empty.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`1.Single">
            <summary>
                Returns first element or throws if sequence is empty or contains more than one element.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`1.SingleOrDefault">
            <summary>
                Returns first element or default value for given type if sequence is empty. Throws if sequence contains more than
                one element.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`1.Any">
            <summary>
                Checks if the given query matches any records
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`1.Count">
            <summary>
            Gets the total count of records for this query
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`1.LongCount">
            <summary>
            Gets the total count of records for this query as int64 
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`1.Lazily(System.Action{System.Collections.Generic.IEnumerable{`0}})">
            <summary>
                Register the query as a lazy query in the session and return a lazy
                instance that will evaluate the query only when needed.
                Also provide a function to execute when the value is evaluated
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IRawDocumentQuery`1.ExecuteAggregation">
            <summary>
               Execute raw query aggregated by facet
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.IDocumentQuery`1">
            <summary>
                A query against a Raven index
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.IDocumentQuery`1.IsDistinct">
            <summary>
                Whether we should apply distinct operation to the query on the server side
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQuery`1.GetQueryResult">
            <summary>
                Returns the query result. Accessing this property for the first time will execute the query.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQuery`1.SelectFields``1(System.String[])">
            <summary>
                Selects the specified fields directly from the index if the are stored. If the field is not stored in index, value
                will come from document directly.
            </summary>
            <typeparam name="TProjection">Type of the projection.</typeparam>
            <param name="fields">Array of fields to load.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQuery`1.SelectFields``1(Raven.Client.Documents.Queries.ProjectionBehavior,System.String[])">
            <summary>
                Selects the specified fields according to the given projection behavior.
            </summary>
            <typeparam name="TProjection">Type of the projection.</typeparam>
            <param name="projectionBehavior">Projection behavior to use.</param>
            <param name="fields">Array of fields to load.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQuery`1.SelectFields``1(Raven.Client.Documents.Queries.QueryData)">
            <summary>
                Selects the specified fields.
            </summary>
            <typeparam name="TProjection">Type of the projection.</typeparam>
            <param name="queryData">An object containing the fields to load, field projections and a From-Token alias name</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQuery`1.SelectFields``1">
            <summary>
                Selects the specified fields directly from the index if the are stored. If the field is not stored in index, value
                will come from document directly.
                <para>Array of fields will be taken from TProjection</para>
            </summary>
            <typeparam name="TProjection">Type of the projection from which fields will be taken.</typeparam>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQuery`1.SelectFields``1(Raven.Client.Documents.Queries.ProjectionBehavior)">
            <summary>
                Selects the specified fields according to the given projection behavior.
                <para>Array of fields will be taken from TProjection</para>
            </summary>
            <typeparam name="TProjection">Type of the projection from which fields will be taken.</typeparam>
            <param name="projectionBehavior">Projection behavior to use.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQuery`1.SelectTimeSeries``1(System.Func{Raven.Client.Documents.Queries.TimeSeries.ITimeSeriesQueryBuilder,``0})">
            <summary>
                Selects a Time Series Aggregation based on
                a time series query generated by an ITimeSeriesQueryBuilder.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQuery`1.OfType``1">
            <summary>
            Changes the return type of the query
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.IQueryBase`2.Conventions">
            <summary>
                Gets the document convention from the query session
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IQueryBase`2.AfterQueryExecuted(System.Action{Raven.Client.Documents.Queries.QueryResult})">
            <summary>
                Callback to get the results of the query
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IQueryBase`2.AfterStreamExecuted(System.Action{Sparrow.Json.BlittableJsonReaderObject})">
            <summary>
                Callback to get the results of the stream
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IQueryBase`2.BeforeQueryExecuted(System.Action{Raven.Client.Documents.Queries.IndexQuery})">
            <summary>
                Allows you to modify the index query before it is sent to the server
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IQueryBase`2.InvokeAfterQueryExecuted(Raven.Client.Documents.Queries.QueryResult)">
            <summary>
                Called externally to raise the after query executed callback
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IQueryBase`2.InvokeAfterStreamExecuted(Sparrow.Json.BlittableJsonReaderObject)">
            <summary>
                Called externally to raise the after query executed callback
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IQueryBase`2.NoCaching">
            <summary>
                Disables caching for query results.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IQueryBase`2.NoTracking">
            <summary>
                Disables tracking for queried entities by Raven's Unit of Work.
                Usage of this option will prevent holding query results in memory.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IQueryBase`2.Timings(Raven.Client.Documents.Queries.Timings.QueryTimings@)">
            <summary>
                Enables calculation of timings for various parts of a query (Lucene search, loading documents, transforming
                results). Default: false
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IQueryBase`2.Skip(System.Int32)">
            <summary>
                Skips the specified count.
            </summary>
            <param name="count">Number of items to skip.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IQueryBase`2.Statistics(Raven.Client.Documents.Session.QueryStatistics@)">
            <summary>
                Provide statistics about the query, such as total count of matching records
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IQueryBase`2.Take(System.Int32)">
            <summary>
                Takes the specified count.
            </summary>
            <param name="count">Maximum number of items to take.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IQueryBase`2.UsingDefaultOperator(Raven.Client.Documents.Queries.QueryOperator)">
            <summary>
                Select the default operator to use for this query
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IQueryBase`2.WaitForNonStaleResults(System.Nullable{System.TimeSpan})">
            <summary>
              Instruct the query to wait for non stale results.
              This shouldn't be used outside of unit tests unless you are well aware of the implications
            </summary>
            <param name = "waitTimeout">Maximum time to wait for index query results to become non-stale before exception is thrown. Default: 15 seconds.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IQueryBase`2.GetIndexQuery">
            <summary>
                Create the index query object for this query
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IQueryBase`2.AddParameter(System.String,System.Object)">
            <summary>
            Add a named parameter to the query
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.Not">
            <summary>
                Negate the next operation
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.AndAlso">
            <summary>
                Add an AND to the query
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.AndAlso(System.Boolean)">
            <summary>
                Wraps previous query with clauses and add an AND operation to the given query
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.CloseSubclause">
            <summary>
                Simplified method for closing a clause within the query
            </summary>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.ContainsAll(System.String,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
                Performs a query matching ALL of the provided values against the given field (AND)
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.ContainsAll``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
                Performs a query matching ALL of the provided values against the given field (AND)
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.ContainsAll``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
                Performs a query matching ALL of the provided values against the given field (AND)
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.ContainsAny(System.String,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
                Performs a query matching ANY of the provided values against the given field (OR)
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.ContainsAny``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
                Performs a query matching ANY of the provided values against the given field (OR)
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.ContainsAny``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
                Performs a query matching ANY of the provided values against the given field (OR)
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.NegateNext">
            <summary>
                Negate the next operation
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.OpenSubclause">
            <summary>
                Simplified method for opening a new clause within the query
            </summary>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.OrElse">
            <summary>
                Add an OR to the query
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.Search(System.String,System.String,Raven.Client.Documents.Queries.SearchOperator)">
            <summary>
                Perform a search for documents which fields that match the searchTerms.
                If there is more than a single term, each of them will be checked independently.
            </summary>
            <param name="fieldName">Marks a field in which terms should be looked for</param>
            <param name="searchTerms">
                Space separated terms e.g. 'John Adam' means that we will look in selected field for 'John'
                or 'Adam'.
            </param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.Search``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,Raven.Client.Documents.Queries.SearchOperator)">
            <summary>
                Perform a search for documents which fields that match the searchTerms.
                If there is more than a single term, each of them will be checked independently.
            </summary>
            <param name="propertySelector">Expression marking a field in which terms should be looked for</param>
            <param name="searchTerms">
                Space separated terms e.g. 'John Adam' means that we will look in selected field for 'John'
                or 'Adam'.
            </param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.Where(System.Func{`0,System.Boolean})">
            <summary>
                This function exists solely to forbid in memory where clause on IDocumentQuery, because
                that is nearly always a mistake.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereLucene(System.String,System.String)">
            <summary>
                Filter the results from the index using the specified where clause.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="whereClause">Lucene-syntax based query predicate.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereLucene(System.String,System.String,System.Boolean)">
            <summary>
                Filter the results from the index using the specified where clause.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="whereClause">Lucene-syntax based query predicate.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereBetween(System.String,System.Object,System.Object,System.Boolean)">
            <summary>
                Matches fields where the value is between the specified start and end, inclusive 
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereBetween``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,``0,System.Boolean)">
            <summary>
                Matches fields where the value is between the specified start and end, inclusive
            </summary>
            <param name="propertySelector">Property selector for the field.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereEndsWith(System.String,System.Object)">
            <summary>
                Matches fields which ends with the specified value.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereEndsWith(System.String,System.Object,System.Boolean)">
            <summary>
                Matches fields which ends with the specified value.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereEndsWith``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
                Matches fields which ends with the specified value.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereEndsWith``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Boolean)">
            <summary>
                Matches fields which ends with the specified value.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereEquals(System.String,System.Object,System.Boolean)">
            <summary>
                Matches value
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereEquals(System.String,Raven.Client.Documents.Session.MethodCall,System.Boolean)">
            <summary>
                Matches the evaluated expression
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereEquals``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Boolean)">
            <summary>
                Matches value
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereEquals``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},Raven.Client.Documents.Session.MethodCall,System.Boolean)">
            <summary>
                Matches value
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereEquals(Raven.Client.Documents.Session.WhereParams)">
            <summary>
                Matches value
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereNotEquals(System.String,System.Object,System.Boolean)">
            <summary>
                Not matches value
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereNotEquals(System.String,Raven.Client.Documents.Session.MethodCall,System.Boolean)">
            <summary>
                Not matches the evaluated expression
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereNotEquals``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Boolean)">
            <summary>
                Not matches value
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereNotEquals``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},Raven.Client.Documents.Session.MethodCall,System.Boolean)">
            <summary>
                Matches value
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereNotEquals(Raven.Client.Documents.Session.WhereParams)">
            <summary>
                Not matches value
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereGreaterThan(System.String,System.Object,System.Boolean)">
            <summary>
                Matches fields where the value is greater than the specified value
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereGreaterThan``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Boolean)">
            <summary>
                Matches fields where the value is greater than the specified value
            </summary>
            <param name="propertySelector">Property selector for the field.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereGreaterThanOrEqual(System.String,System.Object,System.Boolean)">
            <summary>
                Matches fields where the value is greater than or equal to the specified value
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereGreaterThanOrEqual``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Boolean)">
            <summary>
                Matches fields where the value is greater than or equal to the specified value
            </summary>
            <param name="propertySelector">Property selector for the field.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereIn(System.String,System.Collections.Generic.IEnumerable{System.Object},System.Boolean)">
            <summary>
                Check that the field has one of the specified values
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereIn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <summary>
                Check that the field has one of the specified values
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereLessThan(System.String,System.Object,System.Boolean)">
            <summary>
                Matches fields where the value is less than the specified value
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereLessThan``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Boolean)">
            <summary>
                Matches fields where the value is less than the specified value
            </summary>
            <param name="propertySelector">Property selector for the field.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereLessThanOrEqual(System.String,System.Object,System.Boolean)">
            <summary>
                Matches fields where the value is less than or equal to the specified value
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereLessThanOrEqual``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Boolean)">
            <summary>
                Matches fields where the value is less than or equal to the specified value
            </summary>
            <param name="propertySelector">Property selector for the field.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereStartsWith(System.String,System.Object)">
            <summary>
                Matches fields which starts with the specified value.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereStartsWith(System.String,System.Object,System.Boolean)">
            <summary>
                Matches fields which starts with the specified value.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereStartsWith``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
                Matches fields which starts with the specified value.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereStartsWith``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Boolean)">
            <summary>
                Matches fields which starts with the specified value.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereExists``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
                Check if the given field exists
            </summary>
            <param name="propertySelector">Property selector for the field.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereExists(System.String)">
            <summary>
                Check if the given field exists
            </summary>
            <param name="fieldName">Name of the field.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereRegex``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
            <summary>
            Checks value of a given field against supplied regular expression pattern
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WhereRegex(System.String,System.String)">
            <summary>
            Checks value of a given field against supplied regular expression pattern
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WithinRadiusOf``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double,System.Nullable{Raven.Client.Documents.Indexes.Spatial.SpatialUnits},System.Double)">
            <summary>
                Filter matches to be inside the specified radius
            </summary>
            <param name="propertySelector">Property selector for the field.</param>
            <param name="radius">Radius (measured in units passed to radiusUnits parameter) in which matches should be found.</param>
            <param name="latitude">Latitude pointing to a circle center.</param>
            <param name="longitude">Longitude pointing to a circle center.</param>
            <param name="radiusUnits">Units that will be used to measure distances (Kilometers, Miles).</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.WithinRadiusOf(System.String,System.Double,System.Double,System.Double,System.Nullable{Raven.Client.Documents.Indexes.Spatial.SpatialUnits},System.Double)">
            <summary>
                Filter matches to be inside the specified radius
            </summary>
            <param name="fieldName">Spatial field name.</param>
            <param name="radius">Radius (measured in units passed to radiusUnits parameter) in which matches should be found.</param>
            <param name="latitude">Latitude pointing to a circle center.</param>
            <param name="longitude">Longitude pointing to a circle center.</param>
            <param name="radiusUnits">Units that will be used to measure distances (Kilometers, Miles).</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.RelatesToShape``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,Raven.Client.Documents.Indexes.Spatial.SpatialRelation,System.Double)">
            <summary>
                Filter matches based on a given shape - only documents with the shape defined in fieldName that
                have a relation rel with the given shapeWkt will be returned
            </summary>
            <param name="propertySelector">Property selector for the field.</param>
            <param name="shapeWkt">WKT formatted shape</param>
            <param name="relation">Spatial relation to check (Within, Contains, Disjoint, Intersects, Nearby)</param>
            <param name="distanceErrorPct">The allowed error percentage. By default: 0.025</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.RelatesToShape``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,Raven.Client.Documents.Indexes.Spatial.SpatialRelation,Raven.Client.Documents.Indexes.Spatial.SpatialUnits,System.Double)">
            <summary>
                Filter matches based on a given shape - only documents with the shape defined in fieldName that
                have a relation rel with the given shapeWkt will be returned
            </summary>
            <param name="propertySelector">Property selector for the field.</param>
            <param name="shapeWkt">WKT formatted shape</param>
            <param name="relation">Spatial relation to check (Within, Contains, Disjoint, Intersects, Nearby)</param>
            <param name="units">Units to be used</param>
            <param name="distanceErrorPct">The allowed error percentage. By default: 0.025</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.RelatesToShape(System.String,System.String,Raven.Client.Documents.Indexes.Spatial.SpatialRelation,System.Double)">
            <summary>
                Filter matches based on a given shape - only documents with the shape defined in fieldName that
                have a relation rel with the given shapeWkt will be returned
            </summary>
            <param name="fieldName">Spatial field name.</param>
            <param name="shapeWkt">WKT formatted shape</param>
            <param name="relation">Spatial relation to check (Within, Contains, Disjoint, Intersects, Nearby)</param>
            <param name="distanceErrorPct">The allowed error percentage. By default: 0.025</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.RelatesToShape(System.String,System.String,Raven.Client.Documents.Indexes.Spatial.SpatialRelation,Raven.Client.Documents.Indexes.Spatial.SpatialUnits,System.Double)">
            <summary>
                Filter matches based on a given shape - only documents with the shape defined in fieldName that
                have a relation rel with the given shapeWkt will be returned
            </summary>
            <param name="fieldName">Spatial field name.</param>
            <param name="shapeWkt">WKT formatted shape</param>
            <param name="relation">Spatial relation to check (Within, Contains, Disjoint, Intersects, Nearby)</param>
            <param name="units">Units to be used</param>
            <param name="distanceErrorPct">The allowed error percentage. By default: 0.025</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.Spatial(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Func{Raven.Client.Documents.Queries.Spatial.SpatialCriteriaFactory,Raven.Client.Documents.Queries.Spatial.SpatialCriteria})">
            <summary>
                Ability to use one factory to determine spatial shape that will be used in query.
            </summary>
            <param name="path">Spatial field name.</param>
            <param name="clause">function with spatial criteria factory</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IFilterDocumentQueryBase`2.Spatial(System.String,System.Func{Raven.Client.Documents.Queries.Spatial.SpatialCriteriaFactory,Raven.Client.Documents.Queries.Spatial.SpatialCriteria})">
            <summary>
                Ability to use one factory to determine spatial shape that will be used in query.
            </summary>
            <param name="fieldName">Spatial field name.</param>
            <param name="clause">function with spatial criteria factory</param>
        </member>
        <member name="T:Raven.Client.Documents.Session.IDocumentQueryBase`2">
            <summary>
                A query against a Raven index
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.AddOrder(System.String,System.Boolean,Raven.Client.Documents.Session.OrderingType)">
            <summary>
                Adds an ordering for a specific field to the query
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="descending">if set to <c>true</c> [descending].</param>
            <param name="ordering">ordering type.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.AddOrder``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean,Raven.Client.Documents.Session.OrderingType)">
            <summary>
                Adds an ordering for a specific field to the query
            </summary>
            <param name="propertySelector">Property selector for the field.</param>
            <param name="descending">if set to <c>true</c> [descending].</param>
            <param name="ordering">Ordering type.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.Boost(System.Decimal)">
            <summary>
                Specifies a boost weight to the last where clause.
                The higher the boost factor, the more relevant the term will be.
            </summary>
            <param name="boost">
                boosting factor where 1.0 is default, less than 1.0 is lower weight, greater than 1.0 is higher
                weight
            </param>
            <returns></returns>
            <remarks>
                http://lucene.apache.org/java/2_4_0/queryparsersyntax.html#Boosting%20a%20Term
            </remarks>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.Count(System.Func{`0,System.Boolean})">
            <summary>
                This function exists solely to forbid in memory where clause on IDocumentQuery, because
                that is nearly always a mistake.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.Distinct">
            <summary>
                Apply distinct operation to this query
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.IncludeExplanations(Raven.Client.Documents.Queries.Explanation.Explanations@)">
            <summary>
                Adds explanations of scores calculated for queried documents to the query result
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.IncludeExplanations(Raven.Client.Documents.Queries.Explanation.ExplanationOptions,Raven.Client.Documents.Queries.Explanation.Explanations@)">
            <summary>
                Adds explanations of scores calculated for queried documents to the query result
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.Fuzzy(System.Decimal)">
            <summary>
                Specifies a fuzziness factor to the single word term in the last where clause
            </summary>
            <param name="fuzzy">0.0 to 1.0 where 1.0 means closer match</param>
            <returns></returns>
            <remarks>
                http://lucene.apache.org/java/2_4_0/queryparsersyntax.html#Fuzzy%20Searches
            </remarks>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.Include(System.String)">
            <summary>
                Includes the specified path in the query, loading the document specified in that path
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.Include(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
                Includes the specified path in the query, loading the document specified in that path
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.Intersect">
            <summary>
                Partition the query so we can intersect different parts of the query
                across different index entries.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderBy(System.String,Raven.Client.Documents.Session.OrderingType)">
            <summary>
                Order the results by the specified fields
                The field is the name of the field to sort, defaulting to sorting by ascending.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
                Order the results by the specified fields
                The field is the name of the field to sort, defaulting to sorting by ascending.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},Raven.Client.Documents.Session.OrderingType)">
            <summary>
                Order the results by the specified fields
                The field is the name of the field to sort, defaulting to sorting by ascending.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}}[])">
            <summary>
                Order the results by the specified fields
                The field is the name of the field to sort, defaulting to sorting by ascending.
            </summary>
            <param name="propertySelectors">Property selectors for the fields.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderByDescending(System.String,Raven.Client.Documents.Session.OrderingType)">
            <summary>
                Order the results by the specified fields
                The field is the name of the field to sort, defaulting to sorting by descending.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderByDescending``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
                Order the results by the specified fields
                The field is the name of the field to sort, defaulting to sorting by ascending.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderByDescending``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},Raven.Client.Documents.Session.OrderingType)">
            <summary>
                Order the results by the specified fields
                The field is the name of the field to sort, defaulting to sorting by ascending.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderByDescending``1(System.Linq.Expressions.Expression{System.Func{`0,``0}}[])">
            <summary>
                Order the results by the specified fields
                The field is the name of the field to sort, defaulting to sorting by descending.
            </summary>
            <param name="propertySelectors">Property selectors for the fields.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderByScore">
            <summary>
                Adds an ordering by score for a specific field to the query
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderByScoreDescending">
            <summary>
                Adds an ordering by score for a specific field to the query
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.Proximity(System.Int32)">
            <summary>
                Specifies a proximity distance for the phrase in the last where clause
            </summary>
            <param name="proximity">number of words within</param>
            <returns></returns>
            <remarks>
                http://lucene.apache.org/java/2_4_0/queryparsersyntax.html#Proximity%20Searches
            </remarks>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.RandomOrdering">
            <summary>
                Order the search results randomly
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.RandomOrdering(System.String)">
            <summary>
                Order the search results randomly using the specified seed
                this is useful if you want to have repeatable random queries
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderByDistance(Raven.Client.Documents.Queries.Spatial.DynamicSpatialField,System.Double,System.Double)">
            <summary>
            Sorts the query results by distance.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderByDistance(System.Func{Raven.Client.Documents.Queries.Spatial.DynamicSpatialFieldFactory{`0},Raven.Client.Documents.Queries.Spatial.DynamicSpatialField},System.Double,System.Double)">
            <summary>
            Sorts the query results by distance.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderByDistance(Raven.Client.Documents.Queries.Spatial.DynamicSpatialField,System.String)">
            <summary>
            Sorts the query results by distance.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderByDistance(System.Func{Raven.Client.Documents.Queries.Spatial.DynamicSpatialFieldFactory{`0},Raven.Client.Documents.Queries.Spatial.DynamicSpatialField},System.String)">
            <summary>
            Sorts the query results by distance.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderByDistance(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Double,System.Double)">
            <summary>
            Sorts the query results by distance.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderByDistance(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Double,System.Double,System.Double)">
            <summary>
            Sorts the query results by distance.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderByDistance(System.String,System.Double,System.Double)">
            <summary>
            Sorts the query results by distance.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderByDistance(System.String,System.Double,System.Double,System.Double)">
            <summary>
            Sorts the query results by distance.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderByDistance(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)">
            <summary>
            Sorts the query results by distance.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderByDistance(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Double)">
            <summary>
            Sorts the query results by distance.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderByDistance(System.String,System.String)">
            <summary>
            Sorts the query results by distance.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderByDistance(System.String,System.String,System.Double)">
            <summary>
            Sorts the query results by distance.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderByDistanceDescending(Raven.Client.Documents.Queries.Spatial.DynamicSpatialField,System.Double,System.Double)">
            <summary>
            Sorts the query results by distance.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderByDistanceDescending(System.Func{Raven.Client.Documents.Queries.Spatial.DynamicSpatialFieldFactory{`0},Raven.Client.Documents.Queries.Spatial.DynamicSpatialField},System.Double,System.Double)">
            <summary>
            Sorts the query results by distance.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderByDistanceDescending(Raven.Client.Documents.Queries.Spatial.DynamicSpatialField,System.String)">
            <summary>
            Sorts the query results by distance.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderByDistanceDescending(System.Func{Raven.Client.Documents.Queries.Spatial.DynamicSpatialFieldFactory{`0},Raven.Client.Documents.Queries.Spatial.DynamicSpatialField},System.String)">
            <summary>
            Sorts the query results by distance.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderByDistanceDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Double,System.Double)">
            <summary>
            Sorts the query results by distance.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderByDistanceDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Double,System.Double,System.Double)">
            <summary>
            Sorts the query results by distance.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderByDistanceDescending(System.String,System.Double,System.Double)">
            <summary>
            Sorts the query results by distance.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderByDistanceDescending(System.String,System.Double,System.Double,System.Double)">
            <summary>
            Sorts the query results by distance.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderByDistanceDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)">
            <summary>
            Sorts the query results by distance.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderByDistanceDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Double)">
            <summary>
            Sorts the query results by distance.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderByDistanceDescending(System.String,System.String)">
            <summary>
            Sorts the query results by distance.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryBase`2.OrderByDistanceDescending(System.String,System.String,System.Double)">
            <summary>
            Sorts the query results by distance.
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.IDocumentQueryCustomization">
            <summary>
                Customize the document query
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.IDocumentQueryCustomization.QueryOperation">
            <summary>
            Get the raw query operation that will be sent to the server
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryCustomization.BeforeQueryExecuted(System.Action{Raven.Client.Documents.Queries.IndexQuery})">
            <summary>
                Allow you to modify the index query before it is executed
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryCustomization.AfterQueryExecuted(System.Action{Raven.Client.Documents.Queries.QueryResult})">
            <summary>
                Callback to get the results of the query
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryCustomization.AfterStreamExecuted(System.Action{Sparrow.Json.BlittableJsonReaderObject})">
            <summary>
                Callback to get the results of the stream
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryCustomization.NoCaching">
            <summary>
                Disables caching for query results.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryCustomization.NoTracking">
            <summary>
                Disables tracking for queried entities by Raven's Unit of Work.
                Usage of this option will prevent holding query results in memory.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryCustomization.RandomOrdering">
            <summary>
                Order the search results randomly
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryCustomization.RandomOrdering(System.String)">
            <summary>
                Order the search results randomly using the specified seed
                this is useful if you want to have repeatable random queries
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryCustomization.Timings(Raven.Client.Documents.Queries.Timings.QueryTimings@)">
            <summary>
                Enables calculation of timings for various parts of a query (Lucene search, loading documents, transforming
                results). Default: false
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentQueryCustomization.WaitForNonStaleResults(System.Nullable{System.TimeSpan})">
            <summary>
              Instruct the query to wait for non stale results.
              This shouldn't be used outside of unit tests unless you are well aware of the implications
            </summary>
            <param name = "waitTimeout">Maximum time to wait for index query results to become non-stale before exception is thrown. Default: 15 seconds.</param>
        </member>
        <member name="T:Raven.Client.Documents.Session.IDocumentSession">
            <summary>
            Provides an access to DocumentSessionCounters API.
            </summary>
            <summary>
                Interface for document session
            </summary>
            <summary>
                Interface for document session
            </summary>
            <summary>
                Interface for document session
            </summary>
            <summary>
                Interface for document session
            </summary>
            <summary>
            Provides an access to DocumentSession TimeSeries API.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.IDocumentSession.Advanced">
            <summary>
                Get the accessor for advanced operations
            </summary>
            <remarks>
                Those operations are rarely needed, and have been moved to a separate
                property to avoid cluttering the API
            </remarks>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentSession.Delete``1(``0)">
            <summary>
                Marks the specified entity for deletion. The entity will be deleted when
                <see cref="M:Raven.Client.Documents.Session.IDocumentSession.SaveChanges" /> is called.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity">instance of entity to delete</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentSession.Delete(System.String)">
            <summary>
                Marks the specified entity for deletion. The entity will be deleted when
                <see cref="M:Raven.Client.Documents.Session.IDocumentSession.SaveChanges" /> is called.
                <para>WARNING: This method will not call beforeDelete listener!</para>
            </summary>
            <param name="id">entity Id</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentSession.Delete(System.String,System.String)">
            <summary>
                Marks the specified entity for deletion. The entity will be deleted when
                <see cref="M:Raven.Client.Documents.Session.IDocumentSession.SaveChanges" /> is called.
                <para>WARNING: This method will not call beforeDelete listener!</para>
            </summary>
            <param name="id">entity Id</param>
            <param name="expectedChangeVector">Expected change vector of a document to delete.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentSession.SaveChanges">
            <summary>
                Saves all the pending changes to the server.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentSession.Store(System.Object,System.String,System.String)">
            <summary>
                Stores entity in session with given id and forces concurrency check with given change-vector.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentSession.Store(System.Object)">
            <summary>
                Stores entity in session, extracts Id from entity using Conventions or generates new one if it is not available.
                <para>Forces concurrency check if the Id is not available during extraction.</para>
            </summary>
            <param name="entity">entity to store.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentSession.Store(System.Object,System.String)">
            <summary>
                Stores the specified dynamic entity, under the specified id.
            </summary>
            <param name="entity">entity to store.</param>
            <param name="id">Id to store this entity under. If other entity exists with the same id it will be overwritten.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentSession.Include(System.String)">
            <summary>
                Begin a load while including the specified path
            </summary>
            <param name="path">Path in documents in which server should look for a 'referenced' documents.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentSession.Include``1(System.Linq.Expressions.Expression{System.Func{``0,System.String}})">
            <summary>
                Begin a load while including the specified path
            </summary>
            <param name="path">Path in documents in which server should look for a 'referenced' documents.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentSession.Include``1(System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
                Begin a load while including the specified path
            </summary>
            <param name="path">Path in documents in which server should look for a 'referenced' documents.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentSession.Include``2(System.Linq.Expressions.Expression{System.Func{``0,System.String}})">
            <summary>
                Begin a load while including the specified path
            </summary>
            <param name="path">Path in documents in which server should look for a 'referenced' documents.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentSession.Include``2(System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
                Begin a load while including the specified path
            </summary>
            <param name="path">Path in documents in which server should look for a 'referenced' documents.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentSession.Load``1(System.String)">
            <summary>
                Loads the specified entity with the specified id.
            </summary>
            <param name="id">Identifier of a entity that will be loaded.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentSession.Load``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Loads the specified entities with the specified ids.
            </summary>
            <param name="ids">Enumerable of Ids that should be loaded.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentSession.Load``1(System.String,System.Action{Raven.Client.Documents.Session.Loaders.IIncludeBuilder{``0}})">
            <summary>
                Loads the specified entity with the specified id, 
                and includes other Documents and/or Counters.
            </summary>
            <param name="includes">
                An action that specifies which documents and\or counters 
                to include, by using the IIncludeBuilder interface.
            </param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentSession.Load``1(System.Collections.Generic.IEnumerable{System.String},System.Action{Raven.Client.Documents.Session.Loaders.IIncludeBuilder{``0}})">
            <summary>
                Loads the specified entities with the specified ids, 
                and includes other Documents and/or Counters.
            </summary>
            <param name="includes">
                An action that specifies which documents and\or counters 
                to include, by using the IIncludeBuilder interface.
            </param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentSession.Query``1(System.String,System.String,System.Boolean)">
            <summary>
                Queries the specified index using Linq.
            </summary>
            <typeparam name="T">The result of the query</typeparam>
            <param name="indexName">Name of the index (mutually exclusive with collectionName)</param>
            <param name="collectionName">Name of the collection (mutually exclusive with indexName)</param>
            <param name="isMapReduce">Whether we are querying a map/reduce index (modify how we treat identifier properties)</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IDocumentSession.Query``2">
            <summary>
                Queries the index specified by <typeparamref name="TIndexCreator" /> using Linq.
            </summary>
            <typeparam name="T">The result of the query</typeparam>
            <typeparam name="TIndexCreator">The type of the index creator.</typeparam>
        </member>
        <member name="T:Raven.Client.Documents.Session.IDocumentSessionImpl">
            <summary>
            Interface for document session which holds the internal operations
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations">
            <summary>
            Abstract implementation for in memory session operations
            </summary>
            <summary>
            Abstract implementation for in memory session operations
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.Id">
            <summary>
            The session id
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations._knownMissingIds">
            <summary>
            Entities whose id we already know do not exists, because they are a missing include, or a missing load, etc.
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.DocumentsById">
            <summary>
            Translate between an ID and its associated entity
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.IncludedDocumentsById">
            <summary>
            Translate between an ID and its associated entity
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.IncludeRevisionsByChangeVector">
            <summary>
            Translate between an CV and its associated entity
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.IncludeRevisionsIdByDateTimeBefore">
            <summary>
            Translate between an ID and its associated entity
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.DocumentsByEntity">
            <summary>
            hold the data required to manage the data for RavenDB's Unit of Work
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.DeletedEntities">
            <summary>
            The entities waiting to be deleted
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.CountersByDocId">
            <summary>
            hold the data required to manage Counters tracking for RavenDB's Unit of Work
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.DocumentStore">
            <summary>
             The document store associated with this session
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.NumberOfRequests">
            <summary>
            Gets the number of requests for this session
            </summary>
            <value></value>
        </member>
        <member name="P:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.NumberOfEntitiesInUnitOfWork">
            <summary>
            Gets the number of entities held in memory to manage Unit of Work
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.StoreIdentifier">
            <summary>
            Gets the store identifier for this session.
            The store identifier is the identifier for the particular RavenDB instance.
            </summary>
            <value>The store identifier.</value>
        </member>
        <member name="P:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.Conventions">
            <summary>
            Gets the conventions used by this session
            </summary>
            <value>The conventions.</value>
            <remarks>
            This instance is shared among all sessions, changes to the <see cref="T:Raven.Client.Documents.Conventions.DocumentConventions"/> should be done
            via the <see cref="T:Raven.Client.Documents.IDocumentStore"/> instance, not on a single session.
            </remarks>
        </member>
        <member name="P:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.MaxNumberOfRequestsPerSession">
            <summary>
            Gets or sets the max number of requests per session.
            If the <see cref="P:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.NumberOfRequests"/> rise above <see cref="P:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.MaxNumberOfRequestsPerSession"/>, an exception will be thrown.
            </summary>
            <value>The max number of requests per session.</value>
        </member>
        <member name="P:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.UseOptimisticConcurrency">
            <summary>
            Gets or sets a value indicating whether the session should use optimistic concurrency.
            When set to <c>true</c>, a check is made so that a change made behind the session back would fail
            and raise <see cref="T:Raven.Client.Exceptions.ConcurrencyException"/>.
            </summary>
            <value></value>
        </member>
        <member name="M:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.#ctor(Raven.Client.Documents.DocumentStoreBase,System.Guid,Raven.Client.Documents.Session.SessionOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations"/> class.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.GetMetadataFor``1(``0)">
            <summary>
            Gets the metadata for the specified entity.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.GetCountersFor``1(``0)">
            <summary>
            Gets all counter names for the specified entity.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.GetTimeSeriesFor``1(``0)">
            <summary>
            Gets all time series names for the specified entity.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.GetChangeVectorFor``1(``0)">
            <summary>
            Gets the Change Vector for the specified entity.
            If the entity is transient, it will load the change vector from the store
            and associate the current state of the entity with the change vector from the server.
            </summary>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.IsLoaded(System.String)">
            <summary>
            Returns whether a document with the specified id is loaded in the
            current session
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.IsDeleted(System.String)">
            <summary>
            Returns whether a document with the specified id is deleted
            or known to be missing
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.GetDocumentId(System.Object)">
            <summary>
            Gets the document id.
            </summary>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.TrackEntity``1(Raven.Client.Documents.Session.DocumentInfo)">
            <summary>
            Tracks the entity inside the unit of work
            </summary>
            <typeparam name="T"></typeparam>
            <param name="documentFound">The document found.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.TrackEntity``1(System.String,Sparrow.Json.BlittableJsonReaderObject,Sparrow.Json.BlittableJsonReaderObject,System.Boolean)">
            <summary>
            Tracks the entity.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="id">The document id.</param>
            <param name="document">The document.</param>
            <param name="metadata">The metadata.</param>'
            <param name="noTracking"></param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.TrackEntity(System.Type,Raven.Client.Documents.Session.DocumentInfo)">
            <summary>
            Tracks the entity inside the unit of work
            </summary>
            <param name="entityType"></param>
            <param name="documentFound">The document found.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.TrackEntity(System.Type,System.String,Sparrow.Json.BlittableJsonReaderObject,Sparrow.Json.BlittableJsonReaderObject,System.Boolean)">
            <summary>
            Tracks the entity.
            </summary>
            <param name="entityType">The entity type.</param>
            <param name="id">The document ID.</param>
            <param name="document">The document.</param>
            <param name="metadata">The metadata.</param>
            <param name="noTracking">Entity tracking is enabled if true, disabled otherwise.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.GetDefaultValue(System.Type)">
            <summary>
            Gets the default value of the specified type.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.Delete``1(``0)">
            <summary>
            Marks the specified entity for deletion. The entity will be deleted when SaveChanges is called.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.Delete(System.String)">
            <summary>
            Marks the specified entity for deletion. The entity will be deleted when <see cref="M:Raven.Client.Documents.Session.IDocumentSession.SaveChanges"/> is called.
            WARNING: This method will not call beforeDelete listener!
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.Store(System.Object)">
            <summary>
            Stores the specified entity in the session. The entity will be saved when SaveChanges is called.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.Store(System.Object,System.String)">
            <summary>
            Stores the specified entity in the session, explicitly specifying its Id. The entity will be saved when SaveChanges is called.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.Store(System.Object,System.String,System.String)">
            <summary>
            Stores the specified entity in the session, explicitly specifying its Id. The entity will be saved when SaveChanges is called.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.HasChanges">
            <summary>
            Gets a value indicating whether any of the entities tracked by the session has changes.
            </summary>
            <value></value>
        </member>
        <member name="M:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.HasChanged(System.Object)">
            <summary>
            Determines whether the specified entity has changed.
            </summary>
            <param name="entity">The entity.</param>
            <returns>
            	<c>true</c> if the specified entity has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.IgnoreChangesFor(System.Object)">
            <summary>
            Mark the entity as one that should be ignore for change tracking purposes,
            it still takes part in the session, but is ignored for SaveChanges.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.Evict``1(``0)">
            <summary>
            Evicts the specified entity from the session.
            Remove the entity from the delete queue and stops tracking changes for this entity.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.Clear">
            <summary>
            Clears this instance.
            Remove all entities from the delete queue and stops tracking changes for all entities.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.Defer(Raven.Client.Documents.Commands.Batches.ICommandData,Raven.Client.Documents.Commands.Batches.ICommandData[])">
            <summary>
                Defer commands to be executed on SaveChanges()
            </summary>
            <param name="command">Command to be executed</param>
            <param name="commands">Array of commands to be executed.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.Defer(Raven.Client.Documents.Commands.Batches.ICommandData[])">
            <summary>
            Defer commands to be executed on SaveChanges()
            </summary>
            <param name="commands">The commands to be executed</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.InMemoryDocumentSessionOperations.SaveChangesData">
            <summary>
            Data for a batch command to the server
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.IRavenQueryInspector">
            <summary>
            Provide access to the underlying <see cref="T:Raven.Client.Documents.Session.IDocumentQuery`1"/>
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.IRavenQueryInspector.Session">
            <summary>
            The query session
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IRavenQueryInspector.GetIndexQuery(System.Boolean)">
            <summary>
            Get the index query for this query
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.IRevisionsSessionOperations">
            <summary>
            Revisions advanced synchronous session operations
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IRevisionsSessionOperations.GetFor``1(System.String,System.Int32,System.Int32)">
            <summary>
            Returns all previous document revisions for specified document (with paging) ordered by most recent revision first.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IRevisionsSessionOperations.GetMetadataFor(System.String,System.Int32,System.Int32)">
            <summary>
            Returns all previous document revisions metadata for specified document (with paging).
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IRevisionsSessionOperations.Get``1(System.String)">
            <summary>
            Returns a document revision by change vector.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IRevisionsSessionOperations.Get``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns document revisions by change vectors.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IRevisionsSessionOperations.Get``1(System.String,System.DateTime)">
            <summary>
            Returns the first revision for this document that happens before or at
            the specified date
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IRevisionsSessionOperations.ForceRevisionCreationFor``1(``0,Raven.Client.Documents.Session.ForceRevisionStrategy)">
            <summary>
            Make the session create a revision for the specified entity.
            Can be used with tracked entities only.
            Revision will be created Even If:
               1. Revisions configuration is Not set for the collection
               2. Document was Not modified
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IRevisionsSessionOperations.ForceRevisionCreationFor(System.String,Raven.Client.Documents.Session.ForceRevisionStrategy)">
            <summary>
            Make the session create a revision for the specified document id.
            Revision will be created Even If:
               1. Revisions configuration is Not set for the collection
               2. Document was Not modified
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IRevisionsSessionOperations.GetCountFor(System.String)">
            <summary>
            Returns the number of revisions for specified document.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.IRevisionsSessionOperations.Lazily">
            <summary>
            Access the lazy revisions operations 
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.ILazyRevisionsOperations">
            <summary>
            Revisions advanced synchronous Lazy session operations
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.ILazyRevisionsOperations.GetFor``1(System.String,System.Int32,System.Int32)">
            <summary>
            Returns all previous document revisions for specified document (with paging) ordered by most recent revision first.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.ILazyRevisionsOperations.GetMetadataFor(System.String,System.Int32,System.Int32)">
            <summary>
            Returns all previous document revisions metadata for specified document (with paging).
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.ILazyRevisionsOperations.Get``1(System.String)">
            <summary>
            Returns a document revision by change vector.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.ILazyRevisionsOperations.Get``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns document revisions by change vectors.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.ILazyRevisionsOperations.Get``1(System.String,System.DateTime)">
            <summary>
            Returns the first revision for this document that happens before or at the specified date.
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.IRevisionsSessionOperationsAsync">
            <summary>
                Revisions advanced async session operations
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.IRevisionsSessionOperationsAsync.Lazily">
            <summary>
            Access the lazy revisions operations
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IRevisionsSessionOperationsAsync.GetForAsync``1(System.String,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Returns all previous document revisions for specified document (with paging).
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IRevisionsSessionOperationsAsync.GetMetadataForAsync(System.String,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Returns all previous document revisions metadata for specified document (with paging).
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IRevisionsSessionOperationsAsync.GetAsync``1(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a document revision by change vector.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IRevisionsSessionOperationsAsync.GetAsync``1(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Returns document revisions by change vectors.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IRevisionsSessionOperationsAsync.GetAsync``1(System.String,System.DateTime,System.Threading.CancellationToken)">
            <summary>
            Returns the first revision for this document that happens before or at
            the specified date
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IRevisionsSessionOperationsAsync.ForceRevisionCreationFor``1(``0,Raven.Client.Documents.Session.ForceRevisionStrategy)">
            <summary>
            Make the session create a revision for the specified entity.
            Can be used with tracked entities only.
            Revision will be created Even If:
               1. Revisions configuration is Not set for the collection
               2. Document was Not modified
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.IRevisionsSessionOperationsAsync.ForceRevisionCreationFor(System.String,Raven.Client.Documents.Session.ForceRevisionStrategy)">
            <summary>
            Make the session create a revision for the specified document id.
            Revision will be created Even If:
               1. Revisions configuration is Not set for the collection
               2. Document was Not modified
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Raven.Client.Documents.Session.IRevisionsSessionOperationsAsync.GetCountForAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the number of revisions for specified document.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.ILazyRevisionsOperationsAsync.GetForAsync``1(System.String,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Returns all previous document revisions for specified document (with paging) ordered by most recent revision first.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.ILazyRevisionsOperationsAsync.GetAsync``1(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a document revision by change vector.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.ILazyRevisionsOperationsAsync.GetMetadataForAsync(System.String,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Returns all previous document revisions metadata for specified document (with paging).
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.ILazyRevisionsOperationsAsync.GetAsync``1(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Returns document revisions by change vectors.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.ILazyRevisionsOperationsAsync.GetAsync``1(System.String,System.DateTime,System.Threading.CancellationToken)">
            <summary>
            Returns the first revision for this document that happens before or at the specified date.
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.ISessionDocumentCounters">
            <summary>
                Counters advanced synchronous session operations
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.ISessionDocumentCounters.GetAll">
            <summary>
            Returns all the counters for a document.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.ISessionDocumentCounters.Get(System.String)">
            <summary>
            Returns the counter by the  counter name.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.ISessionDocumentCounters.Get(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns the a dictionary of counter values by counter names
            <param name="counters">counters names</param>
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.ISessionDocumentCountersBase">
            <summary>
                Counters advanced synchronous session operations
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.ISessionDocumentCountersBase.Increment(System.String,System.Int64)">
            <summary>
            Increments by delta the value of a counter 
            <param name="counter">the counter name</param>
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.ISessionDocumentCountersBase.Delete(System.String)">
            <summary>
            Marks the specified document's counter for deletion. The counter will be deleted when
            <see cref="M:Raven.Client.Documents.Session.IDocumentSession.SaveChanges" /> is called.
            </summary>
            <param name="counter">the counter name</param>
        </member>
        <member name="T:Raven.Client.Documents.Session.ISessionDocumentTimeSeries">
            <summary>
                Time series synchronous session operations
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.ISessionDocumentTimeSeries.Get(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Int32)">
            <summary>
            Return the time series values for the provided range
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.ISessionDocumentTimeSeries.Get(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Action{Raven.Client.Documents.Session.Loaders.ITimeSeriesIncludeBuilder},System.Int32,System.Int32)">
            <summary>
            Return the time series values for the provided range and includes related documents 
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.ISessionDocumentTypedTimeSeries`1">
            <summary>
                Time series typed synchronous session operations
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.ISessionDocumentTypedTimeSeries`1.Get(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Int32)">
            <summary>
            Return the time series values for the provided range
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.ISessionDocumentRollupTypedTimeSeries`1">
            <summary>
                Time series typed synchronous session operations
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.ISessionDocumentRollupTypedTimeSeries`1.Get(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Int32)">
            <summary>
            Return the time series values for the provided range
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.ISessionDocumentAppendTimeSeriesBase">
            <summary>
                Time series advanced in memory session operations
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.ISessionDocumentAppendTimeSeriesBase.Append(System.DateTime,System.Collections.Generic.IEnumerable{System.Double},System.String)">
            <summary>
            Append the the values (and optional tag) to the times series at the provided time stamp
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.ISessionDocumentAppendTimeSeriesBase.Append(System.DateTime,System.Double,System.String)">
            <summary>
            Append a single value (and optional tag) to the times series at the provided time stamp
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.ISessionDocumentDeleteTimeSeriesBase.Delete(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Delete all the values in the time series in the range of from .. to.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.ISessionDocumentDeleteTimeSeriesBase.Delete(System.DateTime)">
            <summary>
            Delete the value in the time series in the specified time stamp
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.Loaders.AsyncMultiLoaderWithInclude`1">
            <summary>
            Fluent implementation for specifying include paths for loading documents
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.AsyncMultiLoaderWithInclude`1.Include(System.String)">
            <summary>
            Begin a load while including the specified path 
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.AsyncMultiLoaderWithInclude`1.Include(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Begin a load while including the specified path 
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.AsyncMultiLoaderWithInclude`1.Include``1(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Includes the specified path.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.AsyncMultiLoaderWithInclude`1.Include(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
            Begin a load while including the specified path 
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.AsyncMultiLoaderWithInclude`1.Include``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
            Includes the specified path.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.AsyncMultiLoaderWithInclude`1.LoadAsync(System.String[])">
            <summary>
            Begins the async multi-load operation
            </summary>
            <param name="ids">The ids.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.AsyncMultiLoaderWithInclude`1.LoadAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Begins the async multi-load operation
            </summary>
            <param name="ids">The ids.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.AsyncMultiLoaderWithInclude`1.LoadAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Begins the async load operation
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.AsyncMultiLoaderWithInclude`1.#ctor(Raven.Client.Documents.Session.IAsyncDocumentSessionImpl)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Documents.Session.Loaders.AsyncMultiLoaderWithInclude`1"/> class.
            </summary>
            <param name="session">The session.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.AsyncMultiLoaderWithInclude`1.LoadAsync``1(System.String[])">
            <summary>
            Begins the async multi-load operation
            </summary>
            <param name="ids">The ids.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.AsyncMultiLoaderWithInclude`1.LoadAsync``1(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Begins the async multi-load operation
            </summary>
            <param name="ids">The ids.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.AsyncMultiLoaderWithInclude`1.LoadAsync``1(System.String,System.Threading.CancellationToken)">
            <summary>
            Loads the specified id.
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="id">The id.</param>
        </member>
        <member name="T:Raven.Client.Documents.Session.Loaders.IAsyncLoaderWithInclude`1">
            <summary>
            Fluent interface for specifying include paths
            for loading documents
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.IAsyncLoaderWithInclude`1.Include(System.String)">
            <summary>
            Begin a load while including the specified path 
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.IAsyncLoaderWithInclude`1.Include(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Begin a load while including the specified path 
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.IAsyncLoaderWithInclude`1.Include``1(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Begin a load while including the specified path
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.IAsyncLoaderWithInclude`1.Include(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
            Begin a load while including the specified path 
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.IAsyncLoaderWithInclude`1.Include``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
            Begin a load while including the specified path
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.IAsyncLoaderWithInclude`1.LoadAsync(System.String[])">
            <summary>
            Begins the async multi-load operation
            </summary>
            <param name="ids">The ids.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.IAsyncLoaderWithInclude`1.LoadAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Begins the async multi-load operation
            </summary>
            <param name="ids">The ids.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.IAsyncLoaderWithInclude`1.LoadAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Begins the async load operation
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.IAsyncLoaderWithInclude`1.LoadAsync``1(System.String[])">
            <summary>
            Begins the async multi-load operation
            </summary>
            <param name="ids">The ids.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.IAsyncLoaderWithInclude`1.LoadAsync``1(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Begins the async multi-load operation
            </summary>
            <param name="ids">The ids.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.IAsyncLoaderWithInclude`1.LoadAsync``1(System.String,System.Threading.CancellationToken)">
            <summary>
            Begins the async load operation
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="T:Raven.Client.Documents.Session.Loaders.ILazyLoaderWithInclude`1">
            <summary>
                Fluent interface for specifying include paths
                for loading documents lazily
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.ILazyLoaderWithInclude`1.Include(System.String)">
            <summary>
                Begin a load while including the specified path
            </summary>
            <param name="path">Path in documents in which server should look for a 'referenced' documents.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.ILazyLoaderWithInclude`1.Include(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
                Begin a load while including the specified path
            </summary>
            <param name="path">Path in documents in which server should look for a 'referenced' documents.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.ILazyLoaderWithInclude`1.Include(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
                Begin a load while including the specified path
            </summary>
            <param name="path">Path in documents in which server should look for a 'referenced' documents.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.ILazyLoaderWithInclude`1.Load(System.String[])">
            <summary>
                Loads the specified entities with the specified ids.
            </summary>
            <param name="ids">Enumerable of Ids that should be loaded</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.ILazyLoaderWithInclude`1.Load(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Loads the specified entities with the specified ids.
            </summary>
            <param name="ids">Enumerable of Ids that should be loaded</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.ILazyLoaderWithInclude`1.Load(System.String)">
            <summary>
                Loads the specified entity with the specified id.
            </summary>
            <param name="id">Identifier of a entity that will be loaded.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.ILazyLoaderWithInclude`1.Load``1(System.String[])">
            <summary>
                Loads the specified entities with the specified ids.
            </summary>
            <param name="ids">Enumerable of Ids that should be loaded</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.ILazyLoaderWithInclude`1.Load``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Loads the specified entities with the specified ids.
            </summary>
            <param name="ids">Enumerable of Ids that should be loaded</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.ILazyLoaderWithInclude`1.Load``1(System.String)">
            <summary>
                Loads the specified entity with the specified id.
            </summary>
            <param name="id">Identifier of a entity that will be loaded.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.IAsyncLazyLoaderWithInclude`1.Include(System.String)">
            <summary>
                Begin a load while including the specified path
            </summary>
            <param name="path">Path in documents in which server should look for a 'referenced' documents.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.IAsyncLazyLoaderWithInclude`1.Include(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
                Begin a load while including the specified path
            </summary>
            <param name="path">Path in documents in which server should look for a 'referenced' documents.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.IAsyncLazyLoaderWithInclude`1.Include(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
                Begin a load while including the specified path
            </summary>
            <param name="path">Path in documents in which server should look for a 'referenced' documents.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.IAsyncLazyLoaderWithInclude`1.LoadAsync(System.String[])">
            <summary>
                Loads the specified entities with the specified ids.
            </summary>
            <param name="ids">Enumerable of Ids that should be loaded</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.IAsyncLazyLoaderWithInclude`1.LoadAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Loads the specified entities with the specified ids.
            </summary>
            <param name="ids">Enumerable of Ids that should be loaded</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.IAsyncLazyLoaderWithInclude`1.LoadAsync(System.String)">
            <summary>
                Loads the specified entity with the specified id.
            </summary>
            <param name="id">Identifier of a entity that will be loaded.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.IAsyncLazyLoaderWithInclude`1.LoadAsync``1(System.String[])">
            <summary>
                Loads the specified entities with the specified ids.
            </summary>
            <param name="ids">Enumerable of Ids that should be loaded</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.IAsyncLazyLoaderWithInclude`1.LoadAsync``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Loads the specified entities with the specified ids.
            </summary>
            <param name="ids">Enumerable of Ids that should be loaded</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.IAsyncLazyLoaderWithInclude`1.LoadAsync``1(System.String)">
            <summary>
                Loads the specified entity with the specified id.
            </summary>
            <param name="id">Identifier of a entity that will be loaded.</param>
        </member>
        <member name="T:Raven.Client.Documents.Session.Loaders.ILoaderWithInclude`1">
            <summary>
            Fluent interface for specifying include paths
            for loading documents
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.ILoaderWithInclude`1.Include(System.String)">
            <summary>
            Includes the specified path.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.ILoaderWithInclude`1.Include(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Includes the specified path.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.ILoaderWithInclude`1.Include``1(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Includes the specified path.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.ILoaderWithInclude`1.Include(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
            Includes the specified path.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.ILoaderWithInclude`1.Include``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
            Includes the specified path.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.ILoaderWithInclude`1.Load(System.String[])">
            <summary>
            Loads the specified ids.
            </summary>
            <param name="ids">The ids.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.ILoaderWithInclude`1.Load(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Loads the specified ids.
            </summary>
            <param name="ids">The ids.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.ILoaderWithInclude`1.Load(System.String)">
            <summary>
            Loads the specified id.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.ILoaderWithInclude`1.Load``1(System.String[])">
            <summary>
            Loads the specified ids.
            </summary>
            <param name="ids">The ids.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.ILoaderWithInclude`1.Load``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Loads the specified ids.
            </summary>
            <param name="ids">The ids.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.ILoaderWithInclude`1.Load``1(System.String)">
            <summary>
            Loads the specified id.
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.LazyMultiLoaderWithInclude`1.#ctor(Raven.Client.Documents.Session.IDocumentSessionImpl)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Documents.Session.Loaders.LazyMultiLoaderWithInclude`1"/> class.
            </summary>
            <param name="session">The session.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.LazyMultiLoaderWithInclude`1.Include(System.String)">
            <summary>
            Includes the specified path.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.LazyMultiLoaderWithInclude`1.Include(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Includes the specified path.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.LazyMultiLoaderWithInclude`1.Include(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
            Includes the specified path.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.LazyMultiLoaderWithInclude`1.Load(System.String[])">
            <summary>
            Loads the specified ids.
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.LazyMultiLoaderWithInclude`1.Load(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Loads the specified ids.
            </summary>
            <param name="ids">The ids.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.LazyMultiLoaderWithInclude`1.Load(System.String)">
            <summary>
            Loads the specified id.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.LazyMultiLoaderWithInclude`1.Load``1(System.String[])">
            <summary>
            Loads the specified ids.
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.LazyMultiLoaderWithInclude`1.Load``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Loads the specified ids.
            </summary>
            <param name="ids">The ids.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.LazyMultiLoaderWithInclude`1.Load``1(System.String)">
            <summary>
            Loads the specified id.
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="id">The id.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.AsyncLazyMultiLoaderWithInclude`1.#ctor(Raven.Client.Documents.Session.IAsyncDocumentSessionImpl)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Documents.Session.Loaders.LazyMultiLoaderWithInclude`1"/> class.
            </summary>
            <param name="session">The session.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.AsyncLazyMultiLoaderWithInclude`1.Include(System.String)">
            <summary>
            Includes the specified path.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.AsyncLazyMultiLoaderWithInclude`1.Include(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Includes the specified path.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.AsyncLazyMultiLoaderWithInclude`1.Include(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
            Includes the specified path.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.AsyncLazyMultiLoaderWithInclude`1.LoadAsync(System.String[])">
            <summary>
            Loads the specified ids.
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.AsyncLazyMultiLoaderWithInclude`1.LoadAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Loads the specified ids.
            </summary>
            <param name="ids">The ids.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.AsyncLazyMultiLoaderWithInclude`1.LoadAsync(System.String)">
            <summary>
            Loads the specified id.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.AsyncLazyMultiLoaderWithInclude`1.LoadAsync``1(System.String[])">
            <summary>
            Loads the specified ids.
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.AsyncLazyMultiLoaderWithInclude`1.LoadAsync``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Loads the specified ids.
            </summary>
            <param name="ids">The ids.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.AsyncLazyMultiLoaderWithInclude`1.LoadAsync``1(System.String)">
            <summary>
            Loads the specified id.
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="id">The id.</param>
        </member>
        <member name="T:Raven.Client.Documents.Session.Loaders.MultiLoaderWithInclude`1">
            <summary>
            Fluent implementation for specifying include paths
            for loading documents
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.MultiLoaderWithInclude`1.Include(System.String)">
            <summary>
            Includes the specified path.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.MultiLoaderWithInclude`1.Include(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Includes the specified path.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.MultiLoaderWithInclude`1.Include``1(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Includes the specified path.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.MultiLoaderWithInclude`1.Include(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
            Includes the specified path.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.MultiLoaderWithInclude`1.Include``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
            Includes the specified path.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.MultiLoaderWithInclude`1.Load(System.String[])">
            <summary>
            Loads the specified ids.
            </summary>
            <param name="ids">The ids.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.MultiLoaderWithInclude`1.Load(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Loads the specified ids.
            </summary>
            <param name="ids">The ids.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.MultiLoaderWithInclude`1.Load(System.String)">
            <summary>
            Loads the specified id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.MultiLoaderWithInclude`1.#ctor(Raven.Client.Documents.Session.IDocumentSessionImpl)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Documents.Session.Loaders.MultiLoaderWithInclude`1"/> class.
            </summary>
            <param name="session">The session.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.MultiLoaderWithInclude`1.Load``1(System.String[])">
            <summary>
            Loads the specified ids.
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.MultiLoaderWithInclude`1.Load``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Loads the specified ids.
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Loaders.MultiLoaderWithInclude`1.Load``1(System.String)">
            <summary>
            Loads the specified id.
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="id">The id.</param>
        </member>
        <member name="T:Raven.Client.Documents.Session.Operations.Lazy.ILazySessionOperations">
            <summary>
                Specify interface for lazy operation for the session
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.Operations.Lazy.ILazySessionOperations.Include(System.String)">
            <summary>
                Begin a load while including the specified path
            </summary>
            <param name="path">Path in documents in which server should look for a 'referenced' documents.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Operations.Lazy.ILazySessionOperations.Include``1(System.Linq.Expressions.Expression{System.Func{``0,System.String}})">
            <summary>
                Begin a load while including the specified path
            </summary>
            <param name="path">Path in documents in which server should look for a 'referenced' documents.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Operations.Lazy.ILazySessionOperations.Include``1(System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
                Begin a load while including the specified path
            </summary>
            <param name="path">Path in documents in which server should look for a 'referenced' documents.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Operations.Lazy.ILazySessionOperations.Load``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Loads the specified entities with the specified ids.
            </summary>
            <param name="ids">Enumerable of Ids that should be loaded</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Operations.Lazy.ILazySessionOperations.Load``1(System.Collections.Generic.IEnumerable{System.String},System.Action{System.Collections.Generic.Dictionary{System.String,``0}})">
            <summary>
                Loads the specified entities with the specified ids and a function to call when it is evaluated
            </summary>
            <param name="ids">Enumerable of Ids that should be loaded</param>
            <param name="onEval">Action to be executed on evaluation.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Operations.Lazy.ILazySessionOperations.Load``1(System.String)">
            <summary>
                Loads the specified entity with the specified id.
            </summary>
            <param name="id">Identifier of a entity that will be loaded.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Operations.Lazy.ILazySessionOperations.Load``1(System.String,System.Action{``0})">
            <summary>
                Loads the specified entity with the specified id and a function to call when it is evaluated
            </summary>
            <param name="id">Identifier of a entity that will be loaded.</param>
            <param name="onEval">Action to be executed on evaluation.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Operations.Lazy.ILazySessionOperations.LoadStartingWith``1(System.String,System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
                Loads multiple entities that contain common prefix.
            </summary>
            <param name="idPrefix">prefix for which documents should be returned e.g. "products/"</param>
            <param name="matches">
                pipe ('|') separated values for which document IDs (after 'idPrefix') should be matched ('?'
                any single character, '*' any characters)
            </param>
            <param name="start">number of documents that should be skipped. By default: 0.</param>
            <param name="pageSize">maximum number of documents that will be retrieved. By default: 25.</param>
            <param name="exclude">
                pipe ('|') separated values for which document IDs (after 'idPrefix') should not be matched
                ('?' any single character, '*' any characters)
            </param>
            <param name="startAfter">
                skip document fetching until given ID is found and return documents after that ID (default:
                null)
            </param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Operations.Lazy.ILazySessionOperations.ConditionalLoad``1(System.String,System.String)">
            <summary>
                Loads the specified entity with the specified id and changeVector.
                If the entity is loaded into the session, the tracked entity will be returned otherwise the entity will be loaded only if it is fresher then the provided changeVector.
            </summary>
            <param name="id">Identifier of a entity that will be conditional loaded.</param>
            <param name="changeVector">Change vector of a entity that will be conditional loaded.</param>
        </member>
        <member name="T:Raven.Client.Documents.Session.Operations.Lazy.IAsyncLazySessionOperations">
            <summary>
                Specify interface for lazy async operation for the session
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.Operations.Lazy.IAsyncLazySessionOperations.Include(System.String)">
            <summary>
                Begin a load while including the specified path
            </summary>
            <param name="path">Path in documents in which server should look for a 'referenced' documents.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Operations.Lazy.IAsyncLazySessionOperations.Include``1(System.Linq.Expressions.Expression{System.Func{``0,System.String}})">
            <summary>
                Begin a load while including the specified path
            </summary>
            <param name="path">Path in documents in which server should look for a 'referenced' documents.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Operations.Lazy.IAsyncLazySessionOperations.Include``1(System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
                Begin a load while including the specified path
            </summary>
            <param name="path">Path in documents in which server should look for a 'referenced' documents.</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Operations.Lazy.IAsyncLazySessionOperations.LoadAsync``1(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
                Loads the specified entities with the specified ids.
            </summary>
            <param name="ids">Enumerable of Ids that should be loaded</param>
            <param name="token">Cancellation token</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Operations.Lazy.IAsyncLazySessionOperations.LoadAsync``1(System.Collections.Generic.IEnumerable{System.String},System.Action{System.Collections.Generic.Dictionary{System.String,``0}},System.Threading.CancellationToken)">
            <summary>
                Loads the specified entities with the specified ids and a function to call when it is evaluated
            </summary>
            <param name="ids">Enumerable of Ids that should be loaded</param>
            <param name="onEval">Action to be executed on evaluation.</param>
            <param name="token">Cancellation token</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Operations.Lazy.IAsyncLazySessionOperations.LoadAsync``1(System.String,System.Threading.CancellationToken)">
            <summary>
                Loads the specified entity with the specified id.
            </summary>
            <param name="id">Identifier of a entity that will be loaded.</param>
            <param name="token">Cancellation token</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Operations.Lazy.IAsyncLazySessionOperations.LoadAsync``1(System.String,System.Action{``0},System.Threading.CancellationToken)">
            <summary>
                Loads the specified entity with the specified id and a function to call when it is evaluated
            </summary>
            <param name="id">Identifier of a entity that will be loaded.</param>
            <param name="onEval">Action to be executed on evaluation.</param>
            <param name="token">Cancellation token</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Operations.Lazy.IAsyncLazySessionOperations.LoadStartingWithAsync``1(System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Loads multiple entities that contain common prefix.
            </summary>
            <param name="idPrefix">prefix for which documents should be returned e.g. "products/"</param>
            <param name="matches">
                pipe ('|') separated values for which document IDs (after 'idPrefix') should be matched ('?'
                any single character, '*' any characters)
            </param>
            <param name="start">number of documents that should be skipped. By default: 0.</param>
            <param name="pageSize">maximum number of documents that will be retrieved. By default: 25.</param>
            <param name="exclude">
                pipe ('|') separated values for which document IDs (after 'idPrefix') should not be matched
                ('?' any single character, '*' any characters)
            </param>
            <param name="startAfter">
                skip document fetching until given ID is found and return documents after that ID (default:
                null)
            </param>
            <param name="token">Cancellation token</param>
        </member>
        <member name="M:Raven.Client.Documents.Session.Operations.Lazy.IAsyncLazySessionOperations.ConditionalLoadAsync``1(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Loads the specified entity with the specified id and changeVector.
                If the entity is loaded into the session, the tracked entity will be returned otherwise the entity will be loaded only if it is fresher then the provided changeVector.
            </summary>
            <param name="id">Identifier of a entity that will be conditional loaded.</param>
            <param name="changeVector">Change vector of a entity that will be conditional loaded.</param>
            <param name="token">The cancellation token.</param>
        </member>
        <member name="T:Raven.Client.Documents.Session.Operations.Lazy.IEagerSessionOperations">
            <summary>
                Allow to perform eager operations on the session
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.Operations.Lazy.IEagerSessionOperations.ExecuteAllPendingLazyOperations">
            <summary>
                Execute all the lazy requests pending within this session
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.Operations.Lazy.IAsyncEagerSessionOperations.ExecuteAllPendingLazyOperationsAsync(System.Threading.CancellationToken)">
            <summary>
                Execute all the lazy requests pending within this session
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.Operations.SessionOperationExecutor">
            <summary>
            For internal session use only
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.QueryStatistics">
            <summary>
            Statistics about a raven query.
            Such as how many records match the query
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.QueryStatistics.IsStale">
            <summary>
            Whether the query returned potentially stale results
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.QueryStatistics.DurationInMs">
            <summary>
            The duration of the query _server side_
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.QueryStatistics.TotalResults">
            <summary>
            What was the total count of the results that matched the query
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.QueryStatistics.LongTotalResults">
            <summary>
            What was the total count of the results that matched the query as int64
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.QueryStatistics.SkippedResults">
            <summary>
            Gets or sets the skipped results
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.QueryStatistics.Timestamp">
            <summary>
            The time when the query results were unstale.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.QueryStatistics.IndexName">
            <summary>
            The name of the index queried
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.QueryStatistics.IndexTimestamp">
            <summary>
            The timestamp of the queried index
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.QueryStatistics.LastQueryTime">
            <summary>
            The timestamp of the last time the index was queried
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.QueryStatistics.NodeTag">
            <summary>
            Tag of a cluster node which responded to the query
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.QueryStatistics.UpdateQueryStats(Raven.Client.Documents.Queries.QueryResult)">
            <summary>
            Update the query stats from the query results
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.SessionCountersBase">
            <summary>
            Abstract implementation for in memory session operations
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.SessionOptions.TransactionMode">
            <summary>
            Once TransactionMode set 'ClusterWide' it  will perform the SaveChanges as a transactional cluster wide operation.
            Any document store or delete will be part of this session's cluster transaction.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.SessionOptions.DisableAtomicDocumentWritesInClusterWideTransaction">
             <summary>
            EXPERT: Disable automatic atomic writes with cluster write transactions. If set to 'true',
             will only consider explicitly added compare exchange values to validate cluster wide transactions."
             </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.SessionTimeSeriesBase">
            <summary>
            Abstract implementation for in memory session operations
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Session.WhereParams">
            <summary>
            Parameters for the Where Equals call
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Session.WhereParams.#ctor">
            <summary>
            Create a new instance 
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.WhereParams.FieldName">
            <summary>
            The field name
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.WhereParams.Value">
            <summary>
            The field value
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.WhereParams.AllowWildcards">
            <summary>
            Should the field allow wildcards
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Session.WhereParams.IsNestedPath">
            <summary>
            Is this a root property or not?
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Subscriptions.DocumentSubscriptions.Create``1(Raven.Client.Documents.Subscriptions.SubscriptionCreationOptions{``0},System.String)">
            <summary>
            Creates a data subscription in a database. The subscription will expose all documents that match the specified subscription options for a given type.
            </summary>
            <typeparam name="T">Type of the collection to be processed by the subscription</typeparam>
            <returns>Created subscription</returns>
        </member>
        <member name="M:Raven.Client.Documents.Subscriptions.DocumentSubscriptions.Create``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Raven.Client.Documents.Subscriptions.SubscriptionCreationOptions,System.String)">
            <summary>
            Creates a data subscription in a database. The subscription will expose all documents that match the specified subscription options for a given type.
            </summary>
            <typeparam name="T">Type of the collection to be processed by the subscription</typeparam>
            <returns>Created subscription</returns>
        </member>
        <member name="M:Raven.Client.Documents.Subscriptions.DocumentSubscriptions.CreateAsync``1(Raven.Client.Documents.Subscriptions.SubscriptionCreationOptions{``0},System.String,System.Threading.CancellationToken)">
            <summary>
            It creates a data subscription in a database. The subscription will expose all documents that match the specified subscription options.
            </summary>
            <returns>Created subscription name.</returns>
        </member>
        <member name="M:Raven.Client.Documents.Subscriptions.DocumentSubscriptions.CreateAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Raven.Client.Documents.Subscriptions.SubscriptionCreationOptions,System.String,System.Threading.CancellationToken)">
            <summary>
            It creates a data subscription in a database. The subscription will expose all documents that match the specified subscription options for a given type.
            </summary>
            <returns>Created subscription name.</returns>
        </member>
        <member name="M:Raven.Client.Documents.Subscriptions.DocumentSubscriptions.Create(Raven.Client.Documents.Subscriptions.SubscriptionCreationOptions,System.String)">
            <summary>
            Create a data subscription in a database. The subscription will expose all documents that match the specified subscription options for a given type.
            </summary>
            <param name="options"></param>
            <param name="database"></param>
            <returns>Subscription object</returns>
        </member>
        <member name="M:Raven.Client.Documents.Subscriptions.DocumentSubscriptions.CreateAsync(Raven.Client.Documents.Subscriptions.SubscriptionCreationOptions,System.String,System.Threading.CancellationToken)">
            <summary>
            It creates a data subscription in a database. The subscription will expose all documents that match the specified subscription options.
            </summary>
            <returns>Created subscription name.</returns>
        </member>
        <member name="M:Raven.Client.Documents.Subscriptions.DocumentSubscriptions.GetSubscriptionWorker(Raven.Client.Documents.Subscriptions.SubscriptionWorkerOptions,System.String)">
            <summary>
            It opens a subscription and starts pulling documents since a last processed document for that subscription.
            The connection options determine client and server cooperation rules like document batch sizes or a timeout in a matter of which a client
            needs to acknowledge that batch has been processed. The acknowledgment is sent after all documents are processed by subscription's handlers.
            There can be only a single client that is connected to a subscription.
            </summary>
            <returns>Subscription object that allows to add/remove subscription handlers.</returns>
        </member>
        <member name="M:Raven.Client.Documents.Subscriptions.DocumentSubscriptions.GetSubscriptionWorker(System.String,System.String)">
            <summary>
            It opens a subscription and starts pulling documents since a last processed document for that subscription.
            Although this overload does not an <c>SubscriptionConnectionOptions</c> object as a parameter, it uses it's default values.
            The connection options determine client and server cooperation rules like document batch sizes or a timeout in a matter of which a client
            needs to acknowledge that batch has been processed. The acknowledgment is sent after all documents are processed by subscription's handlers.
            There can be only a single client that is connected to a subscription.
            </summary>
            <returns>Subscription object that allows to add/remove subscription handlers.</returns>
        </member>
        <member name="M:Raven.Client.Documents.Subscriptions.DocumentSubscriptions.GetSubscriptionWorker``1(Raven.Client.Documents.Subscriptions.SubscriptionWorkerOptions,System.String)">
            <summary>
            It opens a subscription and starts pulling documents since a last processed document for that subscription.
            The connection options determine client and server cooperation rules like document batch sizes or a timeout in a matter of which a client
            needs to acknowledge that batch has been processed. The acknowledgment is sent after all documents are processed by subscription's handlers.
            There can be only a single client that is connected to a subscription.
            </summary>
            <returns>Subscription object that allows to add/remove subscription handlers.</returns>
        </member>
        <member name="M:Raven.Client.Documents.Subscriptions.DocumentSubscriptions.GetSubscriptionWorker``1(System.String,System.String)">
            <summary>
            It opens a subscription and starts pulling documents since a last processed document for that subscription.
            Although this overload does not an <c>SubscriptionConnectionOptions</c> object as a parameter, it uses it's default values.
            The connection options determine client and server cooperation rules like document batch sizes or a timeout in a matter of which a client
            needs to acknowledge that batch has been processed. The acknowledgment is sent after all documents are processed by subscription's handlers.
            There can be only a single client that is connected to a subscription.
            </summary>
            <returns>Subscription object that allows to add/remove subscription handlers.</returns>
        </member>
        <member name="M:Raven.Client.Documents.Subscriptions.DocumentSubscriptions.GetSubscriptionsAsync(System.Int32,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            It downloads a list of all existing subscriptions in a database.
            </summary>
            <returns>Existing subscriptions' configurations.</returns>
        </member>
        <member name="M:Raven.Client.Documents.Subscriptions.DocumentSubscriptions.DeleteAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a subscription.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Subscriptions.DocumentSubscriptions.Delete(System.String,System.String)">
            <summary>
            Delete a subscription.
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Subscriptions.DocumentSubscriptions.GetSubscriptionState(System.String,System.String)">
            <summary>
            Returns subscription definition and it's current state
            </summary>
            <param name="subscriptionName">Subscription name as received from the server</param>
            <param name="database">Database where the subscription resides</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Subscriptions.DocumentSubscriptions.GetSubscriptionStateAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns subscription definition and it's current state
            </summary>
            <param name="subscriptionName">Subscription name as received from the server</param>
            <param name="database">Database where the subscription resides</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.Subscriptions.DocumentSubscriptions.GetSubscriptions(System.Int32,System.Int32,System.String)">
            <summary>
            It downloads a list of all existing subscriptions in a database.
            </summary>
            <returns>Existing subscriptions' configurations.</returns>
        </member>
        <member name="M:Raven.Client.Documents.Subscriptions.DocumentSubscriptions.DropConnection(System.String,System.String)">
            <summary>
            Force server to close current client subscription connection to the server
            </summary>
            <param name="id"></param>
            <param name="database"></param>
        </member>
        <member name="M:Raven.Client.Documents.Subscriptions.DocumentSubscriptions.DropConnectionAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Force server to close current client subscription connection to the server
            </summary>
            <param name="id"></param>
            <param name="database"></param>
        </member>
        <member name="M:Raven.Client.Documents.Subscriptions.DocumentSubscriptions.Update(Raven.Client.Documents.Subscriptions.SubscriptionUpdateOptions,System.String)">
            <summary>
            Update a data subscription in a database.
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Subscriptions.SubscriptionBatch`1.Item">
            <summary>
            Represents a single item in a subscription batch results. This class should be used only inside the subscription's Run delegate, using it outside this scope might cause unexpected behavior.
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Subscriptions.SubscriptionOpeningStrategy">
            <summary>
            Options for opening a subscription
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Subscriptions.SubscriptionOpeningStrategy.OpenIfFree">
            <summary>
            The client will successfully open a subscription only if there isn't any other currently connected client. 
            Otherwise it will end up with SubscriptionInUseException.
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Subscriptions.SubscriptionOpeningStrategy.TakeOver">
            <summary>
            The connecting client will successfully open a subscription even if there is another active subscription's consumer.
            If the new client takes over an existing client then the existing one will get a SubscriptionInUseException.
             
            The subscription will always be held by the last connected client.
            </summary>
        </member>
        <member name="F:Raven.Client.Documents.Subscriptions.SubscriptionOpeningStrategy.WaitForFree">
            <summary>
            If the client currently cannot open the subscription because it is used by another client but it will wait for that client
            to complete and keep attempting to gain the subscription
            </summary>
        </member>
        <member name="E:Raven.Client.Documents.Subscriptions.SubscriptionWorker`1.AfterAcknowledgment">
            <summary>
            Allows the user to define stuff that happens after the confirm was received from the server
            (this way we know we won't get those documents again)
            </summary>
        </member>
        <member name="T:Raven.Client.Documents.Subscriptions.SubscriptionWorkerOptions">
            <summary>
            Holds subscription connection properties, control both how client and server side behave
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.Subscriptions.SubscriptionWorkerOptions.#ctor(System.String)">
            <summary>
            Create a subscription connection
            </summary>
            <param name="subscriptionName">Subscription name as received from CreateSubscription</param>
        </member>
        <member name="P:Raven.Client.Documents.Subscriptions.SubscriptionWorkerOptions.SubscriptionName">
            <summary>
            Subscription name as received from CreateSubscription
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Subscriptions.SubscriptionWorkerOptions.TimeToWaitBeforeConnectionRetry">
            <summary>
            Cooldown time between connection retry. Default: 5 seconds
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Subscriptions.SubscriptionWorkerOptions.IgnoreSubscriberErrors">
            <summary>
            Whether subscriber error should halt the subscription processing or not. Default: false
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Subscriptions.SubscriptionWorkerOptions.Strategy">
            <summary>
            How connection attempt handles existing\incoming connection. Default: OpenIfFree
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Subscriptions.SubscriptionWorkerOptions.MaxDocsPerBatch">
            <summary>
            Max amount that the server will try to retrieve and send to client. Default: 4096
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Subscriptions.SubscriptionWorkerOptions.MaxErroneousPeriod">
            <summary>
            Maximum amount of time during which a subscription connection may be in erroneous state. Default: 5 minutes
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Subscriptions.SubscriptionWorkerOptions.CloseWhenNoDocsLeft">
            <summary>
            Will continue the subscription work until the server have no more new documents to send.
            That's a useful practice for ad-hoc, one-time, persistent data processing.
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Subscriptions.SubscriptionWorkerOptions.SendBufferSizeInBytes">
            <summary>
            Send buffer size for the underlying connection. Default: 32768 bytes (32 kB)
            </summary>
        </member>
        <member name="P:Raven.Client.Documents.Subscriptions.SubscriptionWorkerOptions.ReceiveBufferSizeInBytes">
            <summary>
            Receive buffer for the underlying connection. Default: 4096 bytes (4 kB)
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.TimeSeries.TimeSeriesOperations.RegisterAsync``2(System.String)">
            <summary>
            Register value names of a time-series
            </summary>
            <typeparam name="TCollection">Collection type</typeparam>
            <typeparam name="TTimeSeriesEntry">Time-series type</typeparam>
        </member>
        <member name="M:Raven.Client.Documents.TimeSeries.TimeSeriesOperations.RegisterAsync``1(System.String,System.String[])">
            <summary>
            Register value names of a time-series
            </summary>
            <typeparam name="TCollection">Collection type</typeparam>
        </member>
        <member name="M:Raven.Client.Documents.TimeSeries.TimeSeriesOperations.RegisterAsync(System.String,System.String,System.String[])">
            <summary>
            Register value names of a time-series
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.TimeSeries.TimeSeriesOperations.SetPolicyAsync``1(System.String,Sparrow.TimeValue,Sparrow.TimeValue)">
            <summary>
            Set rollup and retention policy
            </summary>
            <typeparam name="TCollection">Collection type</typeparam>
            <param name="name">Policy name</param>
            <param name="aggregation">Aggregation time</param>
            <param name="retention">Retention time</param>
        </member>
        <member name="M:Raven.Client.Documents.TimeSeries.TimeSeriesOperations.SetPolicyAsync(System.String,System.String,Sparrow.TimeValue,Sparrow.TimeValue)">
            <summary>
            Set rollup and retention policy
            </summary>
            <param name="name">Policy name</param>
            <param name="aggregation">Aggregation time</param>
            <param name="retention">Retention time</param>
        </member>
        <member name="M:Raven.Client.Documents.TimeSeries.TimeSeriesOperations.SetRawPolicyAsync``1(Sparrow.TimeValue)">
            <summary>
            Set raw retention policy
            </summary>
            <typeparam name="TCollection">Collection type</typeparam>
            <param name="retention">Retention time</param>
        </member>
        <member name="M:Raven.Client.Documents.TimeSeries.TimeSeriesOperations.SetRawPolicyAsync(System.String,Sparrow.TimeValue)">
            <summary>
            Set raw retention policy
            </summary>
            <param name="retention">Retention time</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.TimeSeries.TimeSeriesOperations.RemovePolicyAsync(System.String,System.String)">
            <summary>
            Remove policy
            </summary>
            <param name="name">Policy name</param>
        </member>
        <member name="M:Raven.Client.Documents.TimeSeries.TimeSeriesOperations.RemovePolicyAsync``1(System.String)">
            <summary>
            Remove policy
            </summary>
            <typeparam name="TCollection">Collection type</typeparam>
            <param name="name">Policy name</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.TimeSeries.TimeSeriesOperations.Register``2(System.String)">
            <summary>
            Register value names of a time-series
            </summary>
            <typeparam name="TCollection">Collection type</typeparam>
            <typeparam name="TTimeSeriesEntry">Time-series type</typeparam>
        </member>
        <member name="M:Raven.Client.Documents.TimeSeries.TimeSeriesOperations.Register``1(System.String,System.String[])">
            <summary>
            Register value names of a time-series
            </summary>
            <typeparam name="TCollection">Collection type</typeparam>
        </member>
        <member name="M:Raven.Client.Documents.TimeSeries.TimeSeriesOperations.Register(System.String,System.String,System.String[])">
            <summary>
            Register value names of a time-series
            </summary>
        </member>
        <member name="M:Raven.Client.Documents.TimeSeries.TimeSeriesOperations.SetPolicy``1(System.String,Sparrow.TimeValue,Sparrow.TimeValue)">
            <summary>
            Set rollup and retention policy
            </summary>
            <typeparam name="TCollection">Collection type</typeparam>
            <param name="name">Policy name</param>
            <param name="aggregation">Aggregation time</param>
            <param name="retention">Retention time</param>
        </member>
        <member name="M:Raven.Client.Documents.TimeSeries.TimeSeriesOperations.SetPolicy(System.String,System.String,Sparrow.TimeValue,Sparrow.TimeValue)">
            <summary>
            Set rollup and retention policy
            </summary>
            <param name="name">Policy name</param>
            <param name="aggregation">Aggregation time</param>
            <param name="retention">Retention time</param>
        </member>
        <member name="M:Raven.Client.Documents.TimeSeries.TimeSeriesOperations.SetRawPolicy``1(Sparrow.TimeValue)">
            <summary>
            Set raw retention policy
            </summary>
            <typeparam name="TCollection">Collection type</typeparam>
            <param name="retention">Retention time</param>
        </member>
        <member name="M:Raven.Client.Documents.TimeSeries.TimeSeriesOperations.SetRawPolicy(System.String,Sparrow.TimeValue)">
            <summary>
            Set raw retention policy
            </summary>
            <param name="retention">Retention time</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Documents.TimeSeries.TimeSeriesOperations.RemovePolicy(System.String,System.String)">
            <summary>
            Remove policy
            </summary>
            <param name="name">Policy name</param>
        </member>
        <member name="M:Raven.Client.Documents.TimeSeries.TimeSeriesOperations.RemovePolicy``1(System.String)">
            <summary>
            Remove policy
            </summary>
            <typeparam name="TCollection">Collection type</typeparam>
            <param name="name">Policy name</param>
            <returns></returns>
        </member>
        <member name="T:Raven.Client.Exceptions.BadRequestException">
            <summary>
            This exception is raised when a bad request is made to the server
            </summary>
        </member>
        <member name="M:Raven.Client.Exceptions.BadRequestException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Exceptions.BadRequestException"/> class.
            </summary>
        </member>
        <member name="M:Raven.Client.Exceptions.BadRequestException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Exceptions.BadRequestException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Raven.Client.Exceptions.BadRequestException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Exceptions.BadRequestException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="T:Raven.Client.Exceptions.BadResponseException">
            <summary>
            This exception is raised when a bad response is send from the server
            </summary>
        </member>
        <member name="M:Raven.Client.Exceptions.BadResponseException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Exceptions.BadResponseException"/> class.
            </summary>
        </member>
        <member name="M:Raven.Client.Exceptions.BadResponseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Exceptions.BadResponseException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Raven.Client.Exceptions.BadResponseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Exceptions.BadResponseException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="T:Raven.Client.Exceptions.ConcurrencyException">
            <summary>
            This exception is raised when a concurrency conflict is encountered
            </summary>
        </member>
        <member name="M:Raven.Client.Exceptions.ConcurrencyException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Exceptions.ConcurrencyException"/> class.
            </summary>
        </member>
        <member name="M:Raven.Client.Exceptions.ConcurrencyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Exceptions.ConcurrencyException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Raven.Client.Exceptions.ConcurrencyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Exceptions.ConcurrencyException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:Raven.Client.Exceptions.ConcurrencyException.ExpectedETag">
            <summary>
            Expected Etag.
            </summary>
        </member>
        <member name="P:Raven.Client.Exceptions.ConcurrencyException.ActualETag">
            <summary>
            Actual Etag.
            </summary>
        </member>
        <member name="P:Raven.Client.Exceptions.ConcurrencyException.ExpectedChangeVector">
            <summary>
            Expected Change Vector.
            </summary>
        </member>
        <member name="P:Raven.Client.Exceptions.ConcurrencyException.ActualChangeVector">
            <summary>
            Actual Change Vector.
            </summary>
        </member>
        <member name="T:Raven.Client.Exceptions.ConflictException">
            <summary>
            This exception occurs when a (replication) conflict is encountered.
            Usually this required a user to manually resolve the conflict.
            </summary>
        </member>
        <member name="M:Raven.Client.Exceptions.ConflictException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Exceptions.ConflictException"/> class.
            </summary>
        </member>
        <member name="M:Raven.Client.Exceptions.ConflictException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Exceptions.ConflictException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Raven.Client.Exceptions.ConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Exceptions.ConflictException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Raven.Client.Exceptions.Documents.Indexes.AttachmentDoesNotExistException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Exceptions.Documents.Indexes.AttachmentDoesNotExistException"/> class.
            </summary>
        </member>
        <member name="M:Raven.Client.Exceptions.Documents.Indexes.AttachmentDoesNotExistException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Exceptions.Documents.Indexes.AttachmentDoesNotExistException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Raven.Client.Exceptions.Documents.Indexes.AttachmentDoesNotExistException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Exceptions.Documents.Indexes.AttachmentDoesNotExistException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="T:Raven.Client.Exceptions.Documents.Indexes.IndexAlreadyExistException">
            <summary>
            This exception is raised if creation of index is attempted when there is already an index with identical name
            </summary>
        </member>
        <member name="M:Raven.Client.Exceptions.Documents.Indexes.IndexAlreadyExistException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:IndexOrTransformerAlreadyExistException"/> class.
            </summary>
        </member>
        <member name="M:Raven.Client.Exceptions.Documents.Indexes.IndexAlreadyExistException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="!:IndexOrTransformerAlreadyExistException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Raven.Client.Exceptions.Documents.Indexes.IndexAlreadyExistException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="!:IndexOrTransformerAlreadyExistException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="T:Raven.Client.Exceptions.Documents.Indexes.IndexDoesNotExistException">
            <summary>
            This exception is raised when a query is made against a non existing index
            </summary>
        </member>
        <member name="M:Raven.Client.Exceptions.Documents.Indexes.IndexDoesNotExistException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Exceptions.Documents.Indexes.IndexDoesNotExistException"/> class.
            </summary>
        </member>
        <member name="M:Raven.Client.Exceptions.Documents.Indexes.IndexDoesNotExistException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Exceptions.Documents.Indexes.IndexDoesNotExistException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Raven.Client.Exceptions.Documents.Indexes.IndexDoesNotExistException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Exceptions.Documents.Indexes.IndexDoesNotExistException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="F:Raven.Client.Exceptions.Documents.Compilation.IndexCompilationException.IndexDefinitionProperty">
            <summary>
            Indicates which property caused error (Maps, Reduce).
            </summary>
        </member>
        <member name="F:Raven.Client.Exceptions.Documents.Compilation.IndexCompilationException.ProblematicText">
            <summary>
            Value of a problematic property.
            </summary>
        </member>
        <member name="T:Raven.Client.Exceptions.Documents.DocumentCollectionMismatchException">
            <summary>
            This exception is raised when stored document has a collection mismatch
            </summary>
        </member>
        <member name="M:Raven.Client.Exceptions.Documents.DocumentCollectionMismatchException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Exceptions.Documents.DocumentCollectionMismatchException"/> class.
            </summary>
        </member>
        <member name="M:Raven.Client.Exceptions.Documents.DocumentCollectionMismatchException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Exceptions.Documents.DocumentCollectionMismatchException"/> class.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Raven.Client.Exceptions.Documents.DocumentCollectionMismatchException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Exceptions.Documents.DocumentCollectionMismatchException"/> class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="inner">The inner exception.</param>
        </member>
        <member name="M:Raven.Client.Exceptions.Documents.DocumentDoesNotExistException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Exceptions.Documents.DocumentDoesNotExistException"/> class.
            </summary>
        </member>
        <member name="M:Raven.Client.Exceptions.Documents.DocumentDoesNotExistException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Exceptions.Documents.DocumentDoesNotExistException"/> class.
            </summary>
        </member>
        <member name="M:Raven.Client.Exceptions.Documents.DocumentDoesNotExistException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Exceptions.Documents.DocumentDoesNotExistException"/> class.
            </summary>
        </member>
        <member name="M:Raven.Client.Exceptions.Documents.DocumentDoesNotExistException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Exceptions.Documents.DocumentDoesNotExistException"/> class.
            </summary>
        </member>
        <member name="T:Raven.Client.Exceptions.Documents.Session.NonUniqueObjectException">
            <summary>
            This exception is thrown when a separate instance of an entity is added to the session
            when a different entity with the same ID already exists within the session.
            </summary>
        </member>
        <member name="M:Raven.Client.Exceptions.Documents.Session.NonUniqueObjectException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Exceptions.Documents.Session.NonUniqueObjectException"/> class.
            </summary>
        </member>
        <member name="M:Raven.Client.Exceptions.Documents.Session.NonUniqueObjectException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Exceptions.Documents.Session.NonUniqueObjectException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Raven.Client.Exceptions.Documents.Session.NonUniqueObjectException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Exceptions.Documents.Session.NonUniqueObjectException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="T:Raven.Client.Exceptions.Routing.RouteNotFoundException">
            <summary>
            This exception is raised when a request is created to a route that was not found on the server.
            </summary>
        </member>
        <member name="M:Raven.Client.Exceptions.Routing.RouteNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Exceptions.Routing.RouteNotFoundException"/> class.
            </summary>
        </member>
        <member name="M:Raven.Client.Exceptions.Routing.RouteNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Exceptions.Routing.RouteNotFoundException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Raven.Client.Exceptions.Routing.RouteNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Exceptions.Routing.RouteNotFoundException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Raven.Client.Extensions.EnumerableExtension.ForceEnumerateInThreadSafeManner``2(System.Collections.Concurrent.ConcurrentDictionary{``0,``1})">
            <summary>
            This is used to prevent race condition errors when using linq extension methods on ConcurrentDictionary
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="S"></typeparam>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="T:Raven.Client.Extensions.ExceptionExtensions">
            <summary>
             Extension methods to handle common scenarios
            </summary>
        </member>
        <member name="M:Raven.Client.Extensions.ExceptionExtensions.ExtractSingleInnerException(System.AggregateException)">
            <summary>
            Recursively examines the inner exceptions of an <see cref="T:System.AggregateException"/> and returns a single child exception.
            </summary>
            <returns>
            If any of the aggregated exceptions have more than one inner exception, null is returned.
            </returns>
        </member>
        <member name="M:Raven.Client.Extensions.ExceptionExtensions.ExceptionToString(System.Exception,System.Action{System.Text.StringBuilder})">
            <remarks>Code from http://stackoverflow.com/questions/1886611/c-overriding-tostring-method-for-custom-exceptions </remarks>
        </member>
        <member name="M:Raven.Client.Extensions.ExceptionExtensions.AllInnerMessages(System.Exception)">
            <remarks>Code from http://stackoverflow.com/questions/1886611/c-overriding-tostring-method-for-custom-exceptions </remarks>
        </member>
        <member name="T:Raven.Client.Extensions.ExpressionExtensions">
            <summary>
             Extensions for Linq expressions
            </summary>
        </member>
        <member name="M:Raven.Client.Extensions.ExpressionExtensions.ToPropertyPath(System.Linq.Expressions.LambdaExpression,System.Char,System.String)">
            <summary>
             Turn an expression like x=&lt; x.User.Name to "User.Name"
            </summary>
        </member>
        <member name="F:Raven.Client.Extensions.Streams.BufferSharedPools.HugeByteArray">
            <summary>
            Used to reduce the # of temporary byte[]s created to satisfy serialization and
            other I/O requests
            </summary>
        </member>
        <member name="F:Raven.Client.Extensions.Streams.BufferSharedPools.BigByteArray">
            <summary>
            Used to reduce the # of temporary byte[]s created to satisfy serialization and
            other I/O requests
            </summary>
        </member>
        <member name="F:Raven.Client.Extensions.Streams.BufferSharedPools.ByteArray">
            <summary>
            Used to reduce the # of temporary byte[]s created to satisfy serialization and
            other I/O requests
            </summary>
        </member>
        <member name="F:Raven.Client.Extensions.Streams.BufferSharedPools.SmallByteArray">
            <summary>
            Used to reduce the # of temporary byte[]s created to satisfy serialization and
            other I/O requests
            </summary>
        </member>
        <member name="F:Raven.Client.Extensions.Streams.BufferSharedPools.MicroByteArray">
            <summary>
            Used to reduce the # of temporary byte[]s created to satisfy serialization and
            other I/O requests
            </summary>
        </member>
        <member name="T:Raven.Client.Extensions.Streams.StreamExtensions">
            <summary>
            Extensions for working with streams
            </summary>
        </member>
        <member name="M:Raven.Client.Extensions.Streams.StreamExtensions.ReadData(System.IO.Stream)">
            <summary>
            Reads the entire request buffer to memory and return it as a byte array.
            </summary>
            <param name="stream">The stream to read.</param>
            <returns>The returned byte array.</returns>
        </member>
        <member name="M:Raven.Client.Extensions.Streams.StreamExtensions.ReadEntireBlock(System.IO.Stream,System.Int32)">
            <summary>
            Allocates a byte array and reads an entire block from the stream
            </summary>
        </member>
        <member name="M:Raven.Client.Extensions.Streams.StreamExtensions.ReadEntireBlock(System.IO.Stream,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads an entire block from the stream
            </summary>
        </member>
        <member name="T:Raven.Client.Http.AttachmentStreamContent">
            <summary>
            We use AttachmentStreamContent instead of StreamContent in order to not dispose the stream the user passes us
            so it will be usable again in failover scenarios.
            </summary>
        </member>
        <member name="P:Raven.Client.Http.HttpCache.NumberOfItems">
            <summary>
            This value should not be used outside of tests: fetching it locks the cache.
            </summary>
        </member>
        <member name="F:Raven.Client.Http.HttpCache._isFreeSpaceRunning">
            <summary>
            Used to check if the FreeSpace routine is running. Avoids creating 
            many tasks that shouldn't be run.
            </summary>
        </member>
        <member name="M:Raven.Client.Json.BlittableExtensions.SelectTokenWithRavenSyntaxReturningFlatStructure(Sparrow.Json.BlittableJsonReaderBase,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="self"></param>
            <param name="path"></param>
            <param name="createSnapshots">Set to true if you want to modify selected objects</param>
            <returns></returns>
        </member>
        <member name="T:Raven.Client.Json.Serialization.NewtonsoftJson.DefaultRavenContractResolver">
            <summary>
            The default json contract will serialize all properties and all public fields
            </summary>
        </member>
        <member name="M:Raven.Client.Json.Serialization.NewtonsoftJson.DefaultRavenContractResolver.GetSerializableMembers(System.Type)">
            <summary>
            Gets the serializable members for the type.
            </summary>
            <param name="objectType">The type to get serializable members for.</param>
            <returns>The serializable members for the type.</returns>
        </member>
        <member name="T:Raven.Client.Json.Serialization.NewtonsoftJson.Internal.Converters.DateTools">
             <summary> Provides support for converting dates to strings and vice-versa.
             The strings are structured so that lexicographic sorting orders
             them by date, which makes them suitable for use as field values
             and search terms.
            
             <p/>This class also helps you to limit the resolution of your dates. Do not
             save dates with a finer resolution than you really need, as then
             RangeQuery and PrefixQuery will require more memory and become slower.
            
             <p/>Compared to {@link DateField} the strings generated by the methods
             in this class take slightly more space, unless your selected resolution
             is set to <code>Resolution.DAY</code> or lower.
            
             <p/>
             Another approach is {@link NumericUtils}, which provides
             a sortable binary representation (prefix encoded) of numeric values, which
             date/time are.
             For indexing a {@link Date} or {@link Calendar}, just get the Unix timestamp as
             <code>long</code> using {@link Date#getTime} or {@link Calendar#getTimeInMillis} and
             index this as a numeric value with {@link NumericField}
             and use {@link NumericRangeQuery} to query it.
             </summary>
        </member>
        <member name="M:Raven.Client.Json.Serialization.NewtonsoftJson.Internal.Converters.DateTools.DateToString(System.DateTime,Raven.Client.Json.Serialization.NewtonsoftJson.Internal.Converters.DateTools.Resolution)">
             <summary> Converts a Date to a string suitable for indexing.
            
             </summary>
             <param name="date">the date to be converted
             </param>
             <param name="resolution">the desired resolution, see
             {@link #Round(Date, DateTools.Resolution)}
             </param>
             <returns> a string in format <code>yyyyMMddHHmmssSSS</code> or shorter,
             depending on <code>resolution</code>; using GMT as timezone
             </returns>
        </member>
        <member name="M:Raven.Client.Json.Serialization.NewtonsoftJson.Internal.Converters.DateTools.TimeToString(System.Int64,Raven.Client.Json.Serialization.NewtonsoftJson.Internal.Converters.DateTools.Resolution)">
             <summary> Converts a millisecond time to a string suitable for indexing.
            
             </summary>
             <param name="time">the date expressed as milliseconds since January 1, 1970, 00:00:00 GMT
             </param>
             <param name="resolution">the desired resolution, see
             {@link #Round(long, DateTools.Resolution)}
             </param>
             <returns> a string in format <code>yyyyMMddHHmmssSSS</code> or shorter,
             depending on <code>resolution</code>; using GMT as timezone
             </returns>
        </member>
        <member name="M:Raven.Client.Json.Serialization.NewtonsoftJson.Internal.Converters.DateTools.StringToTime(System.String)">
             <summary> Converts a string produced by <code>timeToString</code> or
             <code>DateToString</code> back to a time, represented as the
             number of milliseconds since January 1, 1970, 00:00:00 GMT.
            
             </summary>
             <param name="dateString">the date string to be converted
             </param>
             <returns> the number of milliseconds since January 1, 1970, 00:00:00 GMT
             </returns>
             <throws>  ParseException if <code>dateString</code> is not in the  </throws>
             <summary>  expected format
             </summary>
        </member>
        <member name="M:Raven.Client.Json.Serialization.NewtonsoftJson.Internal.Converters.DateTools.StringToDate(System.String)">
             <summary> Converts a string produced by <code>timeToString</code> or
             <code>DateToString</code> back to a time, represented as a
             Date object.
            
             </summary>
             <param name="dateString">the date string to be converted
             </param>
             <returns> the parsed time as a Date object
             </returns>
             <throws>  ParseException if <code>dateString</code> is not in the  </throws>
             <summary>  expected format
             </summary>
        </member>
        <member name="M:Raven.Client.Json.Serialization.NewtonsoftJson.Internal.Converters.DateTools.Round(System.DateTime,Raven.Client.Json.Serialization.NewtonsoftJson.Internal.Converters.DateTools.Resolution)">
            <summary>
            Limit a date's resolution. For example, the date <code>2004-09-21 13:50:11</code>
            will be changed to <code>2004-09-01 00:00:00</code> when using
            <code>Resolution.MONTH</code>.
            </summary>
            <param name="date">The date.</param>
            <param name="resolution">The desired resolution of the date to be returned</param>
            <returns>
            the date with all values more precise than <code>resolution</code>
            set to 0 or 1
            </returns>
        </member>
        <member name="M:Raven.Client.Json.Serialization.NewtonsoftJson.Internal.Converters.DateTools.Round(System.Int64,Raven.Client.Json.Serialization.NewtonsoftJson.Internal.Converters.DateTools.Resolution)">
             <summary> Limit a date's resolution. For example, the date <code>1095767411000</code>
             (which represents 2004-09-21 13:50:11) will be changed to
             <code>1093989600000</code> (2004-09-01 00:00:00) when using
             <code>Resolution.MONTH</code>.
            
             </summary>
             <param name="time">The time in milliseconds (not ticks).</param>
             <param name="resolution">The desired resolution of the date to be returned
             </param>
             <returns> the date with all values more precise than <code>resolution</code>
             set to 0 or 1, expressed as milliseconds since January 1, 1970, 00:00:00 GMT
             </returns>
        </member>
        <member name="T:Raven.Client.Json.Serialization.NewtonsoftJson.Internal.Converters.DateTools.Resolution">
            <summary>Specifies the time granularity. </summary>
        </member>
        <member name="F:Raven.Client.Json.Serialization.NewtonsoftJson.Internal.Converters.DateTools.Resolution.YEAR">
            <summary>
            Resolution by year
            </summary>
        </member>
        <member name="F:Raven.Client.Json.Serialization.NewtonsoftJson.Internal.Converters.DateTools.Resolution.MONTH">
            <summary>
            Resolution by month
            </summary>
        </member>
        <member name="F:Raven.Client.Json.Serialization.NewtonsoftJson.Internal.Converters.DateTools.Resolution.DAY">
            <summary>
            Resolution by day
            </summary>
        </member>
        <member name="F:Raven.Client.Json.Serialization.NewtonsoftJson.Internal.Converters.DateTools.Resolution.HOUR">
            <summary>
            Resolution by hour
            </summary>
        </member>
        <member name="F:Raven.Client.Json.Serialization.NewtonsoftJson.Internal.Converters.DateTools.Resolution.MINUTE">
            <summary>
            Resolution by minute
            </summary>
        </member>
        <member name="F:Raven.Client.Json.Serialization.NewtonsoftJson.Internal.Converters.DateTools.Resolution.SECOND">
            <summary>
            Resolution by second
            </summary>
        </member>
        <member name="F:Raven.Client.Json.Serialization.NewtonsoftJson.Internal.Converters.DateTools.Resolution.MILLISECOND">
            <summary>
            Resolution by millisecond
            </summary>
        </member>
        <member name="M:Raven.Client.Json.Serialization.NewtonsoftJson.Internal.Converters.DateTools.Resolution.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Raven.Client.Json.Serialization.NewtonsoftJson.Internal.Converters.JsonLinqEnumerableConverter">
            <summary>
            This converter is used when a property is a Linq-To-Entities query, enumerating and
            then serializing it as a json array.
            </summary>
        </member>
        <member name="M:Raven.Client.Json.Serialization.NewtonsoftJson.Internal.Converters.JsonLinqEnumerableConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <remarks>This will enumerate the Linq-To-Entities query before serializing it to json array</remarks>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="P:Raven.Client.Json.Serialization.NewtonsoftJson.Internal.Converters.JsonLinqEnumerableConverter.CanRead">
            <summary>
            Gets a value indicating whether this <see cref="T:Newtonsoft.Json.JsonConverter"/> can read JSON.
            </summary>
            <value><c>true</c> if this <see cref="T:Newtonsoft.Json.JsonConverter"/> can read JSON; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Raven.Client.Json.Serialization.NewtonsoftJson.Internal.Converters.JsonLinqEnumerableConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <remarks>
            this converter will never be needed to deserialize from json -
             built-in converter is enough as Json.Net serializes any collection - including IEnumerable{T} to json arrays.
            </remarks>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>executing this method will throw <see cref="T:System.NotSupportedException">NotSupportedException</see> since this converter should not be used for reading</returns>
        </member>
        <member name="M:Raven.Client.Json.Serialization.NewtonsoftJson.Internal.Converters.JsonLinqEnumerableConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Raven.Client.Json.Serialization.NewtonsoftJson.Internal.Converters.JsonLuceneDateTimeConverter">
            <summary>
            Convert a lucene data format to and from json values
            </summary>
        </member>
        <member name="M:Raven.Client.Json.Serialization.NewtonsoftJson.Internal.Converters.JsonLuceneDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:Raven.Client.Json.Serialization.NewtonsoftJson.Internal.Converters.JsonLuceneDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Raven.Client.Json.Serialization.NewtonsoftJson.Internal.Converters.JsonLuceneDateTimeConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Raven.Client.Json.Serialization.NewtonsoftJson.Internal.Converters.JsonLuceneDateTimeConverter.CanWrite">
            <summary>
            Gets a value indicating whether this <see cref="T:Newtonsoft.Json.JsonConverter"/> can write JSON.
            </summary>
            <value>
            	<c>true</c> if this <see cref="T:Newtonsoft.Json.JsonConverter"/> can write JSON; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Raven.Client.Json.Serialization.NewtonsoftJson.NewtonsoftJsonSerializationConventions.CustomizeJsonSerializer">
            <summary>
                Register an action to customize the json serializer used by the <see cref="!:DocumentStore" />
            </summary>
        </member>
        <member name="P:Raven.Client.Json.Serialization.NewtonsoftJson.NewtonsoftJsonSerializationConventions.CustomizeJsonDeserializer">
            <summary>
                Register an action to customize the json serializer used by the <see cref="!:DocumentStore" /> for deserializations.
                When creating a JsonSerializer, the CustomizeJsonSerializer is always called before CustomizeJsonDeserializer
            </summary>
        </member>
        <member name="P:Raven.Client.Json.Serialization.NewtonsoftJson.NewtonsoftJsonSerializationConventions.JsonContractResolver">
            <summary>
                Gets or sets the json contract resolver.
            </summary>
            <value>The json contract resolver.</value>
        </member>
        <member name="P:Raven.Client.ServerWide.Operations.DatabasePutResult.RaftCommandIndex">
            <summary>
            The Raft Command Index that was executed 
            </summary>
        </member>
        <member name="T:Raven.Client.ServerWide.Operations.DisableDatabaseToggleResult">
            <summary>
            The result of a disable or enable database
            </summary>
        </member>
        <member name="F:Raven.Client.ServerWide.Operations.DisableDatabaseToggleResult.Disabled">
            <summary>
             If database disabled.
            </summary>
        </member>
        <member name="F:Raven.Client.ServerWide.Operations.DisableDatabaseToggleResult.Name">
            <summary>
             Name of the database.
            </summary>
        </member>
        <member name="F:Raven.Client.ServerWide.Operations.DisableDatabaseToggleResult.Success">
            <summary>
             If request succeed.
            </summary>
        </member>
        <member name="F:Raven.Client.ServerWide.Operations.DisableDatabaseToggleResult.Reason">
            <summary>
            The reason for success or failure.
            </summary>
        </member>
        <member name="P:Raven.Client.ServerWide.Operations.Logs.GetLogsConfigurationResult.CurrentMode">
            <summary>
            Current mode that is active
            </summary>
        </member>
        <member name="P:Raven.Client.ServerWide.Operations.Logs.GetLogsConfigurationResult.Mode">
            <summary>
            Mode that is written in the configuration file and which will be used after server restart
            </summary>
        </member>
        <member name="P:Raven.Client.ServerWide.Operations.Logs.GetLogsConfigurationResult.Path">
            <summary>
            Path to which logs will be written
            </summary>
        </member>
        <member name="P:Raven.Client.ServerWide.Operations.Logs.GetLogsConfigurationResult.UseUtcTime">
            <summary>
            Indicates if logs will be written in UTC or in server local time
            </summary>
        </member>
        <member name="P:Raven.Client.ServerWide.Operations.Logs.GetLogsConfigurationResult.RetentionTime">
            <summary>
            Logs retention time
            </summary>
        </member>
        <member name="P:Raven.Client.ServerWide.Operations.Logs.GetLogsConfigurationResult.RetentionSize">
            <summary>
            Logs retention size (null if RetentionSize is long.MaxValue)
            </summary>
        </member>
        <member name="P:Raven.Client.ServerWide.Operations.Logs.GetLogsConfigurationResult.Compress">
            <summary>
            Are logs compressed
            </summary>
        </member>
        <member name="P:Raven.Client.ServerWide.Operations.ModifySolverResult.Key">
            <summary>
            Key of the database .
            </summary>
        </member>
        <member name="P:Raven.Client.ServerWide.Operations.ModifySolverResult.RaftCommandIndex">
            <summary>
            long? of the database after PUT operation.
            </summary>
        </member>
        <member name="P:Raven.Client.ServerWide.Tcp.AsyncTcpNegotiateParameters.ReadResponseAndGetVersionCallbackAsync">
             <summary>
             ReadResponseAndGetVersion Function should take care reading the TcpConnectionHeaderResponse respond from the input 'stream'
             And return the version of the supported TCP protocol.
            
             If the respond is 'Drop' the function should throw.
             If the respond is 'None' the function should throw.
             If the respond is 'TcpMismatch' the function should return the read version.
             </summary>
        </member>
        <member name="T:Raven.Client.Util.DisposableAction">
            <summary>
            A helper class that translate between Disposable and Action
            </summary>
        </member>
        <member name="M:Raven.Client.Util.DisposableAction.#ctor(System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Client.Util.DisposableAction"/> class.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Raven.Client.Util.DisposableAction.Dispose">
            <summary>
            Execute the relevant actions
            </summary>
        </member>
        <member name="T:Raven.Client.Util.IDisposalNotification">
            <summary>
            Provide a way for interested party to tell whether implementers have been disposed
            </summary>
        </member>
        <member name="E:Raven.Client.Util.IDisposalNotification.AfterDispose">
            <summary>
            Called after dispose is completed
            </summary>
        </member>
        <member name="P:Raven.Client.Util.IDisposalNotification.WasDisposed">
            <summary>
            Whether the instance has been disposed
            </summary>
        </member>
        <member name="T:Raven.Client.Util.Metrics.AtomicLong">
            <summary>
            Provides support for atomic operations around a <see cref="T:System.Int64" /> value
            </summary>
        </member>
        <member name="M:Raven.Client.Util.Metrics.AtomicLong.Get">
            <summary>
            Get the current value
            </summary>
        </member>
        <member name="M:Raven.Client.Util.Metrics.AtomicLong.Set(System.Int64)">
            <summary>
            Set to the given value
            </summary>
        </member>
        <member name="M:Raven.Client.Util.Metrics.AtomicLong.AddAndGet(System.Int64)">
            <summary>
            Atomically add the given value to the current value
            </summary>
        </member>
        <member name="M:Raven.Client.Util.Metrics.AtomicLong.IncrementAndGet">
            <summary>
            Atomically increments by one and returns the current value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Util.Metrics.AtomicLong.CompareAndSet(System.Int64,System.Int64)">
            <summary>
            Atomically set the value to the given updated value if the current value == expected value
            </summary>
            <param name="expected">The expected value</param>
            <param name="updated">The new value</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Util.Metrics.AtomicLong.GetAndSet(System.Int64)">
            <summary>
            Set to the given value and return the previous value
            </summary>
        </member>
        <member name="M:Raven.Client.Util.Metrics.AtomicLong.GetAndAdd(System.Int64)">
            <summary>
            Adds the given value and return the previous value
            </summary>
        </member>
        <member name="T:Raven.Client.Util.Metrics.EWMA">
            <summary>
             An exponentially-weighted moving average
            </summary>
            <see href="http://www.teamquest.com/pdfs/whitepaper/ldavg1.pdf"/>
            <see href="http://www.teamquest.com/pdfs/whitepaper/ldavg2.pdf" />
        </member>
        <member name="M:Raven.Client.Util.Metrics.EWMA.OneSecondEWMA">
            <summary>
            Creates a new EWMA which is equivalent to one second load average and which expects to be ticked every 1 seconds.
            </summary>
        </member>
        <member name="M:Raven.Client.Util.Metrics.EWMA.OneMinuteEWMA">
            <summary>
            Creates a new EWMA which is equivalent to the UNIX one minute load average and which expects to be ticked every 5 seconds.
            </summary>
        </member>
        <member name="M:Raven.Client.Util.Metrics.EWMA.FiveMinuteEWMA">
            <summary>
            Creates a new EWMA which is equivalent to the UNIX five minute load average and which expects to be ticked every 5 seconds.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Util.Metrics.EWMA.FifteenMinuteEWMA">
            <summary>
             Creates a new EWMA which is equivalent to the UNIX fifteen minute load average and which expects to be ticked every 5 seconds.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Raven.Client.Util.Metrics.EWMA.#ctor(System.Double,System.Int64,Raven.Client.Util.Metrics.TimeUnit)">
            <summary>
            Create a new EWMA with a specific smoothing constant.
            </summary>
            <param name="alpha">The smoothing constant</param>
            <param name="interval">The expected tick interval</param>
            <param name="intervalUnit">The time unit of the tick interval</param>
        </member>
        <member name="M:Raven.Client.Util.Metrics.EWMA.Update(System.Int64)">
            <summary>
             Update the moving average with a new value.
            </summary>
            <param name="n"></param>
        </member>
        <member name="M:Raven.Client.Util.Metrics.EWMA.Tick">
            <summary>
            Mark the passage of time and decay the current rate accordingly.
            </summary>
        </member>
        <member name="M:Raven.Client.Util.Metrics.EWMA.Rate(Raven.Client.Util.Metrics.TimeUnit)">
            <summary>
            Returns the rate in the given units of time.
            </summary>
        </member>
        <member name="T:Raven.Client.Util.Metrics.TimeUnit">
            <summary>
            Provides support for timing values
            <see href="http://download.oracle.com/javase/6/docs/api/java/util/concurrent/TimeUnit.html"/>
            </summary>
        </member>
        <member name="T:Raven.Client.Util.Metrics.TimeUnitExtensions">
            <summary>
            Provides enum methods for timing values
            </summary>
        </member>
        <member name="T:Raven.Client.Util.Metrics.VolatileDouble">
            <summary>
            Provides support for volatile operations around a <see cref="T:System.Double" /> value
            </summary>
        </member>
        <member name="T:Raven.Client.Util.ObjectReferenceEqualityComparer`1">
            <summary>
            A generic object comparer that would only use object's reference, 
            ignoring any <see cref="T:System.IEquatable`1"/> or <see cref="M:System.Object.Equals(System.Object)"/>  overrides.
            </summary>
        </member>
        <member name="F:Raven.Client.Util.ObjectReferenceEqualityComparer`1.Default">
            <summary>
            The default ObjectReferenceEqualityComparer instance
            </summary>
        </member>
        <member name="M:Raven.Client.Util.ObjectReferenceEqualityComparer`1.Equals(`0,`0)">
            <summary>
            When overridden in a derived class, determines whether two objects of type <typeparamref name="T"/> are equal.
            </summary>
            <returns>
            true if the specified objects are equal; otherwise, false.
            </returns>
            <param name="x">The first object to compare.</param><param name="y">The second object to compare.</param>
        </member>
        <member name="M:Raven.Client.Util.ObjectReferenceEqualityComparer`1.GetHashCode(`0)">
            <summary>
            When overridden in a derived class, serves as a hash function for the specified object for hashing algorithms and data structures, such as a hash table.
            </summary>
            <returns>
            A hash code for the specified object.
            </returns>
            <param name="obj">The object for which to get a hash code.</param><exception cref="T:System.ArgumentNullException">The type of <paramref name="obj"/> is a reference type and <paramref name="obj"/> is null.</exception>
        </member>
        <member name="T:Raven.Client.Util.RateLimiting.RateGate">
            <summary>
            http://www.jackleitch.net/2010/10/better-rate-limiting-with-dot-net/
            Used to control the rate of some occurrence per unit of time.
            </summary>
            <remarks>
                <para>
                To control the rate of an action using a <see cref="T:Raven.Client.Util.RateLimiting.RateGate"/>, 
                code should simply call <see cref="M:Raven.Client.Util.RateLimiting.RateGate.WaitToProceed"/> prior to 
                performing the action. <see cref="M:Raven.Client.Util.RateLimiting.RateGate.WaitToProceed"/> will block
                the current thread until the action is allowed based on the rate 
                limit.
                </para>
                <para>
                This class is thread safe. A single <see cref="T:Raven.Client.Util.RateLimiting.RateGate"/> instance 
                may be used to control the rate of an occurrence across multiple 
                threads.
                </para>
            </remarks>
        </member>
        <member name="P:Raven.Client.Util.RateLimiting.RateGate.Occurrences">
            <summary>
            Number of occurrences allowed per unit of time.
            </summary>
        </member>
        <member name="P:Raven.Client.Util.RateLimiting.RateGate.TimeUnitMilliseconds">
            <summary>
            The length of the time unit, in milliseconds.
            </summary>
        </member>
        <member name="M:Raven.Client.Util.RateLimiting.RateGate.#ctor(System.Int32,System.TimeSpan)">
            <summary>
            Initializes a <see cref="T:Raven.Client.Util.RateLimiting.RateGate"/> with a rate of <paramref name="occurrences"/> 
            per <paramref name="timeUnit"/>.
            </summary>
            <param name="occurrences">Number of occurrences allowed per unit of time.</param>
            <param name="timeUnit">Length of the time unit.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="occurrences"/> or <paramref name="timeUnit"/> is negative.
            </exception>
        </member>
        <member name="M:Raven.Client.Util.RateLimiting.RateGate.WaitToProceed(System.Int32)">
            <summary>
            Blocks the current thread until allowed to proceed or until the
            specified timeout elapses.
            </summary>
            <param name="millisecondsTimeout">Number of milliseconds to wait, or -1 to wait indefinitely.</param>
            <returns>true if the thread is allowed to proceed, or false if timed out</returns>
        </member>
        <member name="M:Raven.Client.Util.RateLimiting.RateGate.WaitToProceed(System.TimeSpan)">
            <summary>
            Blocks the current thread until allowed to proceed or until the
            specified timeout elapses.
            </summary>
            <param name="timeout"></param>
            <returns>true if the thread is allowed to proceed, or false if timed out</returns>
        </member>
        <member name="M:Raven.Client.Util.RateLimiting.RateGate.WaitToProceed">
            <summary>
            Blocks the current thread indefinitely until allowed to proceed.
            </summary>
        </member>
        <member name="M:Raven.Client.Util.RateLimiting.RateGate.Dispose">
            <summary>
            Releases unmanaged resources held by an instance of this class.
            </summary>
        </member>
        <member name="M:Raven.Client.Util.RateLimiting.RateGate.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged resources held by an instance of this class.
            </summary>
            <param name="isDisposing">Whether this object is being disposed.</param>
        </member>
        <member name="T:Raven.Client.Util.ReflectionUtil">
            <summary>
            Helper class for reflection operations
            </summary>
        </member>
        <member name="M:Raven.Client.Util.ReflectionUtil.GetFullNameWithoutVersionInformation(System.Type)">
            <summary>
            Gets the full name without version information.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <returns></returns>
        </member>
        <member name="F:Raven.Client.Util.SystemTime.UtcDateTime">
            <summary>
            Tests now run in parallel so this is no longer static to mitigate the possibility of getting incorrect results. Use DocumentDatabase.Time instead.
            </summary>
        </member>
        <member name="M:Raven.Client.Util.WebSocketStream.#ctor(System.Net.WebSockets.WebSocket,System.Threading.CancellationToken)">
            <summary>
            Initialize the stream. Assumes the websocket is initialized and connected
            </summary>
            <remarks>This is not a thread-safe implementation</remarks>
        </member>
        <member name="M:Raven.Client.Util.WebSocketStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <exception cref="T:System.ArgumentNullException"><paramref name="buffer"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Raven.Client.Util.WebSocketStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <exception cref="T:System.ArgumentNullException"><paramref name="buffer" /> is null.</exception>
        </member>
    </members>
</doc>
